[
  {
    "path": ".stylelintrc.json",
    "fileType": "json",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"plugins\": ["
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"stylelint-order\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"rules\": {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"color-no-invalid-hex\": true,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"string-no-newline\": true,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"unit-no-unknown\": true,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"property-no-unknown\": true,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"block-no-empty\": true,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"comment-no-empty\": true,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"no-extra-semicolons\": true,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"no-invalid-double-slash-comments\": true,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"declaration-no-important\": true,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"declaration-block-single-line-max-declarations\": 1,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"number-leading-zero\": \"never\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"number-no-trailing-zeros\": null,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"string-quotes\": \"single\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"length-zero-no-unit\": true,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"value-keyword-case\": \"lower\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"property-case\": \"lower\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"declaration-colon-space-after\": \"always\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"selector-type-case\": \"lower\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"selector-list-comma-newline-after\": \"always\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"no-eol-whitespace\": true,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"order/properties-alphabetical-order\": true,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"indentation\": 2"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 29
    }
  },
  {
    "path": ".travis.yml",
    "fileType": "yml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "language: java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "matrix:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  include:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    - name: Ubuntu 14.04 JDK 8"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "      os: linux"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "      jdk: openjdk8"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      before_install:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        - sudo apt-get update"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        - sudo apt-get --only-upgrade install openjdk-8-jdk"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        - echo -e \"Actual JDK in use -- \"; java -version"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    - name: macOS 10.13.6 JDK 8"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      os: osx"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      osx_image: xcode10.1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      env:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        - HOMEBREW_NO_AUTO_UPDATE\u003d1 # Prevent time-consuming brew update"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      before_install:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        - *common_before_install"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        - brew install cask"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        - brew cask install AdoptOpenJDK/openjdk/adoptopenjdk8"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        - export JAVA_HOME\u003d`/usr/libexec/java_home -v 1.8`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        - echo -e \"Actual JDK in use -- \"; java -version"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    - name: \"Cypress frontend tests\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      os: linux"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      dist: xenial"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      addons:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        chrome: stable"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      services:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        - xvfb"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      before_install:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        - *common_before_install"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        - sudo apt-get install -y libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      script:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        - ./gradlew frontendTest -Pci"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "script:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  - ./config/travis/run-checks.sh"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  - npm run lint"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  - time travis_retry ./gradlew clean checkstyleMain checkstyleTest test systemTest coverage"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "before_install: \u0026common_before_install"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  - npm install --only\u003ddev"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "before_cache:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "after_success:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  - git fetch --unshallow \u0026\u0026 ./gradlew run -Dargs\u003d\"-V\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "cache:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  npm: true,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  directories:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    - $HOME/.gradle/caches/"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    - $HOME/.gradle/wrapper/"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    - $HOME/Library/Caches/Homebrew"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    - $HOME/.cache"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "after_success:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  - bash \u003c(curl -s https://codecov.io/bash)"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 61
    }
  },
  {
    "path": "_reposense/config.json",
    "fileType": "json",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"ignoreGlobList\": [\"**.adoc\", \"collate**\"],"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\t\"formats\": [\"gradle\", \"pug\", \"java\", \"js\", \"md\", \"scss\", \"yml\"],"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"ignoreCommitList\": [\"7b96c563eb2d3612aa5275364333664a18f01491\","
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\"90018e49f129ce7e0abdc8b18e91c9813588c601\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\"b8dbc3cf3c7c334665a828cf4236dcb442228c94\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\"832dd728bbfa203d92e4548325d64d5a151c013f\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\"503c43ed1c90e8dcb46173c8f7c8e62f9286acbf\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\"14faede3d27097a74063fd407b210f8a5f7e3de5\"],"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"authors\":"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\t["
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\"githubId\": \"eugenepeh\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\"displayName\": \"Eugene\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\"authorNames\": [\"Eugene Peh\"]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t},"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\t\t{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\t\t\t\"githubId\": \"jamessspanggg\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\t\t\t\"displayName\": \"James\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\t\t\t\"authorNames\": [\"James Pang\"]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\t\t},"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\"githubId\": \"ongspxm\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\"displayName\": \"Metta\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\"authorNames\": [\"Metta Ong\"]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t},"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\"githubId\": \"yamidark\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\"displayName\": \"Jun An\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\"authorNames\": [\"Jun An\"],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\"ignoreGlobList\": [\"**.html\", \"**.jade\"]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t},"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\"githubId\": \"yong24s\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\"displayName\": \"Yong Hao\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\"authorNames\": [\"Yong Hao TENG\"],"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\"ignoreGlobList\": [\"**.css\", \"**.html\", \"**.jade\", \"**.js\"]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\t]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 6,
      "-": 34
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# RepoSense - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "Thank you for your interest in contributing to RepoSense!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "- [Setting up](#setting-up)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Prerequisites](#prerequisites)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Setting up the project in your computer using IntelliJ](#setting-up-the-project-in-your-computer-using-intellij)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Verifying the setup](#verifying-the-setup)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Configuring the Java coding style](#configuring-the-java-coding-style)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Configuring the JavaScript and CSS coding style](#configuring-the-javascript-and-css-coding-style)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Configuring Cypress for automated front-end testing](#configuring-cypress-for-automated-front-end-testing)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  - [(Optional) Using Vue.js devtools for frontend debugging on Chrome](#optional-using-vuejs-devtools-for-frontend-debugging-on-chrome)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Before writing code](#before-writing-code)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Building and running RepoSense from code](#building-and-running-reposense-from-code)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "- [Architecture](#architecture)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Parser](#parserconfigparser)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Git](#git)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  - [CommitsReporter](#commitsreporter)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  - [AuthorshipReporter](#authorshipreporter)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  - [ReportGenerator](#reportgeneratormain)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  - [System](#system)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Model](#model)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "- [HTML Report](#html-report)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Report Architecture](#report-architecture)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Javascript Files](#javascript-files)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  - [JSON Report Files](#json-report-files)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Main](#main-mainjs)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Data loader](#data-loader-apijs)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Summary View](#summary-view-v_summaryjs)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Authorship View](#authorship-view-v_authorshipjs)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Zoom View](#zoom-view-v_zoomjs)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Ramp View](#ramp-view-v_rampjs)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Segment View](#segment-view-v_segmentjs)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "### Prerequisites"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "1. **JDK `1.8.0_60`** or later. You may download the JDK [here](https://www.oracle.com/technetwork/java/javase/downloads/index.html)."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "1. **git `2.14`** or later on the command line. You may download git [here](https://git-scm.com/downloads)."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " \u003e Type `git --version` on your OS terminal and ensure that you have the correct version of **git**."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "### Setting up the project in your computer using IntelliJ"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "1. Fork this repo, and clone the fork to your computer."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open *IntelliJ* (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct *JDK* version for *Gradle*."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    1. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    1. Click `New…​` and find the directory of the *JDK*."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the `build.gradle` file and select it. Click `OK`."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that the selected version of `Gradle JVM` matches our prerequisite."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `OK` to accept the all the other default settings."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "### Verifying the setup"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that *Gradle* builds without error by running the command `gradlew clean build`, and ensure that it finishs with a `BUILD SUCCESSFUL` message."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "1. Run the tests to ensure that they all pass by running the command `gradlew test systemtest`, and ensure that it finishs with a `BUILD SUCCESSFUL` message."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003e Ensure that you are on the project root directory when using the `gradlew` commands."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "### Configuring the Java coding style"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "This project follows [oss-generic coding standards](https://oss-generic.github.io/process/docs/CodingStandards.html). *IntelliJ’s* default style is mostly compliant with our *Java* coding convention but it uses a different import order from ours. To rectify,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "1. Go to `File` \u003e `Settings…`​ (*Windows/Linux*), or `IntelliJ IDEA` \u003e `Preferences…`​ (*macOS*)."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Editor` \u003e `Code Style` \u003e `Java`."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click on the `Imports` tab to set the order"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   * For `Class count to use import with \u0027*\u0027` and `Names count to use static import with \u0027*\u0027`: Set to `999` to prevent IntelliJ from contracting the import statements"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "   * For `Import Layout`, follow this image below:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "   ![import-order](images/import-order.png)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can follow the [Using Checkstyle](UsingCheckstyle.md) document to configure *Intellij* to check style-compliance as you write code."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "### Configuring the JavaScript and CSS coding style"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "Our project follows the [Airbnb Javascript Style Guide](https://github.com/airbnb/javascript) and [OSS CSS Coding Standard](https://oss-generic.github.io/process/codingStandards/CodingStandard-Css.html), which is governed by the Eslint and Stylelint respectively. Their configuration files can be found at the root of the project. Please run a `npm run lint` from the project root directory and fix all of the lint errors before committing your code for final review."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "Eslint, Stylelint and their accompanying modules can be installed through NPM, so do ensure that you got it [installed](https://www.npmjs.com/get-npm) if you are working on the report."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "### Configuring Cypress for automated front-end testing"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "We use [Cypress](https://www.cypress.io/) for automated end-to-end front-end testing. \u003cbr/\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "#### To write tests"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "1. Create a new test file in `frontend/cypress/tests`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "1. At project root start *Cypress Test Runner* by running `gradlew cypress`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "1. On the top right hand corner, set `Chrome` as the default browser"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "1. Under **Integration Tests**, click on the newly created test file to run it"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "![Cypress Test Runner](images/cypress-test-runner.jpg \"Cypress Test Runner\")"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Read [Cypress\u0027s Documentation](https://docs.cypress.io/api/commands/document.html#Syntax) to familiarize yourself with its syntax and [Cypress\u0027s debugging guide](https://docs.cypress.io/guides/guides/debugging.html#Log-Cypress-events) to tackle problems with your tests."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "#### To run all tests locally"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "1.  At project root, run `gradlew frontendTest`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e If you encountered an invalid browser error, please ensure that you have `Chrome` installed in the default installation directory. Otherwise, follow the instructions [here](https://docs.cypress.io/guides/guides/debugging.html#Launching-browsers) to create symbolic links so Cypress can locate `Chrome` in your system."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "### (Optional) Using Vue.js devtools for frontend debugging on Chrome"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "1. On your Chrome, visit the website of [Vue.js devtools](https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd) and add the extension. "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "1. Go the detail page of this extension in Chrome\u0027s extension management panel and select `Allow access to file URLs`. If you are unable to locate it, copy the link: `chrome://extensions/?id\u003dnhdogjmejiglipccpnnnanhbledajbpd` and visit it on your Chrome."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open any report generated by RepoSense."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "1. Press `F12` or right click and choose `inspect` at the report page."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "1. Choose `Vue` at the navigation bar."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "![Choose Vue](images/choose-vue.png)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "1. Debug using the tool."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "![Use Vue](images/use-vue.png)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e See its [Github](https://github.com/vuejs/vue-devtools) page for more details."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "### Before writing code"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "1. Do check out our [process guide](../docs/Process.md) before submitting any PR with your changes."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "### Building and running RepoSense from code"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "1. Execute the following command on the OS terminal inside the project directory. \u003cbr/\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "Usage: `gradlew run -Dargs\u003d\"([--config CONFIG_FOLDER] | [--repos REPO_PATH_OR_URL...]) [--view [REPORT_FOLDER]] [--output OUTPUT_DIRECTORY] [--since DD/MM/YYYY] [--until DD/MM/YYYY] [--formats FORMAT...] [--ignore-standalone-config] [--timezone ZONE_ID[±hh[mm]]]\"` \u003cbr/\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Named Arguments: "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "--help, -h           Show help message."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "--version, -V        Show the version of RepoSense."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "--view [PATH], -v [PATH]"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                     Starts a server to display the report in the"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                     provided directory. If used as a flag (with no"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                     argument), generates a report and automatically"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                     displays the report."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "--output PATH, -o PATH"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                     The directory to output the report folder,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                     reposense-report. If not provided, the report"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                     folder will be created in the current working"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                     directory."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "--since dd/MM/yyyy, -s dd/MM/yyyy"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                     The date to start filtering."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "--until dd/MM/yyyy, -u dd/MM/yyyy"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                     The date to stop filtering."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "--formats [FORMAT [FORMAT ...]], -f [FORMAT [FORMAT ...]]"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                     The alphanumeric file formats to process."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                     If not provided, all file formats will be"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                     used."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                     Please refer to userguide for more information."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "--ignore-standalone-config, -i"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                     A flag to ignore the standalone config file in"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                     the repo."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "--timezone ZONE_ID[±hh[mm]], -t ZONE_ID[±hh[mm]]"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                     The timezone to use for the generated report. "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                     One kind of valid timezones is relative to UTC. "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                     E.g. UTC, UTC+08, UTC-1030."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                     If not provided, system default timezone will be used."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "--config PATH, -c PATH"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                     The directory containing the config files. If not"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                     provided, the config files will be obtained from"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                     the current working directory."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "--repo LOCATION [LOCATION ...], --repos LOCATION [LOCATION ...], -r LOCATION [LOCATION ...]"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                     The GitHub URL or disk locations to clone repository."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "Sample usage to generate the report with no specify arguments: (find and use config files in current working directory)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "gradlew run"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "Sample usage to generate the report with config files and automatically open the report:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "gradlew run -Dargs\u003d\"--config ./configs/ --output output_path/ --since 21/10/2017 --until 21/11/2017 --formats java adoc js --view\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "Sample usage to generate the report with config files and choose the timezone used to be UTC+8:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "gradlew run -Dargs\u003d\"--config ./configs/ --output output_path/ --timezone UTC+08\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "Sample usage to generate the report with repository locations and automatically open the report:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "gradlew run -Dargs\u003d\"--repos https://github.com/reposense/RepoSense.git https://github.com/se-edu/collate.git --output output_path/ --since 21/10/2017 --until 21/11/2017 --formats java adoc js --view\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "Sample usage to generate the report with repository locations but ignore the standalone config file:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "gradlew run -Dargs\u003d\"--repos https://github.com/reposense/RepoSense.git https://github.com/se-edu/collate.git --ignore-standalone-config\""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "Sample usage to view the report:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "gradlew run -Dargs\u003d\"--view output_path/reposense-report\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "Sample usage to generate the report with config files using the alias of argument:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "gradlew run -Dargs\u003d\"-c ./configs/ -o output_path/ -s 21/10/2017 -u 21/11/2017 -f java adoc js\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "`-Dargs\u003d\"...\"` uses the same argument format as mentioned above."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "## Architecture"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": " ![architecture](images/architecture.png)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "*Figure 1. Overall architecture of RepoSense*"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "### Parser(ConfigParser)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "[`Parser`](/src/main/java/reposense/parser) contains three components:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": " * [`ArgsParser`](/src/main/java/reposense/parser/ArgsParser.java): Parses the user-supplied command line arguments into a `CliArguments` object."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": " * [`CsvParser`](/src/main/java/reposense/parser/CsvParser.java): Abstract generic class for CSV parsing functionality. The following three classes extend `CsvParser`."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "   * [`AuthorConfigCsvParser`](/src/main/java/reposense/parser/AuthorConfigCsvParser.java): Parses the `author-config.csv` config file into a list of `AuthorConfiguration` for each repository to analyze."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "   * [`GroupConfigCsvParser`](/src/main/java/reposense/parser/GroupConfigCsvParser.java) Parses the `group-config.csv` config file into a list of `GroupConfiguration` for each repository to analyze."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "   * [`RepoConfigCsvParser`](/src/main/java/reposense/parser/RepoConfigCsvParser.java): Parses the `repo-config.csv` config file into a list of `RepoConfiguration` for each repository to analyze."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": " * [`JsonParser`](/src/main/java/reposense/parser/JsonParser.java): Abstract generic class for JSON parsing functionality. The following class extends `JsonParser` class:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "   * [`StandaloneConfigJsonParser`](/src/main/java/reposense/parser/StandaloneConfigJsonParser.java): Parses the `_reposense/config.json` config file into a `StandaloneConfig`."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "### Git"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "[`Git`](/src/main/java/reposense/git) package contains the wrapper classes for respective *git* commands."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitBlame`](/src/main/java/reposense/git/GitBlame.java): Wrapper class for `git blame` functionality. Traces the revision and author last modified each line of a file."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitBranch`](/src/main/java/reposense/git/GitBranch.java): Wrapper class for `git branch` functionality. Gets the name of the working branch of the target repo."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitCheckout`](/src/main/java/reposense/git/GitCheckout.java): Wrapper class for `git checkout` functionality. Checks out the repository by branch name or commit hash."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitClone`](/src/main/java/reposense/git/GitClone.java): Wrapper class for `git clone` functionality. Clones the repository from *GitHub* into a temporary folder in order to run the analysis."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitDiff`](/src/main/java/reposense/git/GitDiff.java): Wrapper class for `git diff` functionality. Obtains the changes between commits."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitLog`](/src/main/java/reposense/git/GitLog.java): Wrapper class for `git log` functionality. Obtains the commit logs and the authors\u0027 info."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitLsTree`](/src/main/java/reposense/git/GitLsTree.java): Wrapper class for `git ls-tree` functionality. Ensures that the tracked files do not contain any paths with illegal characters for Windows users."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitRevList`](/src/main/java/reposense/git/GitRevList.java): Wrapper class for `git rev-list` functionality. Retrieves the commit objects in reverse chronological order."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitRevParse`](/src/main/java/reposense/git/GitRevParse.java): Wrapper class for `git rev-parse` functionality. Ensures that the branch of the repo is to be analyzed exists."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitShortlog`](/src/main/java/reposense/git/GitShortlog.java): Wrapper class for `git shortlog` functionality. Obtains the list of authors who have contributed to the target repo."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitUtil`](/src/main/java/reposense/git/GitUtil.java): Contains helper functions used by the other Git classes above."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "### CommitsReporter"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "[`CommitsReporter`](/src/main/java/reposense/commits/CommitsReporter.java) is responsible for analyzing the **commit** history and generating a [`CommitContributionSummary`](/src/main/java/reposense/commits/model/CommitContributionSummary.java) for each repository. `CommitContributionSummary` contains information such as each author\u0027s daily and weekly contribution and the variance of their contribution. `CommitsReporter`,"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses [`CommitInfoExtractor`](/src/main/java/reposense/commits/CommitInfoExtractor.java) to run the `git log` command, which generates the statistics of each commit made within date range."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": " 1. generates a [`CommitInfo`](/src/main/java/reposense/commits/model/CommitInfo.java) for each commit, which contains the `infoLine` and `statLine`."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses [`CommitInfoAnalyzer`](/src/main/java/reposense/commits/CommitInfoAnalyzer.java) to extract the relevant data from `CommitInfo` into a [`CommitResult`](/src/main/java/reposense/commits/model/CommitResult.java), such as the number of line insertions and deletions in the commit and the author of the commit."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses [`CommitResultAggregator`](/src/main/java/reposense/commits/CommitResultAggregator.java) to aggregate all `CommitResult` into a [`CommitContributionSummary`](/src/main/java/reposense/commits/model/CommitContributionSummary.java)."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "### AuthorshipReporter"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "[`AuthorshipReporter`](/src/main/java/reposense/authorship/AuthorshipReporter.java) is responsible for analyzing the white listed **files**, traces the original author for each line of text/code, and generating an [`AuthorshipSummary`](/src/main/java/reposense/authorship/model/AuthorshipSummary.java) for each repository. `AuthorshipSummary` contains the analysis results of the white listed files and the amount of line contributions each author made. `AuthorshipReporter`,"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses [`FileInfoExtractor`](/src/main/java/reposense/authorship/FileInfoExtractor.java) to traverse the repository to find all relevant files."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": " 1. generates a [`FileInfo`](/src/main/java/reposense/authorship/model/FileInfo.java) for each relevant file, which contains the path to the file and a list of [`LineInfo`](/src/main/java/reposense/authorship/model/LineInfo.java) representing each line of the file."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses [`FileInfoAnalyzer`](/src/main/java/reposense/authorship/FileInfoAnalyzer.java) to analyze each file, using `git blame` or annotations, and finds the `Author` for each `LineInfo`."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": " 1. generates a [`FileResult`](/src/main/java/reposense/authorship/model/FileResult.java) for each file, which consolidates the authorship results into a *Map* of each author\u0027s line contribution to the file."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses [`FileResultAggregator`](/src/main/java/reposense/authorship/FileResultAggregator.java) to aggregate all `FileResult` into an `AuthorshipSummary`."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "### ReportGenerator(Main)"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "[`ReportGenerator`](/src/main/java/reposense/report/ReportGenerator.java),"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses `GitClone` API to clone the repository from *GitHub*."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": " 1. copies the template files into the designated output directory."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses `CommitReporter` and `AuthorshipReporter` to produce the commit and authorship summary respectively."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": " 1. generates the `JSON` files needed to generate the `HTML` report."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "### System"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "[`System`](/src/main/java/reposense/system) contains the classes that interact with the Operating System and external processes."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": " * [`CommandRunner`](/src/main/java/reposense/system/CommandRunner.java) creates processes that executes commands on the terminal. It consists of many *git* commands."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": " * [`LogsManager`](/src/main/java/reposense/system/LogsManager.java) uses the `java.util.logging` package for logging. The `LogsManager` class is used to manage the logging levels and logging destinations. Log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": " * [`ReportServer`](/src/main/java/reposense/system/ReportServer.java) starts a server to display the report on the browser. It depends on the `net.freeutils.httpserver` package."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "### Model"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "[`Model`](/src/main/java/reposense/model) holds the data structures that are commonly used by the different aspects of *RepoSense*."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": " * [`Author`](/src/main/java/reposense/model/Author.java) stores the `GitHub ID` of an author. Any contributions or commits made by the author, using his/her `GitHub ID` or aliases, will be attributed to the same `Author` object. It is used by `AuthorshipReporter` and `CommitsReporter` to attribute the commit and file contributions to the respective authors."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": " * [`CliArguments`](/src/main/java/reposense/model/CliArguments.java) stores the parsed command line arguments supplied by the user. It contains the configuration settings such as the CSV config file to read from, the directory to output the report to, and date range of commits to analyze. These configuration settings are passed into `RepoConfiguration`."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": " * [`FileTypeManager`](/src/main/java/reposense/model/FileTypeManager.java) stores the file format to be analyzed and the custom groups specified by the user for any repository."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": " * [`RepoConfiguration`](/src/main/java/reposense/model/RepoConfiguration.java) stores the configuration information from the CSV config file for a single repository, which are the repository\u0027s orgarization, name, branch, list of authors to analyse, date range to analyze commits and files from `CliArguments`."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": " These configuration information are used by:"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    - `GitClone` to determine the location to clone the repository from and which branch to check out to."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    - `AuthorshipReporter` and `CommitsReporter` to determine the range of commits and files to analyze."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    - `ReportGenerator` to determine the directory to output the report."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "## HTML Report"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "The source files for the report is located in [`frontend/src`](../frontend/src) and is built by [spuild](https://github.com/ongspxm/spuild2) before being packaged into the JAR file to be extracted as part of the report."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "The main HTML file is generated from [`frontend/src/index.pug`](../frontend/src/index.pug)."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "[Vue](https://vuejs.org/v2/api/) (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. It is heavily utilized in the report to dynamically update the information in the various views. (Style guide available [here](https://vuejs.org/v2/style-guide/), Developer tool available [here](https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd)). Vue lifecycle hooks are the defined methods which gets executed in a certain stage of the Vue object lifespan. The following is the Vue lifecycle diagram taken from [here](https://vuejs.org/v2/guide/instance.html#Lifecycle-Diagram) indicating the hook sequence:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "![vue lifecycle diagram](images/vue-lifecycle-diagram.png)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "The following is a snapshot of the report:"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "![report screenshot](images/report-summary.png)"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "### Report Architecture"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "![report architecture](images/report-architecture.png)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "The main Vue object (`window.app`) is responsible for the loading of the report (through `summary.json`). Its `repos` attribute is tied to the global `window.REPOS`, and is passed into the various other modules when the information is needed."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "`window.app` is broken down into two main parts"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "- the summary view"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "- and the tabbed interface"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "The summary view acts as the main report which shows the various calculations. \u003c/br\u003e"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "The tabbed interface is responsible for loading various modules such as authorship and zoom to display additional information."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "### Javascript Files"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- [**main.js**](#main-mainjs) - main controller that pushes content into different modules"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- [**api.js**](#data-loader-apijs) - loading and parsing of the report content"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- [**v_summary.js**](#summary-view-v_summaryjs) - module that supports the summary view"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- [**v_authorship.js**](#authorship-view-v_authorshipjs) - module that supports the authorship tab view"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- [**v_zoom.js**](#zoom-view-v_zoomjs) - module that supports the zoom tab view"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- [**v_ramp.js**](#ramp-view-v_rampjs) - module that supports the ramp chart view"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- [**v_segment.js**](#segment-view-v_segmentjs) - module that supports the code segment view"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "### JSON Report Files"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "- **summary.json** - a list of all the repositories and their respective details"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "- **projName/commits.json** - contains information of the users\u0027 commits information (e.g. line deletion, insertion, etc), grouped by date"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "- **projName/authorship.json** - contains information from git blame, detailing the author of each line for all the processed files"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "### Main ([main.js](../frontend/src/static/js/main.js))"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "This contains the logic for main VueJS object, `window.app`, which is responsible for passing the necessary data into the relevant modules to be loaded."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "`v_summary`, `v_authorship`, `v_zoom`, `v_segment` and `v_ramp` are components which will be embedded into report and will render the corresponding content based on the data passed into it from the main `window.app`."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "#### Loading of report information"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "The main Vue object depends on the `summary.json` data to determine the right `commits.json` files to load into memory. This is handled by `api.js` which loads the relevant file information from the network files if it is available, otherwise a report archive, `archive.zip`, have to be used."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "Once the relevant `commit.json` files are loaded, all the repo information will be passed into `v_summary` to be loaded in the summary view as the relevant ramp charts."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "#### Activating additional view modules"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "Most activity or actions should happen within the module itself, but in the case where there is a need to spawn or alter the view of another module, an event is emitted from the first module to the main Vue object (`window.app`), which then handles the data received and passes it along to the relevant modules."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "#### Hash link"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "Other than the global main Vue object, another global variable we have is the `window.hashParams`. This object is reponsible for generating the relevant permalink for a specific view of the summary module for the report."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "### Data loader ([api.js](../frontend/src/static/js/api.js))"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "This is the module that is in charge of loading and parsing the data files generated as part of the report."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "#### Loading from ZIP file"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "Due to security design, most modern browsers (e.g. Chrome) do not allow web pages to obtain local files using the directory alone. As such, a ZIP archive of the report information will be produced alongside the report generation."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "This archive will be used in place of the network files to load information into the report, in the case when the network files are unavailable."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "The API module will be handling all request for all the JSON data files. If the network file is not available, the files will be obtained from the zip archive provided."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "#### Retrieving and parsing information"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "After the JSON files are loaded from their respective sources, the data will be parsed as objects and included inside the global storage object, `window.REPOS`,  in the right format."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "For the basic skeleton of `window.REPOS`, refer to the generated `summary.json` file in the report for more details."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "### Summary View ([v_summary.js](../frontend/src/static/js/v_summary.js))"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "The `v_summary` module is in charge of loading the ramp charts from the corresponding `commits.json`."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "![summary architecture](images/report-architecture-summary.png)"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "#### Initializing the data for the ramp charts"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "The summary module is activated after the information is loaded from the main Vue.JS object. At creation, the `repo` attribute is populated with the `window.REPOS` object, which contains information loaded from `summary.json`."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "#### Filtering users and repositories"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "The commits information is retrieved from the corresponding project folders for each repository. These information will be filtered and sorted before passed into the template to be displayed as ramp charts."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "### Authorship View ([v_authorship.js](../frontend/src/static/js/v_authorship.js))"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "The authorship module retrieves the relevant information from the corresponding `authorship.json` file if it is not yet loaded. If it has been loaded, the data will be written into `window.REPOS` and be read from there instead."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "![authorship architecture](images/report-architecture-authorship.png)"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "#### Showing relevant information by authors"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "The files will be filtered, picking only files the selected author has written in. The lines are then split into chunks of \"touched\" and \"untouched\" code segments to be displayed in the tab view which will be popped up on the right side of the screen."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "### Zoom View ([v_zoom.js](../frontend/src/static/js/v_zoom.js))"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "The `v_zoom` module is in charge of filtering and displaying the commits from selected sub-range of a ramp chart. "
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "### Ramp View ([v_ramp.js](../frontend/src/static/js/v_ramp.js))"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "The `v_ramp` module is responsible for receiving the relevant information from `v_summary` and generating ramp charts that contain ramp slices."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "#### Padding for dates"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "For ramps between the date ranges, the slices will be selected and it will be pre and post padded with empty slices to align the ramp slice between the `sinceDate` and `untilDate`. The ramps will then be rendered with the slices in the right position."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "### Segment View ([v_segment.js](../frontend/src/static/js/v_segment.js))"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "The `v-segment` module is used as a component in `v_authorship`. It separates the code in terms of \"touched\" and \"untouched\" segments and only loads each \"untouched\" segment when it is toggled. "
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 35,
      "-": 321
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# RepoSense - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "* [Getting Started](#getting-started)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "* [Interpreting the Report](#interpreting-the-report)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Chart Panel](#chart-panel)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Code Panel](#code-panel)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Commits Panel](#commits-panel)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Tool Bar](#tool-bar)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "* [Configuring a Repo to Provide Additional Data to RepoSense](#configuring-a-repo-to-provide-additional-data-to-reposense)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Provide Data Using a json Config File](#provide-data-using-a-json-config-file)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Provide Data Using `@@author` Tags](#provide-data-using-author-tags)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Customizing the Analysis](#customizing-the-analysis)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Customize Using Command Line Parameters](#customize-using-command-line-parameters)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Customize Using csv Config Files](#customize-using-csv-config-files)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    * [`repo-config.csv`](#repo-configcsv)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    * [`author-config.csv`](#author-configcsv)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    * [`group-config.csv`](#group-configcsv)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* [Analyzing Multiple Repos](#analyzing-multiple-repos)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "* [Quickstart RepoSense with Netlify](#quickstart-reposense-with-netlify)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* [Using Travis-CI to automate publishing of the report to GitHub Pages](#using-travis-ci-to-automate-publishing-of-the-report-to-github-pages)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "* [FAQ](#faq)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "## Getting Started"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "First, ensure that you have the necessary prerequisites:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "* **Java 8** (JRE `1.8.0_60`) or later. You may download Java [here](https://www.java.com/en/)."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* **git `2.14`** or later on the command line (run `git --version` in your OS terminal to confirm). You may download git [here](https://git-scm.com/downloads)."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "Next, download the latest executable Jar from our [releases](https://github.com/reposense/RepoSense/releases/latest). Alternatively, you can follow this guide on [Using RepoSense with Netlify](UserGuide.md#using-reposense-with-netlify) which will allow you to use the latest version of RepoSense online without having to download any files."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "The simplest use case for RepoSense is to generate a report for the entire history of a repo. Here are the steps:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "1. Generate the report for the repo by executing the following command in a terminal:\u003cbr/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   Format : `java -jar RepoSense.jar --repo FULL_REPO_URL` (note the `.git` at the end)\u003cbr\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   Example: `java -jar RepoSense.jar --repo https://github.com/reposense/RepoSense.git`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Note: The above command will analyze the commits made within one month from the date of report generation. Append `--since d1` if you wish to analyze from the date of the first commit. "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "1. The previous step analyzes the default branch of the repo and creates the report in a directory named `reposense-report`. Run the following command to view the report (it will open up in your default Browser):\u003cbr/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   `java -jar RepoSense.jar --view reposense-report`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you can combine the 2 steps by running the following command to generate the report and automatically open it afterwards:\u003cbr\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    `java -jar RepoSense.jar --repo FULL_REPO_URL --view`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "## Interpreting the Report"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "As the report consist of static pages, it can be viewed using a Web Browser, and can be deployed on most Web hosting platforms (such as [GitHub Pages](https://pages.github.com/)). Assuming the report has been generated already, here are the two options to load the report onto a Browser:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* Run RepoSense with the `--view` option:\u003cbr\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  Format: `java -jar RepoSense.jar --view REPORT_FOLDER`\u003cbr\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  Example: `java -jar RepoSense.jar --view ./myReport/reposense-report`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "* Open the `index.html` (in the report directory) using a Browser and if the report was not loaded automatically, upload the `archive.zip` (in the same directory) manually."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "Here is an example of how the report looks like:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "![report](images/report-features.png)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "It consists of four main parts: the [_Chart Panel_](#chart-panel), the [_Code Panel_](#code-panel), the [_Commits Panel_](#commits-panel), and the [_Tool Bar_](#tool-bar), each of which is explained in the sections below."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "### Chart Panel"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "![Ramp Charts](images/rampchart.png)\u003cbr\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "The `Chart Panel` (an example is shown above) contains _Ramp Charts_ and _Contribution Bars_."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "**Ramp Chart**: This is a visualization of frequency and quantity of contributions of an author for a specific repository."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "* **Title**: Each title consists of the **index**, the **name** of the author, number of lines written to the repo, a button to view author\u0027s **code**, a button to view author\u0027s **repo** and a button to view the **commits** made by the author."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "* **Rows**: Each _row_ (i.e., light blue rectangle) represents the contribution timeline of an author for a specific repository."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "* **Ramp**: Each row contains **ramps** -- the pointy saw-tooth shapes you see in the screenshot above. A ramp represents the contributions of an author possibly aggregated over a period (e.g., a day or a week)."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  * The area of the ramp is proportional to the amount of contribution the author did at that time period."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  * The position of the right edge of the ramp (perpendicular to the blue bar) represents the period (the day or the week) in which the contribution was made."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  * Hover the pointer over a ramp to see the total number of lines represented by that ramp."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  * Click on the ramp to see on GitHub the list of commits represented by that ramp."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "* To make comparison between two authors easier, the color of the ramps that represent different authors\u0027 contributions at the same time period are the same."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "* Ramps representing big contributions can overlap with earlier time periods. This represents the possibility that if the work committed during a specific period is big, it could have started in an earlier time period."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "**Contribution Bar**: The total amount of code contributed by an author during the _total analysis period_ is represented by the length of the **red bars** (called _contribution bars_) that appear at the bottom of the row."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "* Hover over a contribution bar to see the exact amount of the contribution."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "* If an author contributed significantly higher than other authors, the contribution bar can span multiple lines (see the 2nd author in the screenshot for an example)."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "### Code Panel"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "The `Code Panel` allows users to see the code attributed to a specific author. Click on the `\u003c/\u003e` icon beside the name of the author in the `Chart Panel` to display the `Code Panel` on the right."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "* The Code Panel shows the files that contain author\u0027s contributions, sorted by the number of lines written."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "* Select the radio button to enable one of the following 2 filters. Note that only 1 of the 2 filters is active at any time."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    * Type file path glob in glob filter to include files matching the glob expression."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    * Select the checkboxes to include files of preferred file extensions."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "* Clicking the file title toggles the file content."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "* Clicking the first icon beside the file title opens the history view of the file on github."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "* Clicking the second icon beside the file title opens the blame view of the file on github."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "* Code attributed to the author is highlighted in green."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "* Non-trivial code segments that are not written by the selected author are hidden by default, but you can toggle them by clicking on the :heavy_plus_sign: icon."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "### Commits Panel"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"/docs/images/commits-panel.png\" alt\u003d\"commits panel\" width\u003d\"468\"\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "The `Commits Panel` allows users to see the commits attributed to a specific author. Hold `Command`\u0026#8984; **(MacOS)** or `Ctrl` **(other OSes)** and click on the ramp chart in the `Chart Panel` to select the time range where you want to display the `Commit Panel` for on the right. \u003cbr\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "![Opening commits panel](/docs/images/opening-commits-panel.gif)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "* The `Commits Panel` shows the commits that contain author\u0027s contributions."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "* The commits can be sorted by the date it was committed or by LoC."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "* The tags of the commits will also be displayed on top, if any."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "* Clicking on a tag will direct you to the commit having that particular tag."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "* The date range for the `Chart Panel` can be updated by clicking on the \"Show ramp chart for this period\" below the name of the author."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "* The ramp slices displayed in the ramp chart for the `Commits Panel` represents individual commits."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "* The commit messages body can be expanded or collapsed by clicking on the `...` icon beside each commit message title."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* To promote and encourage the 50/72 rule for commit messages, a dotted border will be shown for:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  * Commit message subject that exceeds 50 characters."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  * Commit message body after the 72nd character mark."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "### Tool Bar"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "The `Tool Bar` at the top provides a set of configuration options that control the Chart Panel."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "* `Search` : filters the author and repository by keywords."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  * Multiple keywords/terms can be used, separated by spaces."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  * Entries that contain _any_ (not necessarily _all_) of the search terms will be displayed."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  * The keywords used to filter author and repository are case-insensitive."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "* `Group by` : grouping criteria for the rows of results"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  * `None` : results will not be grouped in any particular way."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "  * `Repo/Branch` : results will be grouped by repositories and its\u0027 associating branches."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  * `Author` : results will be grouped by the name of the author. Contributions made to multiple repositories by a particular author will be grouped under the author."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "* `Sort groups by`: sorting criteria for the main group. See note [1] below."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  * `Group title` : groups will be sorted by the title of the group (in bold text) in alphabetical order."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  * `Contribution` : groups will be sorted by the combined contributions within a group, in the order of number of lines added"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  * `Variance` : groups will be sorted by how far the daily contributions are spread out from their average value among all authors involved. Detailed definition of variance is located [here](https://en.wikipedia.org/wiki/Variance)."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "* `Sort within groups by`: sorting criteria within each group"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  * `Title` : each group will be internally sorted by it\u0027s title in alphabetical order."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  * `Contribution` : each group will be internally sorted by individual contributions in the order of number of lines added"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  * `Variance` : each group will be internally sorted by how far the daily contributions are spread out from their average value by each author into a particular repo. Detailed definition of variance is located [here](https://en.wikipedia.org/wiki/Variance)."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "* `Granularity` : the period of time for which commits are aggregated in the Ramp Chart."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    * `Commit`: each commit made is shown as one ramp"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    * `Day`: commits within a day (commits made within 00:00 to 23:59) are shown as one ramp"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    * `Week`: commits within a week (from Monday 00:00 to Sunday 23:59) are shown as one ramp"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "* `Since`, `Until` : the date range for the Ramp Chart (not applied to the Contribution Bars)."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "* `Reset date range` : resets the date range of the Ramp Chart to the default date range."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "* `Breakdown by file type` : toggles the contribution bar to either display the bar by :"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    * the total lines of codes added (if checkbox is left unchecked), or"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    * a breakdown of the number of lines of codes added to each file type (if checkbox is checked). If sorting criteria is contribution, only lines contributed to selected file types will be taken into account."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "Notes:\u003cbr\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "[1] **`Sort groups by`**: each main group has its own index and percentile according to its ranking position after sorting (e.g., "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "if the groups are sorted by contribution in descending order, a 25% percentile indicates that the group is in the top 25% of the whole cohort in terms of contribution)\u003cbr\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "[2] **`Repo/Branch`**: the repo/branch name is constructed as `ORGANIZATION/REPOSITORY[BRANCH]` (e.g., `resposense/reposense[master]`)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "**Bookmarking a specific toolbar setting and the opened code panel**: The URL changes according to the toolbar configuration and opened code panel viewed. You can save a specific configuration of the report by bookmarking the url (using browser functionality)."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "## Configuring a Repo to Provide Additional Data to RepoSense"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "When a repo is being analyzed by RepoSense, there are **two ways repo owners can provide additional details to RepoSense**: using a config file, or annotating code using `@@author` tags. The two approaches are explained in the sections below."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "### Provide Data Using a json Config File"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "Repo owners can provide the following additional information to RepoSense using a config file that we call the **_standalone config file_**:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "* which files/authors/commits to analyze/omit"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "* which git and GitHub usernames belong to which authors"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "* the display of an author"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "To use this feature, add a `_reposense/config.json` to the root of your repo using the format in the example below ([another example](../_reposense/config.json)) and **commit it** (reason: RepoSense can see committed code only):"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "```json"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  \"ignoreGlobList\": [\"about-us/**\", \"**index.html\"],"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "  \"formats\": [\"html\", \"css\"],"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  \"ignoreCommitList\": [\"90018e49f129ce7e0abdc8b18e91c9813588c601\", \"67890def\"],"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "  \"ignoreAuthorList\": [\"charlie\"],"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "  \"authors\":"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "  ["
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "      \"githubId\": \"alice\","
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "      \"emails\": [\"alice@example.com\", \"alicet@example.com\"],"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      \"displayName\": \"Alice T.\","
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      \"authorNames\": [\"AT\", \"A\"],"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "      \"ignoreGlobList\": [\"**.css\"]"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      \"githubId\": \"bob\""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "Note: all fields are optional unless specified otherwise."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "**Fields to provide _repository-level_ info**:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "* `ignoreGlobList`: Folders/files to ignore, specified using the [_glob format_](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob)."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "* `formats`: File formats to analyze. Default: all file formats"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "* `ignoreCommitList`: The list of commits to ignore during analysis. For accurate results, the commits should be provided with their full hash."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "* `ignoreAuthorList`: The list of authors to ignore during analysis. Authors specified in `authors` field or `author-config.csv` will be also be omitted if they are in this list. Authors should be specified by their [Git Author Name](#a-note-about-git-author-name)."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "**Fields to provide _author-level_ info**:\u003cbr\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "Note: `authors` field should contain _all_ authors that should be captured in the analysis."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "* `githubId`: GitHub username of the author. :exclamation: Mandatory field."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "* `emails`: Associated GitHub emails of the author. This can be found in your [GitHub settings](https://github.com/settings/emails)."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "* `displayName`: Name to display on the report for this author."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "* `authorNames`: Git Author Name(s) used in the author\u0027s commits. By default RepoSense assumes an author would use her GitHub username as the Git username too. The meaning of _Git Author Name_ is explained in [_A Note About Git Author Name_](#a-note-about-git-author-name)."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "* `ignoreGlobList`: _Additional_ (i.e. on top of the repo-level `ignoreGlobList`) folders/files to ignore for a specific author . In the example above, the actual `ignoreGlobList` for `alice` would be `[\"about-us/**\", \"**index.html\", \"**.css\"]`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "To verify your standalone configuration is as intended, add the `_reposense/config.json` to your local copy of repo and run RepoSense against it as follows:\u003cbr\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "* Format : `java -jar RepoSense.jar --repo LOCAL_REPO_LOCATION` \u003cbr\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "* Example: `java -jar RepoSense.jar --repo c:/myRepose/foo/bar`\u003cbr\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "After that, view the report to see if the configuration you specified in the config file is being reflected correctly in the report."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "##### **A Note About Git Author Name**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "`Git Author Name` refers to the customizable author\u0027s display name set in the local `.gitconfig` file. For example, in the Git Log\u0027s display:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "..."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "commit cd7f610e0becbdf331d5231887d8010a689f87c7"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "Author: ConfiguredAuthorName \u003cauthor@example.com\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "Date:   Fri Feb 9 19:14:41 2018 +0800"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    Make some changes to show my new author\u0027s name"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "commit e3f699fd4ef128eebce98d5b4e5b3bb06a512f49"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "Author: ActualGitHubId \u003cauthor@example.com\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "Date:   Fri Feb 9 19:13:13 2018 +0800"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    Initial commit"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": " ..."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "`ActualGitHubId` and `ConfiguredAuthorName` are both `Git Author Name` of the same author.\u003cbr\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "To find the author name that you are currently using for your current git repository, run the following command within your git repository:"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "git config user.name"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "To set the author name to the value you want (e.g., to set it to your GitHub username) for your current git repository, you can use the following command ([more info](https://www.git-tower.com/learn/git/faq/change-author-name-email)):"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "git config user.name \"YOUR_AUTHOR_NAME”"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "To set the author name to use a default value you want for future git repositories, you can use the following command:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "git config --global user.name \"YOUR_AUTHOR_NAME”"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "RepoSense expects the Git Author Name to be the same as author\u0027s GitHub username. If an author\u0027s `Git Author Name` is different from her `GitHub ID`, the `Git Author Name` needs to be specified in the standalone config file. If the author has more than one `Git Author Name`, multiple values can be entered too."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Note: Symbols such as `\"`, `!`, `/` etc. in your author name will be omitted, which may reduce the accuracy of the analysis if 2 names in the repository are approximately similar."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "### Provide Data Using `@@author` Tags"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "If you want to override the code authorships deduced by RepoSense (which is based on Git blame/log data), you can use `@@author` tags to specify certain code segments should be credited to a certain author irrespective of git history. An example scenario where this is useful is when a method was originally written by one author but a second author did some minor refactoring to it; in this case RepoSense might attribute the code to the second author while you may want to attribute the code to the first author."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "There are 2 types of `@@author` tags:"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "- Start Tags (format: `@@author AUTHOR_GITHUB_ID`): A start tag indicates the start of a code segment written by the author identified by the `AUTHOR_GITHUB_ID`."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "- End Tags (format: `@@author`): Optional. An end tag indicates the end of a code segment written by the author identified by the `AUTHOR_GITHUB_ID` of the start tag."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Note: If an end tag is not provided, the code till the next start tag (or the end of the file) will be attributed to the author specified in the start tag above. Use only when necessary to minimize polluting your code with these extra tags."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "The `@@author` tags should be enclosed within a comment, using the comment syntax of the file in concern. Below are some examples:"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "![author tags](images/add-author-tags.png)"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "Special thanks to [Collate](https://github.com/se-edu/collate) for providing the inspiration for this functionality."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "Note: Remember to **commit** the files after the changes. (reason: RepoSense can see committed code only)"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "## Customizing the Analysis"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "The analysis can be customized using additional command line parameters or using config files. The two approaches are explained in the sections below."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "### Customize Using Command Line Parameters"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "As you know, `java -jar RepoSense.jar` takes the following parameter:"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--repo, -r REPO_LOCATION`**: The URL or the disk location of the git repositories to analyze (`-r` as alias).\u003cbr\u003e"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "  Example using URL: `--repo https://github.com/reposense/RepoSense.git`\u003cbr\u003e"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "  Example using disk location: `--repo C:\\Users\\user\\Desktop\\GitHub\\RepoSense`\u003cbr\u003e"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "  Example using alias: `-r https://github.com/reposense/RepoSense.git`"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "In addition, there are some _optional_ extra parameters you can use to customize the analysis further:"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--output, -o OUTPUT_DIRECTORY`**: Indicates where to save the report generated (`-o` as alias). Default: current directory.\u003cbr\u003e"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "  Example: `--output ./foo` or `-o ./foo` (in this case, the report will be in the `./foo/reposense-report` folder)"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--since, -s START_DATE`**: The start date of analysis (`-s` as alias). Format: `DD/MM/YYYY`\u003cbr\u003e"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`--since 21/10/2017` or `-s 21/10/2017` \u003cbr\u003e"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003e Note: -"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003e - If the start date is not specified, only commits made one month before the end date (if specified) or the date of generating the report, will be captured and analyzed."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003e - If `d1` is specified as the start date (`--since d1` or `-s d1`), then the earliest commit date of all repositories will be taken as the since date."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* **`--until, -u END_DATE`**: The end date of analysis (`-u` as alias). The analysis includes the end date. Format: `DD/MM/YYYY`\u003cbr\u003e"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`--until 21/10/2017` or `-u 21/10/2017` \u003cbr\u003e"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003e Note: If the end date is not specified, the date of generating the report will be taken as the end date."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--formats, -f LIST_OF_FORMATS`**: A space-separated list of file extensions that should be included in the analysis (`-f` as alias). Default: all file formats\u003cbr\u003e"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`--formats css fxml gradle` or `-f css fxml gradle`"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--ignore-standalone-config, -i`**: A flag to ignore the standalone config file in the repo (`-i` as alias). This flag will overwrite the `Ignore standalone config` field in the csv config file. Default: the standalone config file is not ignored.\u003cbr\u003e"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`--ignore-standalone-config` or `-i`"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--view, -v [REPORT_FOLDER]`**: A flag to launch the report automatically after processing (`-v` as alias). Note that if the `REPORT_FOLDER` argument is given, no analysis will be performed and the report specified by the argument will be opened.\u003cbr\u003e"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "Example:`--view` or `-v`"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--timezone, -t ZONE_ID`**: Indicates the timezone which will be used for the generated report. One kind of valid timezones is relative to UTC. E.g. `UTC`, `UTC+08`, `UTC-1030`. Format: `ZONE_ID[±hh[mm]]`. Default: system\u0027s default timezone.\u003cbr\u003e"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`--timezone UTC+08` or `-t UTC-1030`"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "Here\u0027s an example of a command using all parameters:\u003cbr\u003e"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "`java -jar RepoSense.jar --repo https://github.com/reposense/RepoSense.git --output ./report_folder --since 31/1/2017 --until 31/12/2018 --formats java adoc xml --view --ignore-standalone-config --timezone UTC+08`"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "Here\u0027s an example of a command using all alias of parameters:\u003cbr\u003e"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "`java -jar RepoSense.jar -r https://github.com/reposense/RepoSense.git -o ./report_folder -s 31/1/2017 -u 31/12/2018 -f java adoc xml -v -i`"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "Also, there are two _information_ parameters you can use to know more about RepoSense:"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--help, -h`**: Show help message."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--version, -V`**: Show the version of RepoSense."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "### Customize Using csv Config Files"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "Another, more powerful, way to customize the analysis is by using dedicated config files. In this case you need to use the `--config` parameter instead of the `--repo` parameter when running RepoSense, as follows:"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--config, -c CONFIG_DIRECTORY`**: The directory in which you have the config files (`-c` as alias).\u003cbr\u003e"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`java -jar RepoSense.jar --config  ./my_configs` or `java -jar RepoSense.jar -c  ./my_configs`"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "The directory used with the `--config` parameter should contain a `repo-config.csv` file and, optionally, an `author-config.csv` file or `group-config.csv` file or both, all of which are described in the sections below."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "#### `repo-config.csv`"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "`repo-config.csv` file contains repo-level config data as follows:"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "* First row: column headings, ignored by RepoSense"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "* Second row onwards: each row represents a repository\u0027s configuration"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "Here is an example:"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "Repository\u0027s Location|Branch|File formats|Ignore Glob List|Ignore standalone config|Ignore Commits List|Ignore Authors List"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "---------------------|------|------------|----------------|------------------------|-------------------|-------------------"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "`https://github.com/foo/bar.git`|`master`|`override:java;css`|`test/**`|`yes`|`2fb6b9b2dd9fa40bf0f9815da2cb0ae8731436c7;c5a6dc774e22099cd9ddeb0faff1e75f9cf4f151`|`Alice`"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "When using standalone config (if it is not ignored), it is possible to override specific values from the standalone config by prepending the entered value with `override:`."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "Column Name | Explanation"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "----------- | -----------"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "Repository\u0027s Location | The `GitHub URL` or `Disk Path` to the git repository e.g., `https://github.com/foo/bar.git` or `C:\\Users\\user\\Desktop\\GitHub\\foo\\bar`"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Branch | The branch to analyze in the target repository e.g., `master`. Default: the default branch of the repo"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] File formats\u003csup\u003e*+\u003c/sup\u003e | The file extensions to analyze. Default: all file formats"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Ignore Glob List\u003csup\u003e*+\u003c/sup\u003e | The list of file path globs to ignore during analysis for each author. e.g., `test/**;temp/**`"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Ignore standalone config | To ignore the standalone config file (if any) in target repository, enter **`yes`**. If the cell is empty, the standalone config file in the repo (if any) will take precedence over configurations provided in the csv files."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Ignore Commit List\u003csup\u003e*+\u003c/sup\u003e | The list of commits to ignore during analysis. For accurate results, the commits should be provided with their full hash."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Ignore Authors List\u003csup\u003e*+\u003c/sup\u003e | The list of authors to ignore during analysis. Authors should be specified by their [Git Author Name](#a-note-about-git-author-name)."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e  "
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csup\u003e+ **Overrideable column**: prepend with `override:` to use entered value(s) instead of value(s) from standalone config.\u003c/sup\u003e"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "#### `author-config.csv`"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can use a `author-config.csv` (which should be in the same directory as `repo-config.csv` file) to provide more details about the authors to analyze ([example](author-config.csv)). It should contain the following columns:"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "Column Name | Explanation"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "----------- | -----------"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Repository\u0027s Location | Same as `repo-config.csv`. Default: all the repos in `repo-config.csv`"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Branch | The branch to analyze for this author e.g., `master`. Default: the author will be bound to all the repos in `repo-config.csv` that has the same repo\u0027s location, irregardless of branch"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "Author\u0027s GitHub ID | GitHub username of the target author e.g., `JohnDoe`"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Author\u0027s Emails\u003csup\u003e*\u003c/sup\u003e | Associated Github emails of the author. This can be found in your [GitHub settings](https://github.com/settings/emails)."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Author\u0027s Display Name | The name to display for the author. Default: author\u0027s GitHub username."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Author\u0027s Git Author Name\u003csup\u003e*\u003c/sup\u003e | The meaning of _Git Author Name_ is explained in [_A Note About Git Author Name_](#a-note-about-git-author-name)."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Ignore Glob List\u003csup\u003e*\u003c/sup\u003e | Files to ignore for this author, in addition to files ignored by the patterns specified in `repo-config.csv`"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Note: the first row consists of config headings, which is ignored by RepoSense."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "If `author-config.csv` is not given and the repo has not provide author details in a standalone config file, all the authors of the repositories within the date range specified (if any) will be analyzed."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "#### `group-config.csv`"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can provide a `group-config.csv`(which should be in the same directory as `repo-config.csv` file) to provide details on any custom groupings for files in specified repositories ([example](group-config.csv)). It should contain the following columns:"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "Column Name | Explanation"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "----------- | -----------"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Repository\u0027s Location | Same as `repo-config.csv`. Default: all the repos in `repo-config.csv`"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "Group Name | Name of the group e.g.,`test`."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "Globs * | The list of file path globs to include for specified group. e.g.,`**/test/*;**.java`."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "Note that a file in a given repository should only be tagged to one group. \u003cbr\u003e"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "e.g.: `example.java` in `example-repo` can either be in `test` group or in `code` group, but not in both `test` and `code` group. If multiple groups are specified for a given file, the latter group (i.e.: `code` group) is set for the file."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Note: the first row consists of config headings, which is ignored by RepoSense."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "## Analyzing Multiple Repos"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "This section assumes that you have read the earlier sections of the user guide."
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "The simplest way to analyze multiple repos in one go is to use the `--repos` parameter in place of the `--repo` parameter when running RepoSense."
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "* Format : `java -jar RepoSense.jar --repos REPO_LIST` \u003cbr\u003e"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "* Example: `java -jar RepoSense.jar --repos https://github.com/reposense/RepoSense.git c:/myRepose/foo/bar` analyzes the two specified repos (one remote, one local) and generates one report containing details of both."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you can use csv config files to further customize the analysis:"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "* `repo-config.csv`: Add a new row, to analyze a new repo ([example](repo-config.csv))."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "* `author-config.csv`: Add a new row, to specific the authors to analyze for the target repo(s) ([example](author-config.csv))."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "* `group-config.csv`: Add a new row, to customize the grouping of files for the target repo(s) ([example](group-config.csv))."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "## Quickstart RepoSense with Netlify"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "To enjoy a real time RepoSense report on your target repositories, all you need is Netlify and a fork of this repo. Follow [this guide](UsingNetlifyGuide.md) to get started."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "## Using Travis-CI to automate publishing of the report to GitHub Pages"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "Follow this [guide](PublishingGuide.md) to automate publishing of your report to GitHub Pages."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: Does RepoSense work on private repositories?"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** *RepoSense* will first clone the git repository to be analyzed, thus if you do not have access to the repository, we are unable to run the analysis.\u003cbr\u003e"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "To enable *RepoSense* to work on private repositories, ensure that you have enabled access to your private repository in your git terminal first, before running the analysis."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: How does formats work?"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** **Formats** are the [file extensions](https://techterms.com/definition/fileextension), which is the **suffix** at the end of a filename that indicates what type of file it is.\u003cbr\u003e"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "The formats/file extensions to be analyzed by *RepoSense* can be specified through the [standalone config file](#provide-data-using-a-json-config-file), [repo-config file](#repo-configcsv) and [command line](#customize-using-command-line-parameters)."
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: How does ignore glob list work?"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** [Glob](https://en.wikipedia.org/wiki/Glob_(programming)) is the pattern to specify a set of filenames with [wildcard characters](https://www.computerhope.com/jargon/w/wildcard.htm). **Ignore glob list** is the list of patterns to specify all the files in the repository which should be ignored from analysis.\u003cbr\u003e"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "The ignore glob list can be specified through the [standalone config file](#provide-data-using-a-json-config-file), [repo-config file](#repo-configcsv) and [author-config file](#author-configcsv)."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: My commit contributions does not appear in the ramp chart (despite appearing in the contribution bar and code panel)?"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** This is probably a case of giving an incorrect author name alias (or github ID) in your [author-config file](#author-configcsv).\u003cbr\u003e"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "Please refer to [A Note About Git Author Name](#a-note-about-git-author-name) above on how to find out the correct author name you are using, and how to change it.\u003cbr\u003e"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "Also ensure that you have added all author name aliases that you may be using (if you are using multiple computers or have previously changed your author name).\u003cbr\u003e"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you may choose to configure RepoSense to track using your GitHub email instead in your [standalone config file](#provide-data-using-a-json-config-file) or [author-config file](#author-configcsv), which is more accurate compared to author name aliases. The associated GitHub email you are using can be found in your [GitHub settings](https://github.com/settings/emails)."
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: My contribution bar and code panel is empty (despite having lots of commit contributions in the ramp chart)?"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** The contribution bar and code panel records the lines you have authored to the **latest** commit of the repository and branch you are analyzing. As such, it is possible that while you have lots of commit contributions, your final authorship contribution is low if you have only deleted lines, someone else have overwritten your code and taken authorship for it (currently, *RepoSense* does not have functionality to track overwritten lines).\u003cbr\u003e"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "It is also possible that another user has overriden the authorship of your lines using the [@@author tags](#provide-data-using-author-tags)."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: I have added/edited the standalone config file in my local repository, but RepoSense is not using it when running the analysis?"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** Ensure that you have committed the changes to your standalone config file first before running the analysis, as *RepoSense* is unable to detect uncommitted changes to your local repository."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: I am able to run RepoSense on my repository on a Linux/Mac OS, but it fails on a Windows OS?"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** It is possible you may have some file names with [special characters](https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#naming-conventions) in them, which is disallowed in Windows OS. As such, *RepoSense* is unable to fully clone your repository, thus failing the analysis."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: Why are some files not captured by RepoSense?"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** The files may be [binary files](https://en.wikipedia.org/wiki/Binary_file). RepoSense does not analyze binary files. Common binary files include images (`.jpg`, `.png`), applications (`.exe`), zip files (`.zip`, `.rar`) and certain document types (`.docx`, `.pptx`)."
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 4,
      "-": 431
    }
  },
  {
    "path": "frontend/src/index.pug",
    "fileType": "pug",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "html"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  head"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    title RepoSense Report"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"shortcut icon\", type\u003d\"image/x-icon\", href\u003d\"favicon.ico\")"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"https://fonts.googleapis.com/css?family\u003dTitillium+Web\")"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"https://cdn.jsdelivr.net/npm/normalize.css@8.0/normalize.min.css\")"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"https://cdn.jsdelivr.net/npm/muicss@0.9/dist/css/mui.min.css\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"https://cdn.jsdelivr.net/npm/highlight.js@9.14/styles/color-brewer.min.css\")"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"https://cdn.jsdelivr.net/npm/vue-loading-spinner@1.0/dist/vue-loading-spinner.css\")"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"static/css/style.css\")"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"static/css/v_authorship.css\")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"static/css/v_ramp.css\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"static/css/v_summary.css\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"static/css/v_zoom.css\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://use.fontawesome.com/releases/v5.0.13/js/all.js\", defer\u003dTrue)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/npm/vue@2.5/dist/vue.js\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/npm/jszip@3.1/dist/jszip.min.js\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.14/build/highlight.min.js\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.14/build/languages/asciidoc.min.js\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.14/build/languages/gradle.min.js\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.14/build/languages/plaintext.min.js\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.14/build/languages/scss.min.js\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.14/build/languages/yaml.min.js\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/npm/vue-loading-spinner@1.0/dist/vue-loading-spinner.js\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  body"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    #app"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      #app-wrapper(v-if\u003d\"userUpdated\", onmousemove\u003d\"mouseMove(event)\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        onmouseup\u003d\"deregisterMouseMove()\", onmouseleave\u003d\"deregisterMouseMove()\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        #tab-resize-guide"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        #summary-wrapper"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "          .summary-status(v-if\u003d\"loadedRepo\u003crepoLength\") Loading repos ... {{ loadedRepo }} / {{ repoLength }}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "          v_summary.tab-padding("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            ref\u003d\"summary\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            v-bind:repos\u003d\"users\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:error-messages\u003d\"errorMessages\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            v-on:view-zoom\u003d\"updateTabZoom\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            v-on:view-authorship\u003d\"updateTabAuthorship\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            v-on:get-dates\u003d\"receiveDates\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "          )"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "          .timestamp-footer"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            span Generated by\u0026nbsp;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            a("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "              v-bind:href\u003d\"getRepoSenseHomeLink()\", target\u003d\"_blank\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            )"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "              strong RepoSense"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            span \u0026nbsp;("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            a("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "              v-bind:href\u003d\"getUserGuideVersionLink()\", target \u003d\"_blank\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            )"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "              strong User Guide - {{ repoSenseVersion }}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            span ) on {{ creationDate }}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "          .report-generation-time(style\u003d\"display: none;\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            span {{ reportGenerationTime }}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        #tabs-wrapper(v-if\u003d\"isTabActive\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "          #tab-resize(onmousedown\u003d\"registerMouseMove()\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          .tab-close(v-on:click\u003d\"deactivateTab\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            i.fas.fa-caret-right"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "          .tab-content.panel-padding"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            .tab-panes"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "              v_authorship#tab-authorship.tab-pane("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                v-if\u003d\"tabType \u003d\u003d\u003d \u0027authorship\u0027\","
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                v-bind:info\u003d\"tabInfo.tabAuthorship\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "              v_zoom#tab-zoom.tab-pane("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                v-else-if\u003d\"tabType \u003d\u003d\u003d \u0027zoom\u0027\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                v-bind:info\u003d\"tabInfo.tabZoom\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                v-on:view-summary\u003d\"updateSummaryDates\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "              #tab-empty.tab-pane(v-else)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                .title"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                  span To view the code attributed to a specific author, click the \u0026nbsp;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                  i.fas.fa-code"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                  span \u0026nbsp; icon next to that author\u0027s name."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                  br"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                  span To hide the code view, click the \u0026nbsp;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                  i.fas.fa-caret-right"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                  span \u0026nbsp; icon on the left."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      template(v-else)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        .empty Please upload a .zip file generated by RepoSense."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        form#file-upload(onsubmit\u003d\"return false;\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "          input(type\u003d\"file\", accept\u003d\".zip\", v-on:change\u003d\"updateReportZip\")"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "          .loader(v-if\u003d\"isLoading\")"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            circle-spinner"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            .loading Loading resources..."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    vuetemplate#v_summary"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      include summary.pug"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    vuetemplate#v_ramp"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      include ramp.pug"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    vuetemplate#v_zoom"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      include tabs/zoom.pug"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    vuetemplate#v_segment"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      include tabs/segment.pug"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    vuetemplate#v_authorship"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      include tabs/authorship.pug"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"static/js/api.js\")"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    script(src\u003d\"static/js/safari_date.js\")"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"static/js/v_ramp.js\")"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"static/js/v_zoom.js\")"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    script(src\u003d\"static/js/v_segment.js\")"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"static/js/v_summary.js\")"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"static/js/v_authorship.js\")"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"static/js/main.js\")"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 7,
      "-": 104
    }
  },
  {
    "path": "frontend/src/ramp.pug",
    "fileType": "pug",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ".ramp"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  template(v-if\u003d\"tframe \u003d\u003d\u003d \u0027commit\u0027\")"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    template(v-for\u003d\"(slice, j) in user.commits\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      a.ramp__slice("
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        draggable\u003d\"false\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        onclick\u003d\"rampClick(event);\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        v-for\u003d\"(commit, k) in slice.commitResults\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        v-if\u003d\"commit.insertions\u003e0\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        v-bind:href\u003d\"getLink(user, commit)\", target\u003d\"_blank\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        v-bind:title\u003d\"`[${slice.date}] ${commit.messageTitle}: ${commit.insertions} lines`\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        v-bind:class\u003d\"\u0027ramp__slice--color\u0027 + getSliceColor(slice.date)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        v-bind:style\u003d\"{\\"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "          zIndex: user.commits.length - j,\\"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "          borderLeftWidth: getWidth(commit) + \u0027em\u0027,\\"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "          right: ((getSlicePos(slice.date)\\"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            + (getCommitPos(k, slice.commitResults.length))) * 100) + \u0027%\u0027\\"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "          }\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      )"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  template(v-else)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    a.ramp__slice("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      draggable\u003d\"false\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      onclick\u003d\"rampClick(event);\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      v-for\u003d\"(slice, j) in user.commits\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      v-if\u003d\"slice.insertions \u003e 0\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      v-bind:title\u003d\"`${tframe \u003d\u003d\u003d \u0027day\u0027 \\"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        ? \u0027[\u0027 + slice.date + \u0027] Daily\u0027 \\"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        : \u0027[\u0027 + slice.date + \u0027 till \u0027 + slice.endDate + \u0027] Weekly\u0027} contribution: ${slice.insertions} lines`\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      v-bind:href\u003d\"getLink(user, slice)\", target\u003d\"_blank\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      v-bind:class\u003d\"\u0027ramp__slice--color\u0027 + getSliceColor(slice.date)\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      v-bind:style\u003d\"[\\"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          {\\"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            zIndex: user.commits.length - j,\\"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            borderLeftWidth: getWidth(slice) + \u0027em\u0027,\\"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            right: (getSlicePos(tframe \u003d\u003d\u003d \u0027day\u0027 ? slice.date : slice.endDate) * 100) + \u0027%\u0027 \\"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          },\\"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          /* disallow clickable ramp slices when merging groups that are grouped by authors \\"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "             as unable to form a url that navigates to different repositories of the same author */\\"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          mergegroup \u0026\u0026 groupby \u003d\u003d\u003d \u0027groupByAuthors\u0027 ?\\"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            { cursor: \u0027auto\u0027, pointerEvents: \u0027none\u0027 }  :\\"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            { cursor: \u0027pointer\u0027, pointerEvents: \u0027auto\u0027 }\\"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      ]\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    )"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 10,
      "-": 33
    }
  },
  {
    "path": "frontend/src/static/css/_colors.scss",
    "fileType": "scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@import \u0027utils\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " * MUI Colors module"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "// COLOR FUNCTION"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@function mui-color($mui-key1, $mui-key2: \u0027500\u0027) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  // check key1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  @if validate-map-key($mui-colors, $mui-key1) \u003d\u003d false {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    @return null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  $mui-mapVal: map-get($mui-colors, $mui-key1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  // use second key"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  @if type-of($mui-mapVal) \u003d\u003d \u0027map\u0027 {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // check key2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    @if validate-map-key($mui-mapVal, $mui-key2) \u003d\u003d false {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      @return null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    $mui-mapVal: map-get($mui-mapVal, $mui-key2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  @return $mui-mapVal;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "// COLOR MAP"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "$mui-colors: ("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027red\u0027: ("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #FFEBEE,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #FFCDD2,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #EF9A9A,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #E57373,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #EF5350,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #F44336,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #E53935,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #D32F2F,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #C62828,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #B71C1C,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #FF8A80,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #FF5252,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #FF1744,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #D50000,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027pink\u0027: ("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #FCE4EC,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #F8BBD0,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #F48FB1,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #F06292,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #EC407A,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #E91E63,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #D81B60,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #C2185B,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #AD1457,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #880E4F,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #FF80AB,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #FF4081,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #F50057,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #C51162,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027purple\u0027: ("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #F3E5F5,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #E1BEE7,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #CE93D8,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #BA68C8,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #AB47BC,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #9C27B0,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #8E24AA,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #7B1FA2,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #6A1B9A,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #4A148C,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #EA80FC,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #E040FB,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #D500F9,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #AA00FF,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027deep-purple\u0027: ("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #EDE7F6,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #D1C4E9,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #B39DDB,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #9575CD,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #7E57C2,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #673AB7,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #5E35B1,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #512DA8,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #4527A0,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #311B92,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #B388FF,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #7C4DFF,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #651FFF,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #6200EA,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027indigo\u0027: ("
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #E8EAF6,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #C5CAE9,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #9FA8DA,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #7986CB,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #5C6BC0,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #3F51B5,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #3949AB,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #303F9F,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #283593,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #1A237E,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #8C9EFF,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #536DFE,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #3D5AFE,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #304FFE,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027blue\u0027: ("
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #E3F2FD,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #BBDEFB,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #90CAF9,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #64B5F6,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #42A5F5,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #2196F3,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #1E88E5,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #1976D2,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #1565C0,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #0D47A1,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #82B1FF,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #448AFF,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #2979FF,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #2962FF,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027light-blue\u0027: ("
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #E1F5FE,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #B3E5FC,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #81D4FA,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #4FC3F7,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #29B6F6,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #03A9F4,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #039BE5,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #0288D1,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #0277BD,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #01579B,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #80D8FF,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #40C4FF,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #00B0FF,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #0091EA,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027cyan\u0027: ("
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #E0F7FA,"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #B2EBF2,"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #80DEEA,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #4DD0E1,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #26C6DA,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #00BCD4,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #00ACC1,"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #0097A7,"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #00838F,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #006064,"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #84FFFF,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #18FFFF,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #00E5FF,"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #00B8D4,"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027teal\u0027: ("
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #E0F2F1,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #B2DFDB,"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #80CBC4,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #4DB6AC,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #26A69A,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #009688,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #00897B,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #00796B,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #00695C,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #004D40,"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #A7FFEB,"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #64FFDA,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #1DE9B6,"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #00BFA5,"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027green\u0027: ("
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #E8F5E9,"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #C8E6C9,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #A5D6A7,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #81C784,"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #66BB6A,"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #4CAF50,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #43A047,"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #388E3C,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #2E7D32,"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #1B5E20,"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #B9F6CA,"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #69F0AE,"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #00E676,"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #00C853,"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027light-green\u0027: ("
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #F1F8E9,"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #DCEDC8,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #C5E1A5,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #AED581,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #9CCC65,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #8BC34A,"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #7CB342,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #689F38,"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #558B2F,"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #33691E,"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #CCFF90,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #B2FF59,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #76FF03,"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #64DD17,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027lime\u0027: ("
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #F9FBE7,"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #F0F4C3,"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #E6EE9C,"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #DCE775,"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #D4E157,"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #CDDC39,"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #C0CA33,"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #AFB42B,"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #9E9D24,"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #827717,"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #F4FF81,"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #EEFF41,"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #C6FF00,"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #AEEA00,"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027yellow\u0027: ("
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #FFFDE7,"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #FFF9C4,"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #FFF59D,"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #FFF176,"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #FFEE58,"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #FFEB3B,"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #FDD835,"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #FBC02D,"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #F9A825,"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #F57F17,"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #FFFF8D,"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #FFFF00,"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #FFEA00,"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #FFD600,"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027amber\u0027: ("
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #FFF8E1,"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #FFECB3,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #FFE082,"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #FFD54F,"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #FFCA28,"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #FFC107,"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #FFB300,"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #FFA000,"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #FF8F00,"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #FF6F00,"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #FFE57F,"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #FFD740,"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #FFC400,"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #FFAB00,"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027orange\u0027: ("
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #FFF3E0,"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #FFE0B2,"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #FFCC80,"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #FFB74D,"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #FFA726,"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #FF9800,"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #FB8C00,"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #F57C00,"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #EF6C00,"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #E65100,"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #FFD180,"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #FFAB40,"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #FF9100,"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #FF6D00,"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027deep-orange\u0027: ("
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #FBE9E7,"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #FFCCBC,"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #FFAB91,"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #FF8A65,"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #FF7043,"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #FF5722,"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #F4511E,"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #E64A19,"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #D84315,"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #BF360C,"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A100\u0027: #FF9E80,"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A200\u0027: #FF6E40,"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A400\u0027: #FF3D00,"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027A700\u0027: #DD2C00,"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027brown\u0027: ("
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #EFEBE9,"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #D7CCC8,"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #BCAAA4,"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #A1887F,"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #8D6E63,"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #795548,"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #6D4C41,"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #5D4037,"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #4E342E,"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #3E2723,"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0027github\u0027: ("
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027title-background\u0027: #FAFBFC,"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027border\u0027: #E1E4E8,"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027authored-code-background\u0027: #E6FFED,"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027grey\u0027: ("
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #FAFAFA,"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #F5F5F5,"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #EEEEEE,"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #E0E0E0,"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #BDBDBD,"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #9E9E9E,"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #757575,"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #616161,"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #424242,"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #212121,"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027blue-grey\u0027: ("
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u002750\u0027: #ECEFF1,"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027100\u0027: #CFD8DC,"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027200\u0027: #B0BEC5,"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027300\u0027: #90A4AE,"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027400\u0027: #78909C,"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027500\u0027: #607D8B,"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027600\u0027: #546E7A,"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027700\u0027: #455A64,"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027800\u0027: #37474F,"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \u0027900\u0027: #263238,"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "  ),"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027black\u0027: #000,"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027white\u0027: #FFF,"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027black-alpha-12\u0027: rgba(#000, .12),"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027black-alpha-38\u0027: rgba(#000, .38),"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027black-alpha-54\u0027: rgba(#000, .54),"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027black-alpha-87\u0027: rgba(#000, .87),"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027white-alpha-12\u0027: rgba(#FFF, .12),"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027white-alpha-30\u0027: rgba(#FFF, .30),"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u0027white-alpha-70\u0027: rgba(#FFF, .70),"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ");"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 282,
      "-": 59
    }
  },
  {
    "path": "frontend/src/static/css/style.scss",
    "fileType": "scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "@import \u0027colors\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@import \u0027z-indices\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/** global **/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "body {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  font-family: \u0027Titillium Web\u0027, sans-serif;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "vuetemplate {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  display: none;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "a {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  cursor: pointer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ".wrapper {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  text-align: center;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ".content {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  max-width: 40rem;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  text-align: left;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ".empty {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  margin: 3rem 5rem;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  text-align: center;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ".loader {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  align-items: center;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  background: #FFF;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  display: flex;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  flex-direction: column;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  height: 100%;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  justify-content: center;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  opacity: 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  position: fixed;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  top: 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  width: 100%;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  z-index: z-index(\u0027loader\u0027);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  .loading {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-top: 12px;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ".mini-font {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  font-size: .65rem;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  font-weight: normal;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ".medium-font {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  font-size: .875rem;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  font-weight: normal;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ".large-font {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  font-size: 1.5rem;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  font-weight: bold;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ".tab-padding {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  padding: 2rem 1.5rem;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ".panel-padding {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  padding: 2rem 1.5rem 2rem 2.2rem"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ".warn {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  color: mui-color(\u0027red\u0027);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  .summary-charts__title--contribution {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    color: mui-color(\u0027black\u0027);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "/** navigation bar **/"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "header {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  display: flex;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  justify-content: center;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  position: relative;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  z-index: z-index(\u0027header\u0027);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  .content {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    align-items: center;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    display: flex;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-grow: 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    justify-content: space-between;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  .repo,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  .logo {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    margin: 0;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "#file-upload {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  text-align: center;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "#app-wrapper {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  display: flex;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  height: 100vh;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  left: 0;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  position: absolute;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  top: 0;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  width: 100%;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  z-index: z-index(\u0027app-wrapper\u0027);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  #tab-resize-guide {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    $tabs-width: 50%;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    background-color: mui-color(\u0027black\u0027);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    cursor: col-resize;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    display: none;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    height: 100%;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    position: fixed;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    right: $tabs-width;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    width: 2px;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    z-index: z-index(\u0027center-divider\u0027);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  #summary-wrapper {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    flex-grow: 1;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    height: 100%;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    overflow-y: scroll;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    text-align: center;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    .timestamp-footer {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      color: mui-color(\u0027grey\u0027, \u0027700\u0027);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      margin-bottom: 1em;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      margin-left: 1em;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    .error-message-box {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "      background-color: mui-color(\u0027red\u0027, \u0027100\u0027);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "      border: .1rem solid mui-color(\u0027red\u0027, \u0027900\u0027);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      border-radius: .25rem;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "      color: mui-color(\u0027red\u0027, \u0027900\u0027);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "      font-size: .75rem;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "      margin-bottom: .9rem;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "      padding: .9rem;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "      text-align: left;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026__close-button {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        cursor: pointer;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        float: right;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        font-size: 1.4rem;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        font-weight: bold;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        line-height: .625rem;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026:hover {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "          color: mui-color(\u0027white\u0027);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026__message {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        border-bottom: .1rem solid;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        font-weight: bolder;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        padding-bottom: .5rem;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "      .icon {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        padding-right: .4rem;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        padding-top: .2rem;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        width: 1rem;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026__failed-repo {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026--name {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "          font-weight: bolder;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "          padding-left: .2rem;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026--reason {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "          padding-left: 3rem;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  #tabs-wrapper {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    $tabs-width: 50%;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    background: mui-color(\u0027white\u0027);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    flex: 0 0 $tabs-width;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    overflow-y: scroll;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    position: relative;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    .tab-close {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      cursor: pointer;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      position: fixed;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "      top: calc(50vh - 3rem);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "      z-index: z-index(\u0027center-divider\u0027);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "      svg {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        background-color: mui-color(\u0027grey\u0027, \u0027300\u0027);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        color: mui-color(\u0027black\u0027);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        padding: 3rem .25rem;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    .tab-content {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "      display: flex;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      .tab-panes {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        text-align: left;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        width: 100%;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    #tab-resize {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "      background-color: mui-color(\u0027black\u0027);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "      cursor: col-resize;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      height: 100%;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      position: fixed;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      width: 13.250px;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "      z-index: z-index(\u0027center-divider\u0027);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ".toolbar {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "  cursor: pointer;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "  float: right;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ".sorting {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "  align-items: center;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "  display: flex;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "  margin-top: 1.0rem;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "  .mui-select {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    cursor: pointer;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-right: 15px;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "  label {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    overflow-y: hidden;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0026 \u003e label {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-left: 10px;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "  span {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-left: .25rem;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 47,
      "-": 205
    }
  },
  {
    "path": "frontend/src/static/css/v_authorship.scss",
    "fileType": "scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@import \u0027colors\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/* Authorship */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "#tab-authorship {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  .file-content {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: mui-color(\u0027github\u0027, \u0027title-background\u0027);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    border: solid mui-color(\u0027github\u0027, \u0027border\u0027);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    border-radius: 0 0 4px 4px;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    border-width: 0 1px 1px 1px;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  .title {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    .repoName {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      cursor: pointer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    .author {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      margin-left: .3rem;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    .period {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      margin-left: 2rem;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    .contribution {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      color: mui-color(\u0027red\u0027);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      .fileType {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        align-items: center;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        display: flex;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        margin-left: 3rem;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        margin-top: 1.0rem;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      .radio-button--search {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        float: left;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        margin: 1.75rem 2.0rem 0 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      .radio-button--checkbox {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        float: left;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        margin: 0 2.0rem 0 -3rem;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        vertical-align: middle;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      #search {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        margin-top: 1.25rem;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        padding: .5rem 1.0rem .25rem 1.0rem;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        width: 30%;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      #submit-button {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        background-color: mui-color(\u0027blue\u0027);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        color: mui-color(\u0027white\u0027);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        margin: 1.0rem 0 0 .25rem;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        padding: .5rem 1.0rem .25rem 1.0rem;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      .select {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        font-weight: bold;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      .loc {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        font-weight: bolder;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      .bloc {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        color: mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      span.fileType {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        span.bloc::after {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "          content: \u0027, \u0027;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        span.bloc:last-child::after {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "          content: \u0027\u0027;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      .mui-checkbox--fileType {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        vertical-align: middle;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      .checkboxes {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        label {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "          align-items: center;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "          display: inline-flex;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "          padding-right: 10px;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        span {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "          margin-left: .25rem;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  .files {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    clear: left;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    .file {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      pre {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        display: none;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        // GitHub\u0027s font family and font size"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        font-size: 12px;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026.active {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        pre {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "          display: grid;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "          margin-top: 0;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "          .hljs {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            // overwrite hljs library"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            display: inherit;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            padding: 0;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            white-space: pre-wrap;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    .title {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      background-color: mui-color(\u0027github\u0027, \u0027title-background\u0027);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      border: 1px solid mui-color(\u0027github\u0027, \u0027border\u0027);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      border-radius: 4px 4px 0 0;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      font-size: medium;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      font-weight: bold;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      margin-top: 1rem;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      padding: .3em .5em;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      .path {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        cursor: pointer;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        overflow-wrap: break-word;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "      .loc {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        color: mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "      .button {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        color: mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        margin-left: .5rem;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        text-decoration: none;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    .segment {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      border-left: .25rem solid mui-color(\u0027green\u0027);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "      .code {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        background-color: mui-color(\u0027github\u0027, \u0027authored-code-background\u0027);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        padding-left: 1rem;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "      .line-number {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        color: mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        float: left;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        // Not allowing user to select text"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        -webkit-touch-callout: none; /* iOS Safari */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        -webkit-user-select: none; /* Safari */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        -khtml-user-select: none; /* Konqueror HTML */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        -moz-user-select: none; /* Firefox */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        -ms-user-select: none; /* Internet Explorer/Edge */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        user-select: none; /* Non-prefixed version, currently supported by Chrome and Opera */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        width: 2rem;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        // overwrite all hljs colours"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        [class^\u003d\u0027hljs\u0027] {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "          color: mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      .line-content {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        padding-left: 2rem;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        word-break: break-word;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026.untouched {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        $grey: mui-color(\u0027grey\u0027, \u0027400\u0027);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        border-left: .25rem solid $grey;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        height: 20px; /* height of a single line of code */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        position: relative;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026.active {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "          height: auto;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "          .code {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            background-color: mui-color(\u0027white\u0027);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            display: inherit;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "          .closer {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            .icon {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0026.open {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                display: none;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "              }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0026.hide {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                display: inherit;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "              }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        .code {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "          display: none;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        .closer {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "          cursor: pointer;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "          // custom margin for position of toggle icon"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "          margin: .2rem 0 0 -.45rem;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "          position: absolute;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0026.bottom {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            //custom margin for position of toggle icon at the bottom of segment"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            margin: -1.05rem 0 0 -.45rem;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "          .icon {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            background-color: mui-color(\u0027white\u0027);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            color: mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            width: .75em;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026.open {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "              display: inherit;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026.hide {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "              display: none;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "  .empty {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    text-align: center;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 7,
      "-": 238
    }
  },
  {
    "path": "frontend/src/static/css/v_summary.scss",
    "fileType": "scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@import \u0027colors\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/* Summary */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "#summary {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  .fileTypes {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    align-items: center;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    text-align: left;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    .checkboxes {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      label {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        align-items: center;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        border-radius: 5px;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        display: inline-flex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        margin: 0 5px 5px 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        padding: 0 5px;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      span {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        margin-left: .25rem;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  .summary-status {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    text-align: center;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  .icon-button {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    color: mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    cursor: pointer;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    text-decoration: none;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  .summary-picker {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    align-items: center;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    display: flex;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-flow: row wrap;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    justify-content: center;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-bottom: 2rem;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026__section {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      align-items: inherit;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      display: flex;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      flex: 0 1 auto;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      flex-flow: inherit;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      justify-content: inherit;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026__checkboxes {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      label {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        margin-left: .5rem;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      span {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        margin-left: .25rem;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    .mui-textfield,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    .mui-select {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      margin: .5rem;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      padding-right: 10px;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    .mui-btn {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      background: transparent;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      box-shadow: none;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      color: mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      font-size: .75rem;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      font-weight: bold;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      left: -8px;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      margin: 0;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "      padding: 0;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      vertical-align: middle;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    .search_box {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      align-items: center;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      display: flex;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    input {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      font-size: .75rem;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "      padding-right: 10px;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    label {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      font-size: .75rem;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      overflow-y: hidden;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      text-align: left;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      width: fit-content;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    input,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    select {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      font-size: .75rem;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  .summary-charts {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-bottom: 3rem;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026__title {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      align-items: center;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      display: flex;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      font-weight: bold;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      text-align: left;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026--index {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        background: mui-color(\u0027black\u0027);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        color: mui-color(\u0027white\u0027);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        font-size: medium;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        overflow: hidden;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        padding: .1em .25em;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        vertical-align: middle;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      \u0026--groupname {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        font-size: medium;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        padding: .5rem;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026--percentile {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        color: mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        margin-left: auto;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026--contribution {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        display: inline;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        padding-right: .5rem;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026__fileType--breakdown {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      overflow-y: hidden;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026__legend {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        display: inline;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        float: left;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "  .summary-chart {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-bottom: 1rem;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    overflow: auto;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    position: relative;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    text-align: left;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026__title {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      align-items: center;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      clear: left;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      display: flex;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026 \u003e * {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        padding-right: .5rem;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026--index,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026--repo {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        font-weight: bold;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026--index::after {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        content: \u0027.\u0027;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026--repo {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        padding-right: .25rem;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026--percentile {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        color: mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        margin-left: auto;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        padding-right: 0;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026__ramp {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      position: relative;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "      .overlay {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        height: 100%;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        position: absolute;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        top: 0;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026.show {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "          background-color: rgba(mui-color(\u0027white\u0027), .5);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "          border: 1px dashed mui-color(\u0027black\u0027);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026.edge {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "          border-right: 1px dashed mui-color(\u0027black\u0027);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026__contrib {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "      text-align: left;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026--bar {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        background-color: mui-color(\u0027red\u0027);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        float: left;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        height: 4px;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        margin-top: 2px;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 2,
      "-": 207
    }
  },
  {
    "path": "frontend/src/static/css/v_zoom.scss",
    "fileType": "scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@import \u0027colors\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ".zoom {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0026__title {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026--chart {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "      margin-left: .3rem;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026--period {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      margin-left: 2rem;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026--granularity {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      margin-top: .5rem;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026--tags {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      margin: .25rem 0 .25rem 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      .tag {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        cursor: pointer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0026__toggle-commit-message-body {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-top: 10px;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0026__day,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0026__title {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Tags in commits */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    .tag {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      background: mui-color(\u0027grey\u0027, \u0027600\u0027);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      border-radius: 5px;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      color: mui-color(\u0027white\u0027);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      display: inline-block;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      margin: .2rem .2rem .2rem 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      padding: 0 3px 0 3px;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      .fa-tags {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        width: .65rem;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "/* Commit Message Body in Zoom Tab */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ".commit-message {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  padding: 5px;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0026:focus,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0026:focus-within {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    border: 1px solid mui-color(\u0027blue\u0027, \u0027500\u0027);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0026.active {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    .body {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      background-color: mui-color(\u0027white\u0027);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      border: 1px solid mui-color(\u0027grey\u0027, \u0027700\u0027);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      display: grid;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      margin: .25rem 0 .25rem 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      overflow-x: auto;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      padding: .4rem;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      resize: none;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      pre {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        position: relative;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        .dashed-border {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          border-right: 1px dashed mui-color(\u0027grey\u0027, \u0027500\u0027); // 72nd character line"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          height: 100%;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          pointer-events: none;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          position: absolute;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          top: 0;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          width: 72ch;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  .body {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    display: none;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  .tag {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    cursor: pointer;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026:focus {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      border: 1px solid mui-color(\u0027blue\u0027, \u0027500\u0027);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      outline: none;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0026--button {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    color: mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-left: .5rem;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026:hover {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      cursor: pointer;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  pre {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    margin: 0;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  span.loc {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    color: mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  .message-title {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    display: inline;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    font-family: monospace;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    .within-border {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      display: inline;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    .not-within-border {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      border-left: 1px dashed mui-color(\u0027grey\u0027, \u0027500\u0027); // 50th character line"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      display: inline;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 32,
      "-": 93
    }
  },
  {
    "path": "frontend/src/static/js/api.js",
    "fileType": "js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// utility functions //"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "window.$ \u003d (id) \u003d\u003e document.getElementById(id);"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "window.enquery \u003d (key, val) \u003d\u003e `${key}\u003d${encodeURIComponent(val)}`;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "const REPORT_DIR \u003d \u0027.\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "// data retrieval functions //"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "function loadJSON(fname) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  if (window.REPORT_ZIP) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    const zipObject \u003d window.REPORT_ZIP.file(fname.slice(2));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    if (zipObject) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      return zipObject.async(\u0027text\u0027).then((txt) \u003d\u003e JSON.parse(txt));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    return Promise.reject(new Error(\u0027Zip file is invalid.\u0027));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  return new Promise((resolve, reject) \u003d\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    const xhr \u003d new XMLHttpRequest();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    xhr.open(\u0027GET\u0027, fname);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    xhr.onload \u003d function xhrOnload() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      if (xhr.status \u003d\u003d\u003d 200) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        resolve(JSON.parse(xhr.responseText));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        reject(new Error(\u0027Unable to get file.\u0027));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    xhr.send(null);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "window.api \u003d {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  loadSummary() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    window.REPOS \u003d {};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    return loadJSON(`${REPORT_DIR}/summary.json`)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        .then((data) \u003d\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "          window.app.creationDate \u003d data.reportGeneratedTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          window.app.sinceDate \u003d data.sinceDate;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "          window.app.untilDate \u003d data.untilDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          window.app.repoSenseVersion \u003d data.repoSenseVersion;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "          window.app.reportGenerationTime \u003d data.reportGenerationTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          window.app.isSinceDateProvided \u003d data.isSinceDateProvided;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          window.app.isUntilDateProvided \u003d data.isUntilDateProvided;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "          Object.entries(data.errorList).forEach(([repoName, message]) \u003d\u003e {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            window.app.errorMessages[repoName] \u003d message;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          const names \u003d [];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "          data.repos.forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            const repoName \u003d `${repo.displayName}`;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            window.REPOS[repoName] \u003d repo;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            names.push(repoName);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "          return names;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCommits(repoName) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    const folderName \u003d window.REPOS[repoName].outputFolderName;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    return loadJSON(`${REPORT_DIR}/${folderName}/commits.json`).then((commits) \u003d\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      const res \u003d [];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      const repo \u003d window.REPOS[repoName];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(commits.authorDisplayNameMap).forEach((author) \u003d\u003e {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        if (author) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "          const obj \u003d {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            name: author,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            repoId: repoName,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            variance: commits.authorContributionVariance[author],"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            displayName: commits.authorDisplayNameMap[author],"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            dailyCommits: commits.authorDailyContributionsMap[author],"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            totalCommits: commits.authorFinalContributionMap[author],"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTypeContribution: commits.authorFileTypeContributionMap[author],"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "          const searchParams \u003d ["
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "              repo.displayName,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "              obj.displayName, author,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "          ];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "          obj.searchPath \u003d searchParams.join(\u0027_\u0027).toLowerCase();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "          obj.repoName \u003d `${repo.displayName}`;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "          obj.location \u003d `${repo.location.location}`;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "          res.push(obj);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      repo.commits \u003d commits;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      repo.users \u003d res;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      return res;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  loadAuthorship(repoName) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    const folderName \u003d window.REPOS[repoName].outputFolderName;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    return loadJSON(`${REPORT_DIR}/${folderName}/authorship.json`)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        .then((files) \u003d\u003e {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "          window.REPOS[repoName].files \u003d files;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "          return files;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 2,
      "-": 102
    }
  },
  {
    "path": "frontend/src/static/js/main.js",
    "fileType": "js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "window.BASE_URL \u003d \u0027https://github.com\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "window.REPORT_ZIP \u003d null;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "window.REPOS \u003d {};"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "window.isMacintosh \u003d navigator.platform.includes(\u0027Mac\u0027);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "window.hashParams \u003d {};"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "window.addHash \u003d function addHash(newKey, newVal) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  window.hashParams[newKey] \u003d newVal;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "window.removeHash \u003d function removeHash(key) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  delete window.hashParams[key];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "window.encodeHash \u003d function encodeHash() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  const { hashParams } \u003d window;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  window.location.hash \u003d Object.keys(hashParams)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      .map((key) \u003d\u003e `${key}\u003d${encodeURIComponent(hashParams[key])}`)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      .join(\u0027\u0026\u0027);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "window.decodeHash \u003d function decodeHash() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  const hashParams \u003d {};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  window.location.hash.slice(1).split(\u0027\u0026\u0027)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      .forEach((param) \u003d\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        const [key, val] \u003d param.split(\u0027\u003d\u0027);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        if (key) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            hashParams[key] \u003d decodeURIComponent(val);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "          } catch (error) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            this.userUpdated \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            this.isLoading \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  window.hashParams \u003d hashParams;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "const DRAG_BAR_WIDTH \u003d 13.25;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "const SCROLL_BAR_WIDTH \u003d 17;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "const GUIDE_BAR_WIDTH \u003d 2;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "const throttledEvent \u003d (delay, handler) \u003d\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  let lastCalled \u003d 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  return (...args) \u003d\u003e {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    if (Date.now() - lastCalled \u003e delay) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      lastCalled \u003d Date.now();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      handler(...args);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "let guideWidth \u003d (0.5 * window.innerWidth - (GUIDE_BAR_WIDTH / 2))"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    / window.innerWidth;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "let flexWidth \u003d 0.5;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "window.mouseMove \u003d () \u003d\u003e {};"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "window.registerMouseMove \u003d () \u003d\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  const innerMouseMove \u003d (event) \u003d\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    guideWidth \u003d ("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      Math.min("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          Math.max("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "              window.innerWidth - event.clientX,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "              SCROLL_BAR_WIDTH + DRAG_BAR_WIDTH,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "          ),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "          window.innerWidth - SCROLL_BAR_WIDTH,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      )"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        - (GUIDE_BAR_WIDTH / 2)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    ) / window.innerWidth;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    window.$(\u0027tab-resize-guide\u0027).style.right \u003d `${guideWidth * 100}%`;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  window.$(\u0027tab-resize-guide\u0027).style.display \u003d \u0027block\u0027;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  window.$(\u0027app-wrapper\u0027).style[\u0027user-select\u0027] \u003d \u0027none\u0027;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  window.mouseMove \u003d throttledEvent(30, innerMouseMove);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "window.deregisterMouseMove \u003d () \u003d\u003e {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  flexWidth \u003d (guideWidth * window.innerWidth + (GUIDE_BAR_WIDTH / 2))"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        / window.innerWidth;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  window.mouseMove \u003d () \u003d\u003e {};"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  if (window.$(\u0027tabs-wrapper\u0027)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    window.$(\u0027tabs-wrapper\u0027).style.flex \u003d `0 0 ${flexWidth * 100}%`;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  window.$(\u0027tab-resize-guide\u0027).style.display \u003d \u0027none\u0027;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  window.$(\u0027app-wrapper\u0027).style[\u0027user-select\u0027] \u003d \u0027auto\u0027;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "/* global Vue hljs */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "Vue.directive(\u0027hljs\u0027, {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  inserted(ele, binding) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    const element \u003d ele;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    element.className \u003d binding.value.split(\u0027.\u0027).pop();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    hljs.highlightBlock(element);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "window.app \u003d new window.Vue({"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  el: \u0027#app\u0027,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  data: {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    repos: {},"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    users: [],"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    repoLength: 0,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    loadedRepo: 0,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    userUpdated: false,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    isLoading: false,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    isTabActive: true, // to force tab wrapper to load"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    tabType: \u0027empty\u0027,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    tabInfo: {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      tabAuthorship: {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        author: \u0027\u0027,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        location: \u0027\u0027,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        maxDate: \u0027\u0027,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        minDate: \u0027\u0027,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        name: \u0027\u0027,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        repo: \u0027\u0027,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      tabZoom: {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        avgCommitSize: 0,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        filterGroupSelection: \u0027\u0027,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        filterTimeFrame: \u0027\u0027,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        location: \u0027\u0027,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        isMergeGroup: false,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        sinceDate: \u0027\u0027,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        untilDate: \u0027\u0027,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        user: null,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    creationDate: \u0027\u0027,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    errorMessages: {},"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    // model functions //"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    updateReportZip(evt) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "      this.users \u003d [];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      window.JSZip.loadAsync(evt.target.files[0])"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "          .then((zip) \u003d\u003e {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            window.REPORT_ZIP \u003d zip;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "          }, () \u003d\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            window.alert(\u0027Either the .zip file is corrupted, or you uploaded a .zip file that is not generated \u0027"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                + \u0027by RepoSense.\u0027);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "          })"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          .then(() \u003d\u003e this.updateReportView().then(() \u003d\u003e this.renderTabHash()));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    updateReportDir() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      window.REPORT_ZIP \u003d null;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      this.users \u003d [];"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.updateReportView().then(() \u003d\u003e this.renderTabHash());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    async updateReportView() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      await window.api.loadSummary().then((names) \u003d\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        this.repos \u003d window.REPOS;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        this.repoLength \u003d Object.keys(window.REPOS).length;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadedRepo \u003d 0;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userUpdated \u003d false;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isLoading \u003d true;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadedRepo \u003d 0;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        return Promise.all(names.map((name) \u003d\u003e ("
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "          window.api.loadCommits(name)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "              .then(() \u003d\u003e { this.loadedRepo +\u003d 1; })"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        )));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      }).then(() \u003d\u003e {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userUpdated \u003d true;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isLoading \u003d false;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.getUsers();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "      }).catch((error) \u003d\u003e {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userUpdated \u003d false;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isLoading \u003d false;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        window.alert(error);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    getUsers() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      const full \u003d [];"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(this.repos).forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.repos[repo].users) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "          full.push(this.repos[repo]);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.users \u003d full;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    // handle opening of sidebar //"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    activateTab(tabName) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "      if (document.getElementById(\u0027tabs-wrapper\u0027)) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        document.getElementById(\u0027tabs-wrapper\u0027).scrollTop \u003d 0;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isTabActive \u003d true;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "      this.tabType \u003d tabName;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      window.addHash(\u0027tabOpen\u0027, this.isTabActive);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      window.addHash(\u0027tabType\u0027, this.tabType);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      window.encodeHash();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    deactivateTab() {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.isTabActive \u003d false;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      window.addHash(\u0027tabOpen\u0027, this.isTabActive);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      window.removeHash(\u0027tabAuthor\u0027);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      window.removeHash(\u0027tabRepo\u0027);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      window.removeHash(\u0027tabType\u0027);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      window.encodeHash();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    updateTabAuthorship(obj) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "      this.tabInfo.tabAuthorship \u003d Object.assign({}, this.tabInfo.tabAuthorship, obj);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "      this.activateTab(\u0027authorship\u0027);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    updateTabZoom(obj) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "      this.tabInfo.tabZoom \u003d Object.assign({}, this.tabInfo.tabZoom, obj);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "      this.activateTab(\u0027zoom\u0027);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    // updating summary view"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    updateSummaryDates(since, until) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.$refs.summary.updateDateRange(since, until);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    renderAuthorShipTabHash(minDate, maxDate) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "      const hash \u003d window.hashParams;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "      const info \u003d {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        author: hash.tabAuthor,"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        repo: hash.tabRepo,"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        minDate,"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        maxDate,"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "      const tabInfoLength \u003d Object.values(info).filter((x) \u003d\u003e x).length;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "      if (Object.keys(info).length \u003d\u003d\u003d tabInfoLength) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        this.updateTabAuthorship(info);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (hash.tabOpen \u003d\u003d\u003d \u0027false\u0027 || tabInfoLength \u003e 2) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        window.app.isTabActive \u003d false;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    renderTabHash() {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      window.decodeHash();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const hash \u003d window.hashParams;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (!hash.tabOpen) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.isTabActive \u003d hash.tabOpen \u003d\u003d\u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (this.isTabActive) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        if (hash.tabType \u003d\u003d\u003d \u0027authorship\u0027) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          let { since, until } \u003d hash;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          // get since and until dates from window.app if not found in hash"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          since \u003d since || window.app.sinceDate;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          until \u003d until || window.app.untilDate;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          this.renderAuthorShipTabHash(since, until);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          // handle zoom tab if needed"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    getRepoSenseHomeLink() {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "      return \u0027http://reposense.org\u0027;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    getUserGuideVersionLink() {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "      const version \u003d window.app.repoSenseVersion;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!version) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        return `${window.BASE_URL}/reposense/RepoSense`;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "      return `${window.BASE_URL}/reposense/RepoSense/blob/${version}/docs/UserGuide.md`;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    receiveDates(dates) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "      const [minDate, maxDate] \u003d dates;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (this.tabType \u003d\u003d\u003d \u0027authorship\u0027) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        this.renderAuthorShipTabHash(minDate, maxDate);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "  components: {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    v_zoom: window.vZoom,"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    v_summary: window.vSummary,"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    v_authorship: window.vAuthorship,"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    CircleSpinner: window.VueLoadingSpinner.Circle,"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "  created() {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "    this.updateReportDir();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "  updated() {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    this.$nextTick(() \u003d\u003e {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "      if (window.$(\u0027tabs-wrapper\u0027)) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        window.$(\u0027tabs-wrapper\u0027).style.flex \u003d `0 0 ${flexWidth * 100}%`;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 48,
      "-": 253
    }
  },
  {
    "path": "frontend/src/static/js/safari_date.js",
    "fileType": "js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "// date keys for handling safari date input //"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "function isIntegerKey(key) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  return (key \u003e\u003d 48 \u0026\u0026 key \u003c\u003d 57) || (key \u003e\u003d 96 \u0026\u0026 key \u003c\u003d 105);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "function isArrowOrEnterKey(key) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  return (key \u003e\u003d 37 \u0026\u0026 key \u003c\u003d 40) || key \u003d\u003d\u003d 13;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "function isBackSpaceOrDeleteKey(key) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  return key \u003d\u003d\u003d 8 || key \u003d\u003d\u003d 46;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "function validateInputDate(event) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  const key \u003d event.keyCode;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  // only allow integer, backspace, delete, arrow or enter keys"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  if (!(isIntegerKey(key) || isBackSpaceOrDeleteKey(key) || isArrowOrEnterKey(key))) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    event.preventDefault();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "function deleteDashInputDate(event) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  const key \u003d event.keyCode;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  const date \u003d event.target.value;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  // remove two chars before the cursor\u0027s position if deleting dash character"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  if (isBackSpaceOrDeleteKey(key)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    const cursorPosition \u003d event.target.selectionStart;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    if (date[cursorPosition - 1] \u003d\u003d\u003d \u0027-\u0027) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      event.target.value \u003d date.slice(0, cursorPosition - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "window.formatInputDateOnKeyDown \u003d function (event) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  validateInputDate(event);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  deleteDashInputDate(event);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "};"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "window.appendDashInputDate \u003d function (event) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  const date \u003d event.target.value;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  // append dash to date with format yyyy-mm-dd"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  if (date.match(/^\\d{4}$/) !\u003d\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    event.target.value +\u003d \u0027-\u0027;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  } else if (date.match(/^\\d{4}-\\d{2}$/) !\u003d\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    event.target.value +\u003d \u0027-\u0027;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 47
    }
  },
  {
    "path": "frontend/src/static/js/v_authorship.js",
    "fileType": "js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "const filesSortDict \u003d {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  lineOfCode: (file) \u003d\u003e file.lineCount,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  path: (file) \u003d\u003e file.path,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  fileName: (file) \u003d\u003e file.path.split(/[/]+/).pop(),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  fileType: (file) \u003d\u003e file.fileType,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "window.toggleNext \u003d function toggleNext(ele) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  // function for toggling unopened code"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  const targetClass \u003d \u0027active\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  const parent \u003d ele.parentNode;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  const classes \u003d parent.className.split(\u0027 \u0027);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  const idx \u003d classes.indexOf(targetClass);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  if (idx \u003d\u003d\u003d -1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    classes.push(targetClass);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    classes.splice(idx, 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  parent.className \u003d classes.join(\u0027 \u0027);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "const repoCache \u003d [];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "const minimatch \u003d require(\u0027minimatch\u0027);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "window.vAuthorship \u003d {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  props: {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    info: Object,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  template: window.$(\u0027v_authorship\u0027).innerHTML,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  data() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      isLoaded: false,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      files: [],"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      filterType: \u0027checkboxes\u0027,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      selectedFileTypes: [],"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      fileTypes: [],"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      fileTypeBlankLinesObj: {},"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      totalLineCount: \u0027\u0027,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      totalBlankLineCount: \u0027\u0027,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      filesSortType: \u0027lineOfCode\u0027,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      toReverseSortFiles: true,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      hasActiveFile: true,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      filterSearch: \u0027*\u0027,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  watch: {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    selectedFiles() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      setTimeout(this.updateCount, 0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    filterType() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.filterType \u003d\u003d\u003d \u0027checkboxes\u0027) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        const searchBar \u003d document.getElementById(\u0027search\u0027);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        searchBar.value \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterSearch \u003d \u0027*\u0027;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        this.selectedFileTypes \u003d this.fileTypes.slice();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    info() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      this.initiate();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      this.setInfoHash();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    initiate() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "      const repo \u003d window.REPOS[this.info.repo];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getRepoProps(repo);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (!repo || !this.info.author) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        window.app.isTabActive \u003d false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      if (repoCache.length \u003d\u003d\u003d 2) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        const toRemove \u003d repoCache.shift();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        if (toRemove !\u003d\u003d this.info.repo) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "          delete window.REPOS[toRemove].files;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      repoCache.push(this.info.repo);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      if (repo.files) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        this.processFiles(repo.files);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        window.api.loadAuthorship(this.info.repo)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            .then((files) \u003d\u003e this.processFiles(files));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    getRepoProps(repo) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      if (repo) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        const author \u003d repo.users.filter((user) \u003d\u003e user.name \u003d\u003d\u003d this.info.author);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        if (author.length \u003e 0) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "          this.info.name \u003d author[0].displayName;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "          this.filesLinesObj \u003d author[0].fileTypeContribution;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    setInfoHash() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const { addHash, encodeHash } \u003d window;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027tabAuthor\u0027, this.info.author);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027tabRepo\u0027, this.info.repo);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      encodeHash();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    expandAll(hasActiveFile) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "      const renameValue \u003d hasActiveFile ? \u0027file active\u0027 : \u0027file\u0027;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      const files \u003d document.getElementsByClassName(\u0027file\u0027);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      Array.from(files).forEach((file) \u003d\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        file.className \u003d renameValue;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      this.hasActiveFile \u003d hasActiveFile;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    updateCount() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      this.hasActiveFile \u003d document.getElementsByClassName(\u0027file active\u0027).length \u003e 0;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    hasCommits(info) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      if (window.REPOS[info.repo]) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        return window.REPOS[info.repo].commits.authorFinalContributionMap[info.author] \u003e 0;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    splitSegments(lines) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      // split into segments separated by authored"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      let lastState;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "      let lastId \u003d -1;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "      const segments \u003d [];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "      let blankLineCount \u003d 0;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      lines.forEach((line, lineCount) \u003d\u003e {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        const authored \u003d (line.author \u0026\u0026 line.author.gitId \u003d\u003d\u003d this.info.author);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        if (authored !\u003d\u003d lastState || lastId \u003d\u003d\u003d -1) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "          segments.push({"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            authored,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            lines: [],"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            lineNumbers: [],"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "          lastId +\u003d 1;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "          lastState \u003d authored;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        const content \u003d line.content || \u0027 \u0027;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        segments[lastId].lines.push(content);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        segments[lastId].lineNumbers.push(lineCount + 1);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        if (line.content \u003d\u003d\u003d \u0027\u0027 \u0026\u0026 authored) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "          blankLineCount +\u003d 1;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        segments,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        blankLineCount,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    processFiles(files) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "      const res \u003d [];"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "      const fileTypeBlanksInfoObj \u003d {};"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalLineCount \u003d 0;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalBlankLineCount \u003d 0;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "      files.forEach((file) \u003d\u003e {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        const lineCnt \u003d file.authorContributionMap[this.info.author];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        if (lineCnt) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "          totalLineCount +\u003d lineCnt;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "          const out \u003d {};"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "          out.path \u003d file.path;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "          out.lineCount \u003d lineCnt;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "          out.fileType \u003d file.fileType;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "          const segmentInfo \u003d this.splitSegments(file.lines);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "          out.segments \u003d segmentInfo.segments;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "          totalBlankLineCount +\u003d segmentInfo.blankLineCount;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "          this.addBlankLineCount(file.fileType, segmentInfo.blankLineCount,"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "              fileTypeBlanksInfoObj);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "          res.push(out);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "      this.totalLineCount \u003d totalLineCount;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "      this.totalBlankLineCount \u003d totalBlankLineCount;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "      res.sort((a, b) \u003d\u003e b.lineCount - a.lineCount);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(this.filesLinesObj).forEach((file) \u003d\u003e {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.filesLinesObj[file] !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "          this.selectedFileTypes.push(file);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "          this.fileTypes.push(file);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "      this.selectedFileTypes \u003d this.fileTypes.slice();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      this.fileTypeBlankLinesObj \u003d fileTypeBlanksInfoObj;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "      this.files \u003d res;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isLoaded \u003d true;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    addBlankLineCount(fileType, lineCount, filesInfoObj) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!filesInfoObj[fileType]) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        filesInfoObj[fileType] \u003d 0;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "      filesInfoObj[fileType] +\u003d lineCount;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    updateFilterSearch(evt) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.filterType \u003d\u003d\u003d \u0027checkboxes\u0027) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        this.indicateSearchBar();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filterSearch \u003d (evt.target.value.length !\u003d\u003d 0) ? evt.target.value : \u0027*\u0027;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    indicateSearchBar() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "      this.selectedFileTypes \u003d this.fileTypes.slice();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filterType \u003d \u0027search\u0027;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    indicateCheckBoxes() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.filterType \u003d\u003d\u003d \u0027search\u0027) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        const searchBar \u003d document.getElementById(\u0027search\u0027);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        searchBar.value \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterSearch \u003d \u0027*\u0027;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterType \u003d \u0027checkboxes\u0027;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    getFileLink(file, path) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "      const repo \u003d window.REPOS[this.info.repo];"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "      return `${window.BASE_URL}/${"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        repo.location.organization}/${repo.location.repoName}/${path}/${repo.branch}/${file.path}`;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    getFileTypeBlankLineInfo(fileType) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "      return `${fileType}: Blank: ${"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        this.fileTypeBlankLinesObj[fileType]}, Non-Blank: ${"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filesLinesObj[fileType] - this.fileTypeBlankLinesObj[fileType]}`;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    getTotalFileBlankLineInfo() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "      return `Total: Blank: ${this.totalBlankLineCount}, Non-Blank: ${"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        this.totalLineCount - this.totalBlankLineCount}`;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "  computed: {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    sortingFunction() {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "      return (a, b) \u003d\u003e (this.toReverseSortFiles ? -1 : 1)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        * window.comparator(filesSortDict[this.filesSortType])(a, b);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    isSelectAllChecked: {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "      get() {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.selectedFileTypes.length \u003d\u003d\u003d this.fileTypes.length;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "      set(value) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.filterType \u003d\u003d\u003d \u0027search\u0027) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "          this.indicateCheckBoxes();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        if (value) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "          this.selectedFileTypes \u003d this.fileTypes.slice();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "          this.selectedFileTypes \u003d [];"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    selectedFiles() {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.files.filter((file) \u003d\u003e this.selectedFileTypes.includes(file.fileType)"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0026\u0026 minimatch(file.path, this.filterSearch, { matchBase: true, dot: true }))"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "          .sort(this.sortingFunction);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    getFileTypeExistingLinesObj() {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "      const numLinesModified \u003d {};"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.entries(this.filesLinesObj)"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "          .filter(([, value]) \u003d\u003e value \u003e 0)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "          .forEach(([langType, value]) \u003d\u003e {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "            numLinesModified[langType] \u003d value;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "      return numLinesModified;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "  created() {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    this.initiate();"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "    this.setInfoHash();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  components: {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    v_segment: window.vSegment,"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  },"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 10,
      "-": 298
    }
  },
  {
    "path": "frontend/src/static/js/v_ramp.js",
    "fileType": "js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "function getBaseLink(repoId) {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  return `${window.BASE_URL}/${"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    window.REPOS[repoId].location.organization}/${"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    window.REPOS[repoId].location.repoName}`;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "window.rampClick \u003d function rampClick(evt) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  const isKeyPressed \u003d this.isMacintosh ? evt.metaKey : evt.ctrlKey;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  if (isKeyPressed) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    evt.preventDefault();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "window.vRamp \u003d {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  props: [\u0027groupby\u0027, \u0027user\u0027, \u0027tframe\u0027, \u0027avgsize\u0027, \u0027sdate\u0027, \u0027udate\u0027, \u0027mergegroup\u0027],"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  template: window.$(\u0027v_ramp\u0027).innerHTML,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  data() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      rampSize: 0.01,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    getLink(user, slice) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      const { REPOS } \u003d window;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const untilDate \u003d this.tframe \u003d\u003d\u003d \u0027week\u0027 ? slice.endDate : slice.date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (this.mergegroup) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return this.getMergedLink(user, slice, untilDate);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (this.tframe \u003d\u003d\u003d \u0027commit\u0027) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return `${getBaseLink(user.repoId)}/commit/${slice.hash}`;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      return `${getBaseLink(user.repoId)}/commits/${REPOS[user.repoId].branch}?`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "          + `author\u003d${user.name}\u0026`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          + `since\u003d${slice.date}\u0027T\u002700:00:00+08:00\u0026`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "          + `until\u003d${untilDate}\u0027T\u002723:59:59+08:00`;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    getMergedLink(user, slice, untilDate) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const { REPOS } \u003d window;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (this.tframe \u003d\u003d\u003d \u0027commit\u0027) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return `${getBaseLink(slice.repoId)}/commit/${slice.hash}`;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      return `${getBaseLink(user.repoId)}/commits/${REPOS[user.repoId].branch}?`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          + `since\u003d${slice.date}\u0027T\u002700:00:00+08:00\u0026`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          + `until\u003d${untilDate}\u0027T\u002723:59:59+08:00`;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    getWidth(slice) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      if (slice.insertions \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      const newSize \u003d 100 * (slice.insertions / this.avgsize);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      return Math.max(newSize * this.rampSize, 0.5);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    // position for commit granularity"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    getCommitPos(i, total) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      return (total - i - 1) * window.DAY_IN_MS / total"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "          / (this.getTotalForPos(this.sdate, this.udate) + window.DAY_IN_MS);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    // position for day granularity"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    getSlicePos(date) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      const total \u003d this.getTotalForPos(this.sdate, this.udate);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      return (new Date(this.udate) - new Date(date)) / (total + window.DAY_IN_MS);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    // get duration in miliseconds between 2 date"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    getTotalForPos(sinceDate, untilDate) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      return new Date(untilDate) - new Date(sinceDate);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    getSliceColor(date) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      const timeMs \u003d (new Date(date)).getTime();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      return (timeMs / window.DAY_IN_MS) % 5;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 25,
      "-": 56
    }
  },
  {
    "path": "frontend/src/static/js/v_segment.js",
    "fileType": "js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "window.vSegment \u003d {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  props: [\u0027segment\u0027, \u0027path\u0027],"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  template: window.$(\u0027v_segment\u0027).innerHTML,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  data() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      loaded: this.segment.authored || this.segment.lines.length \u003c 5,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    };"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  },"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    loadCode() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.loaded \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      // Update button and code css only once code has loaded into DOM"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "      this.$nextTick(() \u003d\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        window.toggleNext(this.$el.childNodes[0]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  },"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 15,
      "-": 3
    }
  },
  {
    "path": "frontend/src/static/js/v_summary.js",
    "fileType": "js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "window.dismissTab \u003d function dismissTab(node) {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  const parent \u003d node.parentNode;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  parent.style.display \u003d \u0027none\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "window.comparator \u003d (fn) \u003d\u003e function compare(a, b) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  const a1 \u003d fn(a).toLowerCase ? fn(a).toLowerCase() : fn(a);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  const b1 \u003d fn(b).toLowerCase ? fn(b).toLowerCase() : fn(b);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  if (a1 \u003d\u003d\u003d b1) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    return 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  } if (a1 \u003c b1) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    return -1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  return 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "// ui funcs, only allow one ramp to be highlighted //"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "let drags \u003d [];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "function getBaseTarget(target) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  return (target.className \u003d\u003d\u003d \u0027summary-chart__ramp\u0027)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      ? target"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      : getBaseTarget(target.parentElement);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "function deactivateAllOverlays() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  document.querySelectorAll(\u0027.summary-chart__ramp .overlay\u0027)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      .forEach((x) \u003d\u003e { x.className \u003d \u0027overlay\u0027; });"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "function dragViewDown(evt) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  deactivateAllOverlays();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  const pos \u003d evt.clientX;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  const ramp \u003d getBaseTarget(evt.target);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  drags \u003d [pos];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  const base \u003d ramp.offsetWidth;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  const offset \u003d ramp.parentElement.offsetLeft;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  const overlay \u003d ramp.getElementsByClassName(\u0027overlay\u0027)[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  overlay.style.marginLeft \u003d \u00270\u0027;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  overlay.style.width \u003d `${(pos - offset) * 100 / base}%`;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  overlay.className +\u003d \u0027 edge\u0027;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "function dragViewUp(evt) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  deactivateAllOverlays();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  const ramp \u003d getBaseTarget(evt.target);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  const base \u003d ramp.offsetWidth;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  drags.push(evt.clientX);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  drags.sort((a, b) \u003d\u003e a - b);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  const offset \u003d ramp.parentElement.offsetLeft;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  drags \u003d drags.map((x) \u003d\u003e (x - offset) * 100 / base);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  const overlay \u003d ramp.getElementsByClassName(\u0027overlay\u0027)[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  overlay.style.marginLeft \u003d `${drags[0]}%`;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  overlay.style.width \u003d `${drags[1] - drags[0]}%`;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  overlay.className +\u003d \u0027 show\u0027;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "window.viewClick \u003d function viewClick(evt) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  const isKeyPressed \u003d this.isMacintosh ? evt.metaKey : evt.ctrlKey;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  if (drags.length \u003d\u003d\u003d 2) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    drags \u003d [];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  if (isKeyPressed) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    return drags.length \u003d\u003d\u003d 0"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        ? dragViewDown(evt)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        : dragViewUp(evt);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  return null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "// date functions //"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "const DAY_IN_MS \u003d (1000 * 60 * 60 * 24);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "window.DAY_IN_MS \u003d DAY_IN_MS;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "const WEEK_IN_MS \u003d DAY_IN_MS * 7;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "const dateFormatRegex \u003d /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$/;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "function getDateStr(date) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  return (new Date(date)).toISOString().split(\u0027T\u0027)[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "function dateRounding(datestr, roundDown) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  // rounding up to nearest monday"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  const date \u003d new Date(datestr);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  const day \u003d date.getUTCDay();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  let datems \u003d date.getTime();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  if (roundDown) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    datems -\u003d ((day + 6) % 7) * DAY_IN_MS;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    datems +\u003d ((8 - day) % 7) * DAY_IN_MS;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  return getDateStr(datems);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "window.vSummary \u003d {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  props: [\u0027repos\u0027, \u0027errorMessages\u0027],"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  template: window.$(\u0027v_summary\u0027).innerHTML,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  data() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      checkedFileTypes: [],"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      fileTypes: [],"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      filtered: [],"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      filterSearch: \u0027\u0027,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      filterGroupSelection: \u0027groupByRepos\u0027,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      sortGroupSelection: \u0027groupTitle\u0027, // UI for sorting groups"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      sortWithinGroupSelection: \u0027title\u0027, // UI for sorting within groups"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      sortingOption: \u0027\u0027,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      isSortingDsc: \u0027\u0027,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      sortingWithinOption: \u0027\u0027,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      isSortingWithinDsc: \u0027\u0027,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      filterTimeFrame: \u0027commit\u0027,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      filterBreakdown: false,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      isMergeGroup: false,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      tmpFilterSinceDate: \u0027\u0027,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      tmpFilterUntilDate: \u0027\u0027,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      hasModifiedSinceDate: window.app.isSinceDateProvided,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      hasModifiedUntilDate: window.app.isUntilDateProvided,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      filterSinceDate: \u0027\u0027,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      filterUntilDate: \u0027\u0027,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      filterHash: \u0027\u0027,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      minDate: \u0027\u0027,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      maxDate: \u0027\u0027,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      fileTypeColors: {},"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      isSafariBrowser: /.*Version.*Safari.*/.test(navigator.userAgent),"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  watch: {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    checkedFileTypes() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    filterBreakdown() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    sortGroupSelection() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    sortWithinGroupSelection() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    filterTimeFrame() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    filterGroupSelection() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      // merge group is not allowed when group by none"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.isMergeGroup \u003d false;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    isMergeGroup() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    tmpFilterSinceDate() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.tmpFilterSinceDate \u0026\u0026 this.tmpFilterSinceDate \u003e\u003d this.minDate) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterSinceDate \u003d this.tmpFilterSinceDate;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (!this.tmpFilterSinceDate) { // If user clears the since date field"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterSinceDate \u003d this.minDate;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    tmpFilterUntilDate() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.tmpFilterUntilDate \u0026\u0026 this.tmpFilterUntilDate \u003c\u003d this.maxDate) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterUntilDate \u003d this.tmpFilterUntilDate;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (!this.tmpFilterUntilDate) { // If user clears the until date field"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterUntilDate \u003d this.maxDate;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "  computed: {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    checkAllFileTypes: {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      get() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.checkedFileTypes.length \u003d\u003d\u003d this.fileTypes.length;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      set(value) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        if (value) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "          this.checkedFileTypes \u003d this.fileTypes.slice();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "          this.checkedFileTypes \u003d [];"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    avgCommitSize() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalCommits \u003d 0;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalCount \u003d 0;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filtered.forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        repo.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "          user.commits.forEach((slice) \u003d\u003e {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slice.insertions \u003e 0) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "              totalCount +\u003d 1;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "              totalCommits +\u003d slice.insertions;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "      return totalCommits / totalCount;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    avgContributionSize() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalLines \u003d 0;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalCount \u003d 0;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "      this.repos.forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        repo.users.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "          if (user.totalCommits \u003e 0) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            totalCount +\u003d 1;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            totalLines +\u003d user.totalCommits;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "      return totalLines / totalCount;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    filteredRepos() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.filtered.filter((repo) \u003d\u003e repo.length \u003e 0);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    // view functions //"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    getFileTypeContributionBars(fileTypeContribution) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "      let currentBarWidth \u003d 0;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "      const fullBarWidth \u003d 100;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "      const contributionPerFullBar \u003d (this.avgContributionSize * 2);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "      const allFileTypesContributionBars \u003d {};"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(fileTypeContribution)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "          .filter((fileType) \u003d\u003e this.checkedFileTypes.includes(fileType))"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "          .forEach((fileType) \u003d\u003e {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            const contribution \u003d fileTypeContribution[fileType];"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            let barWidth \u003d (contribution / contributionPerFullBar) * fullBarWidth;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            const contributionBars \u003d [];"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            // if contribution bar for file type is able to fit on the current line"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            if (currentBarWidth + barWidth \u003c fullBarWidth) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "              contributionBars.push(barWidth);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "              currentBarWidth +\u003d barWidth;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "              // take up all the space left on the current line"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "              contributionBars.push(fullBarWidth - currentBarWidth);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "              barWidth -\u003d fullBarWidth - currentBarWidth;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "              // additional bar width will start on a new line"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "              const numOfFullBars \u003d Math.floor(barWidth / fullBarWidth);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "              for (let i \u003d 0; i \u003c numOfFullBars; i +\u003d 1) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "                contributionBars.push(fullBarWidth);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "              }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "              const remainingBarWidth \u003d barWidth % fullBarWidth;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "              if (remainingBarWidth !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "                contributionBars.push(remainingBarWidth);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "              }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "              currentBarWidth \u003d remainingBarWidth;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            allFileTypesContributionBars[fileType] \u003d contributionBars;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "      return allFileTypesContributionBars;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    getFileTypes(repo) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "      const fileTypes \u003d [];"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "      repo.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        Object.keys(user.fileTypeContribution).forEach((fileType) \u003d\u003e {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "          if (this.checkedFileTypes.includes(fileType) \u0026\u0026 !fileTypes.includes(fileType)) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTypes.push(fileType);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "      return fileTypes;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    getContributionBars(totalContribution) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "      const res \u003d [];"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "      const contributionLimit \u003d (this.avgContributionSize * 2);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "      const cnt \u003d parseInt(totalContribution / contributionLimit, 10);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "      for (let cntId \u003d 0; cntId \u003c cnt; cntId +\u003d 1) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        res.push(100);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "      const last \u003d (totalContribution % contributionLimit) / contributionLimit;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "      if (last !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        res.push(last * 100);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "      return res;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "    getAuthorProfileLink(userName) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "      return `https://github.com/${userName}`;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    getRepoLink(repo) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const { REPOS } \u003d window;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const { location, branch } \u003d REPOS[repo.repoId];"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (Object.prototype.hasOwnProperty.call(location, \u0027organization\u0027)) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        return `${window.BASE_URL}/${location.organization}/${location.repoName}/tree/${branch}`;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      return repo.location;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    getReportIssueGitHubLink(stackTrace) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "      return `${window.BASE_URL}/reposense/RepoSense/issues/new?title\u003d${this.getReportIssueTitle()"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "      }\u0026body\u003d${this.getReportIssueMessage(stackTrace)}`;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    getReportIssueEmailAddress() {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "      return \u0027seer@comp.nus.edu.sg\u0027;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    getReportIssueEmailLink(stackTrace) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "      return `mailto:${this.getReportIssueEmailAddress()}?subject\u003d${this.getReportIssueTitle()"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "      }\u0026body\u003d${this.getReportIssueMessage(stackTrace)}`;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "    getReportIssueTitle() {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "      return encodeURI(\u0027Unexpected error with RepoSense version \u0027) + window.app.repoSenseVersion;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "    getReportIssueMessage(message) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "      return encodeURI(message);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "    // model functions //"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "    resetFilterSearch() {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filterSearch \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "    updateFilterSearch(evt) {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filterSearch \u003d evt.target.value;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    setSummaryHash() {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "      const { addHash, encodeHash } \u003d window;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027search\u0027, this.filterSearch);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027sort\u0027, this.sortGroupSelection);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027sortWithin\u0027, this.sortWithinGroupSelection);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (this.hasModifiedSinceDate) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        addHash(\u0027since\u0027, this.filterSinceDate);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (this.hasModifiedUntilDate) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        addHash(\u0027until\u0027, this.filterUntilDate);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027timeframe\u0027, this.filterTimeFrame);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      addHash(\u0027mergegroup\u0027, this.isMergeGroup);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027groupSelect\u0027, this.filterGroupSelection);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027breakdown\u0027, this.filterBreakdown);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "      encodeHash();"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "    renderFilterHash() {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "      window.decodeHash();"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "      const convertBool \u003d (txt) \u003d\u003e (txt \u003d\u003d\u003d \u0027true\u0027);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "      const hash \u003d window.hashParams;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.search) { this.filterSearch \u003d hash.search; }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.sort) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sortGroupSelection \u003d hash.sort;"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.sortWithin) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sortWithinGroupSelection \u003d hash.sortWithin;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.timeframe) { this.filterTimeFrame \u003d hash.timeframe; }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (hash.mergegroup) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.isMergeGroup \u003d convertBool(hash.mergegroup);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.since \u0026\u0026 dateFormatRegex.test(hash.since)) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tmpFilterSinceDate \u003d hash.since;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.until \u0026\u0026 dateFormatRegex.test(hash.until)) {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tmpFilterUntilDate \u003d hash.until;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.groupSelect) {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterGroupSelection \u003d hash.groupSelect;"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.breakdown) {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterBreakdown \u003d convertBool(hash.breakdown);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "      window.decodeHash();"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "    getDates() {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.minDate \u0026\u0026 this.maxDate) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "      const minDate \u003d window.app.sinceDate;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "      const maxDate \u003d window.app.untilDate;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!this.filterSinceDate) {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!this.tmpFilterSinceDate || this.tmpFilterSinceDate \u003c minDate) {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "          this.tmpFilterSinceDate \u003d minDate;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterSinceDate \u003d minDate;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "        this.minDate \u003d minDate;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!this.filterUntilDate) {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!this.tmpFilterUntilDate || this.tmpFilterUntilDate \u003e maxDate) {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "          this.tmpFilterUntilDate \u003d maxDate;"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterUntilDate \u003d maxDate;"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "        this.maxDate \u003d maxDate;"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "      this.$emit(\u0027get-dates\u0027, [this.minDate, this.maxDate]);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "    getFiltered() {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "      this.setSummaryHash();"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.getDates();"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "      deactivateAllOverlays();"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "      // array of array, sorted by repo"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "      const full \u003d [];"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      // create deep clone of this.repos to not modify the original content of this.repos"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      // when merging groups"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const groups \u003d this.isMergeGroup ? JSON.parse(JSON.stringify(this.repos)) : this.repos;"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      groups.forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        const res \u003d [];"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        // filtering"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        repo.users.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "          const toDisplay \u003d this.filterSearch.toLowerCase()"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "              .split(\u0027 \u0027).filter(Boolean)"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "              .some((param) \u003d\u003e user.searchPath.includes(param));"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "          if (!this.filterSearch || toDisplay) {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "            this.getUserCommits(user);"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "            if (this.filterTimeFrame \u003d\u003d\u003d \u0027week\u0027) {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "              this.splitCommitsWeek(user);"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "            res.push(user);"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "        if (res.length) {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "          full.push(res);"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filtered \u003d full;"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sortFiltered();"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (this.isMergeGroup) {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.mergeGroup();"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    mergeGroup() {"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.filtered.forEach((group, groupIndex) \u003d\u003e {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        const dateToIndexMap \u003d {};"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        const mergedCommits \u003d [];"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "        const mergedFileTypeContribution \u003d {};"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        let mergedVariance \u003d 0;"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        let totalMergedCommits \u003d 0;"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        group.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          this.mergeCommits(user, mergedCommits, dateToIndexMap);"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "          this.mergeFileTypeContribution(user, mergedFileTypeContribution);"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          totalMergedCommits +\u003d user.totalCommits;"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          mergedVariance +\u003d user.variance;"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        });"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        mergedCommits.sort(window.comparator((ele) \u003d\u003e ele.date));"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        group[0].commits \u003d mergedCommits;"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "        group[0].fileTypeContribution \u003d mergedFileTypeContribution;"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        group[0].totalCommits \u003d totalMergedCommits;"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        group[0].variance \u003d mergedVariance;"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        // clear all users and add merged group in filtered group"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.filtered[groupIndex] \u003d [];"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.filtered[groupIndex].push(group[0]);"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      });"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    mergeCommits(user, merged, dateToIndexMap) {"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      // merge commits with the same date"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      user.commits.forEach((commit) \u003d\u003e {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        const {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          commitResults, date, insertions, deletions,"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        } \u003d commit;"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        // bind repoId to each commit"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        commitResults.forEach((commitResult) \u003d\u003e {"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          commitResult.repoId \u003d user.repoId;"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        });"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        if (Object.prototype.hasOwnProperty.call(dateToIndexMap, date)) {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          const commitWithSameDate \u003d merged[dateToIndexMap[date]];"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          commitResults.forEach((commitResult) \u003d\u003e {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            commitWithSameDate.commitResults.push(commitResult);"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          });"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          commitWithSameDate.insertions +\u003d insertions;"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          commitWithSameDate.deletions +\u003d deletions;"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          dateToIndexMap[date] \u003d Object.keys(dateToIndexMap).length;"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          merged.push(commit);"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      });"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "    mergeFileTypeContribution(user, merged) {"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.entries(user.fileTypeContribution).forEach((fileType) \u003d\u003e {"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        const key \u003d fileType[0];"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        const value \u003d fileType[1];"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        if (!Object.prototype.hasOwnProperty.call(merged, key)) {"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          merged[key] \u003d 0;"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        merged[key] +\u003d value;"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      });"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "    processFileTypes() {"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "      const selectedColors \u003d [\u0027#ffe119\u0027, \u0027#4363d8\u0027, \u0027#3cb44b\u0027, \u0027#f58231\u0027, \u0027#911eb4\u0027, \u0027#46f0f0\u0027, \u0027#f032e6\u0027,"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027#bcf60c\u0027, \u0027#fabebe\u0027, \u0027#008080\u0027, \u0027#e6beff\u0027, \u0027#9a6324\u0027, \u0027#fffac8\u0027, \u0027#800000\u0027, \u0027#aaffc3\u0027, \u0027#808000\u0027, \u0027#ffd8b1\u0027,"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027#000075\u0027, \u0027#808080\u0027];"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "      const fileTypeColors \u003d {};"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "      let i \u003d 0;"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "      this.repos.forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "        repo.users.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "          Object.keys(user.fileTypeContribution).forEach((fileType) \u003d\u003e {"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Object.prototype.hasOwnProperty.call(fileTypeColors, fileType)) {"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "              fileTypeColors[fileType] \u003d selectedColors[i];"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "              i \u003d (i + 1) % selectedColors.length;"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!this.fileTypes.includes(fileType)) {"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "              this.fileTypes.push(fileType);"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "        this.fileTypeColors \u003d fileTypeColors;"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "      this.checkedFileTypes \u003d this.fileTypes.slice();"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "    getFontColor(color) {"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "      // to convert color from hex code to rgb format"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "      const result \u003d /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "      const red \u003d parseInt(result[1], 16);"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "      const green \u003d parseInt(result[2], 16);"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "      const blue \u003d parseInt(result[3], 16);"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "      const luminosity \u003d 0.2126 * red + 0.7152 * green + 0.0722 * blue; // per ITU-R BT.709"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "      return luminosity \u003c 120 ? \u0027#ffffff\u0027 : \u0027#000000\u0027;"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "    splitCommitsWeek(user) {"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "      const { commits } \u003d user;"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "      const res \u003d [];"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const nextMondayDate \u003d dateRounding(this.filterSinceDate, 0); // round up for the next monday"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "      const untilDate \u003d this.filterUntilDate;"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const nextMondayMs \u003d (new Date(nextMondayDate)).getTime();"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const sinceMs \u003d new Date(this.filterSinceDate).getTime();"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "      const untilMs \u003d (new Date(untilDate)).getTime();"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (nextMondayDate \u003c\u003d untilDate) {"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.pushCommitsWeek(sinceMs, nextMondayMs - 1, res, commits);"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.pushCommitsWeek(nextMondayMs, untilMs, res, commits);"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.pushCommitsWeek(sinceMs, untilMs, res, commits);"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      user.commits \u003d res;"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    pushCommitsWeek(sinceMs, untilMs, res, commits) {"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "      const diff \u003d Math.round(Math.abs((untilMs - sinceMs) / DAY_IN_MS));"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "      for (let weekId \u003d 0; weekId \u003c diff / 7; weekId +\u003d 1) {"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        const startOfWeekMs \u003d sinceMs + (weekId * WEEK_IN_MS);"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        const endOfWeekMs \u003d startOfWeekMs + WEEK_IN_MS - DAY_IN_MS;"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        const endOfWeekMsWithinUntilMs \u003d endOfWeekMs \u003c\u003d untilMs ? endOfWeekMs : untilMs;"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "        const week \u003d {"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "          insertions: 0,"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "          deletions: 0,"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "          date: getDateStr(startOfWeekMs),"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          endDate: getDateStr(endOfWeekMsWithinUntilMs),"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          commitResults: [],"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.addLineContributionWeek(endOfWeekMsWithinUntilMs, week, commits);"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        if (week.commitResults.length \u003e 0) {"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          res.push(week);"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    addLineContributionWeek(endOfWeekMs, week, commits) {"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "      // commits are not contiguous, meaning there are gaps of days without"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "      // commits, so we are going to check each commit\u0027s date and make sure"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "      // it is within the duration of a week"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "      while (commits.length \u003e 0"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          \u0026\u0026 (new Date(commits[0].date)).getTime() \u003c\u003d endOfWeekMs) {"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        const commit \u003d commits.shift();"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "        week.insertions +\u003d commit.insertions;"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "        week.deletions +\u003d commit.deletions;"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        commit.commitResults.forEach((commitResult) \u003d\u003e week.commitResults.push(commitResult));"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "    getUserCommits(user) {"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "      user.commits \u003d [];"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "      const userFirst \u003d user.dailyCommits[0];"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "      const userLast \u003d user.dailyCommits[user.dailyCommits.length - 1];"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!userFirst) {"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "      let sinceDate \u003d this.filterSinceDate;"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!sinceDate || sinceDate \u003d\u003d\u003d \u0027undefined\u0027) {"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "        sinceDate \u003d userFirst.date;"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "      let untilDate \u003d this.filterUntilDate;"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!untilDate) {"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "        untilDate \u003d userLast.date;"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "      user.dailyCommits.forEach((commit) \u003d\u003e {"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "        const { date } \u003d commit;"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "        if (date \u003e\u003d sinceDate \u0026\u0026 date \u003c\u003d untilDate) {"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "          user.commits.push(commit);"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "      return null;"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "    getOptionWithOrder() {"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "      [this.sortingOption, this.isSortingDsc] \u003d this.sortGroupSelection.split(\u0027 \u0027);"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "      [this.sortingWithinOption, this.isSortingWithinDsc] \u003d this.sortWithinGroupSelection.split(\u0027 \u0027);"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "    sortFiltered() {"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getOptionWithOrder();"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "      let full \u003d [];"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027) {"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "        // push all repos into the same group"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "        full[0] \u003d this.groupByNone(this.filtered);"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027) {"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "        full \u003d this.groupByAuthors(this.filtered);"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "        full \u003d this.groupByRepos(this.filtered);"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filtered \u003d full;"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "    // updating filters programically //"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "    resetDateRange() {"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "      this.hasModifiedSinceDate \u003d false;"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "      this.hasModifiedUntilDate \u003d false;"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.tmpFilterSinceDate \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.tmpFilterUntilDate \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "      window.removeHash(\u0027since\u0027);"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "      window.removeHash(\u0027until\u0027);"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    updateDateRange(since, until) {"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.hasModifiedSinceDate \u003d true;"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.hasModifiedUntilDate \u003d true;"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.tmpFilterSinceDate \u003d since;"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.tmpFilterUntilDate \u003d until;"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "      deactivateAllOverlays();"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    updateTmpFilterSinceDate(event) {"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const since \u003d event.target.value;"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.hasModifiedSinceDate \u003d true;"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (!this.isSafariBrowser) {"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.tmpFilterSinceDate \u003d since;"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        event.target.value \u003d this.filterSinceDate;"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (dateFormatRegex.test(since) \u0026\u0026 since \u003e\u003d this.minDate) {"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.tmpFilterSinceDate \u003d since;"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        event.currentTarget.style.removeProperty(\u0027border-bottom-color\u0027);"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        // invalid since date detected"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        event.currentTarget.style.borderBottomColor \u003d \u0027red\u0027;"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    updateTmpFilterUntilDate(event) {"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const until \u003d event.target.value;"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.hasModifiedUntilDate \u003d true;"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (!this.isSafariBrowser) {"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.tmpFilterUntilDate \u003d until;"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        event.target.value \u003d this.filterUntilDate;"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (dateFormatRegex.test(until) \u0026\u0026 until \u003c\u003d this.maxDate) {"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.tmpFilterUntilDate \u003d until;"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        event.currentTarget.style.removeProperty(\u0027border-bottom-color\u0027);"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        // invalid until date detected"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        event.currentTarget.style.borderBottomColor \u003d \u0027red\u0027;"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "    // triggering opening of tabs //"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    openTabAuthorship(user, repo, index) {"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "      const { minDate, maxDate } \u003d this;"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "      this.$emit(\u0027view-authorship\u0027, {"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "        minDate,"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "        maxDate,"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "        author: user.name,"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "        repo: user.repoName,"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "        name: user.displayName,"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        location: this.getRepoLink(repo[index]),"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "    openTabZoomSubrange(user, repo, index) {"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "      // skip if accidentally clicked on ramp chart"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "      if (drags.length \u003d\u003d\u003d 2 \u0026\u0026 drags[1] - drags[0]) {"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "        const tdiff \u003d new Date(this.filterUntilDate) - new Date(this.filterSinceDate);"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "        const idxs \u003d drags.map((x) \u003d\u003e x * tdiff / 100);"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "        const tsince \u003d getDateStr(new Date(this.filterSinceDate).getTime() + idxs[0]);"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "        const tuntil \u003d getDateStr(new Date(this.filterSinceDate).getTime() + idxs[1]);"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "        this.openTabZoom(user, tsince, tuntil, repo, index);"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "    openTabZoom(user, since, until, repo, index) {"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "      const { avgCommitSize } \u003d this;"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "      const clonedUser \u003d Object.assign({}, user); // so that changes in summary won\u0027t affect zoom"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "      this.$emit(\u0027view-zoom\u0027, {"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        filterGroupSelection: this.filterGroupSelection,"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "        filterTimeFrame: this.filterTimeFrame,"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "        avgCommitSize,"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "        user: clonedUser,"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "        location: this.getRepoLink(repo[index]),"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        sinceDate: since,"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        untilDate: until,"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        isMergeGroup: this.isMergeGroup,"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "    getFileTypeContribution(ele) {"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "      let validCommits \u003d 0;"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(ele.fileTypeContribution).forEach((fileType) \u003d\u003e {"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.checkedFileTypes.includes(fileType)) {"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "          validCommits +\u003d ele.fileTypeContribution[fileType];"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "      return validCommits;"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "    groupByRepos(repos) {"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "      const sortedRepos \u003d [];"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const sortingWithinOption \u003d this.sortingWithinOption \u003d\u003d\u003d \u0027title\u0027 ? \u0027displayName\u0027 : this.sortingWithinOption;"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const sortingOption \u003d this.sortingOption \u003d\u003d\u003d \u0027groupTitle\u0027 ? \u0027searchPath\u0027 : this.sortingOption;"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "      repos.forEach((users) \u003d\u003e {"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.filterBreakdown \u0026\u0026 this.sortingWithinOption \u003d\u003d\u003d \u0027totalCommits\u0027) {"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "          users.sort(window.comparator((ele) \u003d\u003e this.getFileTypeContribution(ele)));"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          users.sort(window.comparator((ele) \u003d\u003e ele[sortingWithinOption]));"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.isSortingWithinDsc) {"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "          users.reverse();"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "        sortedRepos.push(users);"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "      sortedRepos.sort(window.comparator((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        if (sortingOption \u003d\u003d\u003d \u0027totalCommits\u0027 || sortingOption \u003d\u003d\u003d \u0027variance\u0027) {"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "          return repo.reduce(this.getGroupCommitsVariance, 0);"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return repo[0][sortingOption];"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "      }));"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.isSortingDsc) {"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "        sortedRepos.reverse();"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "      return sortedRepos;"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "    groupByNone(repos) {"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "      const sortedRepos \u003d [];"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const isSortingGroupTitle \u003d this.sortingOption \u003d\u003d\u003d \u0027groupTitle\u0027;"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "      repos.forEach((users) \u003d\u003e {"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "        users.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "          sortedRepos.push(user);"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      sortedRepos.sort(window.comparator((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        if (isSortingGroupTitle) {"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          return repo.searchPath + repo.name;"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.filterBreakdown \u0026\u0026 this.sortingOption \u003d\u003d\u003d \u0027totalCommits\u0027) {"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.getFileTypeContribution(repo);"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return repo[this.sortingOption];"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }));"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.isSortingDsc) {"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "        sortedRepos.reverse();"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "      return sortedRepos;"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "    groupByAuthors(repos) {"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "      const authorMap \u003d {};"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "      const filtered \u003d [];"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const sortingWithinOption \u003d this.sortingWithinOption \u003d\u003d\u003d \u0027title\u0027 ? \u0027searchPath\u0027 : this.sortingWithinOption;"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const sortingOption \u003d this.sortingOption \u003d\u003d\u003d \u0027groupTitle\u0027 ? \u0027displayName\u0027 : this.sortingOption;"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "      repos.forEach((users) \u003d\u003e {"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "        users.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "          if (Object.keys(authorMap).includes(user.name)) {"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "            authorMap[user.name].push(user);"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "            authorMap[user.name] \u003d [user];"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(authorMap).forEach((author) \u003d\u003e {"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.filterBreakdown \u0026\u0026 this.sortingWithinOption \u003d\u003d\u003d \u0027totalCommits\u0027) {"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "          authorMap[author].sort(window.comparator((repo) \u003d\u003e this.getFileTypeContribution(repo)));"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          authorMap[author].sort(window.comparator((repo) \u003d\u003e repo[sortingWithinOption]));"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.isSortingWithinDsc) {"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "          authorMap[author].reverse();"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "        filtered.push(authorMap[author]);"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "      filtered.sort(window.comparator((author) \u003d\u003e {"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        if (sortingOption \u003d\u003d\u003d \u0027totalCommits\u0027 || sortingOption \u003d\u003d\u003d \u0027variance\u0027) {"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "          return author.reduce(this.getGroupCommitsVariance, 0);"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return author[0][sortingOption];"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "      }));"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.isSortingDsc) {"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "        filtered.reverse();"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "      return filtered;"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "    getPercentile(index) {"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027) {"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "        return (Math.round((index + 1) * 1000 / this.filtered[0].length) / 10).toFixed(1);"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "      return (Math.round((index + 1) * 1000 / this.filtered.length) / 10).toFixed(1);"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "    getGroupCommitsVariance(total, group) {"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.filterBreakdown \u0026\u0026 this.sortingOption \u003d\u003d\u003d \u0027totalCommits\u0027) {"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "        return total + this.getFileTypeContribution(group);"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "      return total + group[this.sortingOption];"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    getGroupTotalContribution(group) {"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      return group.reduce((accContribution, user) \u003d\u003e accContribution + user.totalCommits, 0);"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "  created() {"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "    this.renderFilterHash();"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "    this.getFiltered();"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "    this.processFileTypes();"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "  components: {"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "    v_ramp: window.vRamp,"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 211,
      "-": 675
    }
  },
  {
    "path": "frontend/src/static/js/v_zoom.js",
    "fileType": "js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "const commitSortDict \u003d {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  lineOfCode: (commit) \u003d\u003e commit.insertions,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  time: (commit) \u003d\u003e commit.date,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "window.vZoom \u003d {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  props: {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    info: Object,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  template: window.$(\u0027v_zoom\u0027).innerHTML,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  data() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "      showAllCommitMessageBody: true,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      expandedCommitMessagesCount: this.totalCommitMessageBodyCount,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      commitsSortType: \u0027time\u0027,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      toReverseSortedCommits: true,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    };"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  },"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  computed: {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    sortingFunction() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      return (a, b) \u003d\u003e (this.toReverseSortedCommits ? -1 : 1)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      * window.comparator(commitSortDict[this.commitsSortType])(a, b);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    filteredUser() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      const {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        user, sinceDate, untilDate, filterTimeFrame,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      } \u003d this.info;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      const filteredUser \u003d Object.assign({}, user);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      const date \u003d filterTimeFrame \u003d\u003d\u003d \u0027week\u0027 ? \u0027endDate\u0027 : \u0027date\u0027;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      filteredUser.commits \u003d user.commits.filter("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "          (commit) \u003d\u003e commit[date] \u003e\u003d sinceDate \u0026\u0026 commit[date] \u003c\u003d untilDate,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      ).sort(this.sortingFunction);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      return filteredUser;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    totalCommitMessageBodyCount() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      let nonEmptyCommitMessageCount \u003d 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filteredUser.commits.forEach((commit) \u003d\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        commit.commitResults.forEach((commitResult) \u003d\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          if (commitResult.messageBody !\u003d\u003d \u0027\u0027) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            nonEmptyCommitMessageCount +\u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      return nonEmptyCommitMessageCount;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  watch: {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    info() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      this.updateExpandedCommitMessagesCount();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    openSummary() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      this.$emit(\u0027view-summary\u0027, this.info.sinceDate, this.info.untilDate);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    getSliceLink(slice) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.info.isMergeGroup) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        return `${window.getBaseLink(slice.repoId)}/commit/${slice.hash}`;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      return `${window.getBaseLink(this.info.user.repoId)}/commit/${slice.hash}`;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    scrollToCommit(tag, commit) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      const el \u003d this.$el.getElementsByClassName(`${commit} ${tag}`)[0];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (el) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        el.focus();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    toggleAllCommitMessagesBody(isActive) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      this.showAllCommitMessageBody \u003d isActive;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const toRename \u003d this.showAllCommitMessageBody ? \u0027commit-message message-body active\u0027 : \u0027commit-message message-body\u0027;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const commitMessageClasses \u003d document.getElementsByClassName(\u0027commit-message message-body\u0027);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "      Array.from(commitMessageClasses).forEach((commitMessageClass) \u003d\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        commitMessageClass.className \u003d toRename;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      this.expandedCommitMessagesCount \u003d isActive ? this.totalCommitMessageBodyCount : 0;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    updateExpandedCommitMessagesCount() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.expandedCommitMessagesCount \u003d document.getElementsByClassName(\u0027commit-message message-body active\u0027)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "          .length;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  mounted() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    this.updateExpandedCommitMessagesCount();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  components: {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    v_ramp: window.vRamp,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 13,
      "-": 86
    }
  },
  {
    "path": "frontend/src/summary.pug",
    "fileType": "pug",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#summary"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  form.summary-picker.mui-form--inline(onsubmit\u003d\"return false;\")"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    .summary-picker__section"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      .mui-textfield.search_box"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        input.summary-picker__search(type\u003d\"text\", v-on:change\u003d\"updateFilterSearch\", v-model\u003d\"filterSearch\")"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        label search"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        button.mui-btn.mui-btn--raised(type\u003d\"button\", v-on:click.prevent\u003d\"resetFilterSearch\") x"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      .mui-select.grouping"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        select(v-model\u003d\"filterGroupSelection\")"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"groupByNone\") None"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"groupByRepos\") Repo/Branch"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"groupByAuthors\") Author"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        label group by"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      .mui-select.sort-group"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        select(v-model\u003d\"sortGroupSelection\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"groupTitle\") \u0026uarr; group title"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"groupTitle dsc\") \u0026darr; group title"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"totalCommits\") \u0026uarr; contribution"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"totalCommits dsc\") \u0026darr; contribution"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"variance\") \u0026uarr; variance"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"variance dsc\") \u0026darr; variance"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        label sort groups by"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      .mui-select.sort-within-group"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        select("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "          v-model\u003d\"sortWithinGroupSelection\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "          v-bind:disabled\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027 || isMergeGroup\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        )"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"title\") \u0026uarr; title"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"title dsc\") \u0026darr; title"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"totalCommits\") \u0026uarr; contribution"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"totalCommits dsc\") \u0026darr; contribution"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"variance\") \u0026uarr; variance"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"variance dsc\") \u0026darr; variance"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        label sort within groups by"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      .mui-select"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        select(v-model\u003d\"filterTimeFrame\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"commit\") Commit"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"day\") Day"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "          option(value\u003d\"week\") Week"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        label granularity"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      .mui-textfield.summary-picker__date"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        input(v-if\u003d\"isSafariBrowser\", type\u003d\"text\", placeholder\u003d\"yyyy-mm-dd\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "          v-bind:value\u003d\"filterSinceDate\", v-on:keyup.enter\u003d\"updateTmpFilterSinceDate\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          onkeydown\u003d\"formatInputDateOnKeyDown(event)\", oninput\u003d\"appendDashInputDate(event)\", maxlength\u003d10)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        input(v-else, type\u003d\"date\", v-bind:value\u003d\"filterSinceDate\", v-on:input\u003d\"updateTmpFilterSinceDate\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          onkeydown\u003d\"return false\", v-bind:min\u003d\"minDate\", v-bind:max\u003d\"filterUntilDate\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        label since"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      .mui-textfield.summary-picker__date"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        input(v-if\u003d\"isSafariBrowser\", type\u003d\"text\", placeholder\u003d\"yyyy-mm-dd\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "          v-bind:value\u003d\"filterUntilDate\", v-on:keyup.enter\u003d\"updateTmpFilterUntilDate\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "          onkeydown\u003d\"formatInputDateOnKeyDown(event)\", oninput\u003d\"appendDashInputDate(event)\", maxlength\u003d10)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        input(v-else, type\u003d\"date\", v-bind:value\u003d\"filterUntilDate\", v-on:input\u003d\"updateTmpFilterUntilDate\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "          onkeydown\u003d\"return false\", v-bind:min\u003d\"filterSinceDate\", v-bind:max\u003d\"maxDate\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        label until"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      .mui-textfield.summary-picker__date"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        a(v-on:click\u003d\"resetDateRange\") Reset date range"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      .summary-picker__checkboxes.summary-picker__section"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        label"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "          input.mui-checkbox.summary-picker__checkbox(type\u003d\"checkbox\", v-model\u003d\"filterBreakdown\","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            v-on:change\u003d\"setSummaryHash()\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "          span breakdown by file type"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        label.merge-group("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          v-bind:style\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027 ? { opacity:0.5 } : { opacity:1.0 }\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        )"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "          input.summary-picker__checkbox.mui-checkbox("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            type\u003d\"checkbox\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            v-model\u003d\"isMergeGroup\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:disabled\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "          )"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "          span merge group"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  .error-message-box(v-if\u003d\"Object.entries(errorMessages).length\")"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    .error-message-box__close-button(onclick\u003d\"dismissTab(this)\") \u0026times;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    .error-message-box__message The following issues occurred when analyzing the following repositories:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    .error-message-box__failed-repo(v-for\u003d\"errorBlock in errorMessages\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      i.fas.fa-exclamation.mini-font"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      span.error-message-box__failed-repo--name {{ errorBlock.repoName }}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      .error-message-box__failed-repo--reason("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        v-if\u003d\"errorBlock.errorMessage.startsWith(\u0027Unexpected error stack trace\u0027)\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      )"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        span Oops, an unexpected error occurred. If this is due to a problem in RepoSense, please report in\u0026nbsp;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        a("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "          v-bind:href\u003d\"getReportIssueGitHubLink(errorBlock.errorMessage)\", target\u003d\"_blank\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        )"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "          strong our issue tracker\u0026nbsp;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        span or email us at\u0026nbsp;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        a("
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "          v-bind:href\u003d\"getReportIssueEmailLink(errorBlock.errorMessage)\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        )"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "          span {{ getReportIssueEmailAddress() }}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      .error-message-box__failed-repo--reason(v-else) {{ errorBlock.errorMessage }}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  .fileTypes(v-if\u003d\"filterBreakdown\")"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    .checkboxes.mui-form--inline(v-if\u003d\"Object.keys(fileTypeColors).length \u003e 0\")"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      label("
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        v-bind:style\u003d\"{ \u0027background-color\u0027 : \u0027#000000\u0027, \u0027color\u0027 : \u0027#ffffff\u0027 }\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      )"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        input.mui-checkbox--fileType(type\u003d\"checkbox\", v-model\u003d\"checkAllFileTypes\")"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        span All:\u0026nbsp;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      template(v-for\u003d\"fileType in Object.keys(fileTypeColors)\" )"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        label("
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "          v-bind:key\u003d\"fileType\","
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "          v-bind:style\u003d\"{ \u0027background-color\u0027 : fileTypeColors[fileType], \\"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0027color\u0027 : getFontColor(fileTypeColors[fileType])}\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        )"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "          input.mui-checkbox--fileType("
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            type\u003d\"checkbox\","
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:id\u003d\"fileType\","
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:value\u003d\"fileType\","
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            v-model\u003d\"checkedFileTypes\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "          )"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "          span {{ fileType }}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  #summary-charts"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    .summary-charts(v-for\u003d\"(repo, i) in filteredRepos\")"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      .summary-charts__title(v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByNone\u0027\")"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        .summary-charts__title--index {{ i+1 }}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        .summary-charts__title--groupname"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          template(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027\") {{ repo[0].repoName }}"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          template("
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            v-else-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\","
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            v-bind:class\u003d\" { warn: repo[0].name \u003d\u003d\u003d \u0027-\u0027 }\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          ) {{ repo[0].displayName }} ({{ repo[0].name }})"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        .summary-charts__title--contribution.mini-font("
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "          title\u003d\"Total contribution of group\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        ) [{{ getGroupTotalContribution(repo) }} lines]"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        template(v-if\u003d\"isMergeGroup\")"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "          a("
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027\","
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:href\u003d\"getRepoLink(repo[0])\", target\u003d\"_blank\","
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            title\u003d\"click to view group\u0027s repo\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "          )"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "          a("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            v-else-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\","
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:href\u003d\"getAuthorProfileLink(repo[0].name)\", target\u003d\"_blank\","
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            title\u003d\"click to view author\u0027s profile\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "          )"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            i.icon-button.fab.fa-github"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        .summary-charts__title--percentile.mini-font {{ getPercentile(i) }} %"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      .summary-charts__fileType--breakdown(v-if\u003d\"filterBreakdown\")"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        template(v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByNone\u0027\")"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "          .summary-charts__fileType--breakdown__legend("
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            v-for\u003d\"fileType in getFileTypes(repo)\","
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:key\u003d\"fileType\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "          )"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            i.fas.fa-circle("
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "              v-bind:style\u003d\"{ \u0027color\u0027 : fileTypeColors[fileType] }\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            )"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            span \u0026nbsp; {{ fileType }} \u0026nbsp;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "      .summary-chart(v-for\u003d\"(user, i) in repo\")"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        .summary-chart__title(v-if\u003d\"!isMergeGroup\")"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "          .summary-chart__title--index {{ i+1 }}"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "          .summary-chart__title--repo(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027\") {{ user.repoName }}"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "          .summary-chart__title--author-repo(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\") {{ user.repoName }}"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "          .summary-chart__title--name("
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByAuthors\u0027\","
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:class\u003d\"{ warn: user.name \u003d\u003d\u003d \u0027-\u0027 }\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "          ) {{ user.displayName }} ({{ user.name }})"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "          .summary-chart__title--contribution.mini-font [{{ user.totalCommits }} lines]"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "          a("
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            title\u003d\"click to view author\u0027s code\","
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            onclick\u003d\"deactivateAllOverlays()\","
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            v-on:click\u003d\"openTabAuthorship(user, repo, i)\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "          )"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            i.icon-button.fas.fa-code"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "          a("
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:href\u003d\"getRepoLink(repo[i])\", target\u003d\"_blank\","
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            title\u003d\"click to view author\u0027s repo\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "          )"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            i.icon-button.fab.fa-github"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "          a("
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            title\u003d\"click to view breakdown of commits\","
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            onclick\u003d\"deactivateAllOverlays()\","
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            v-on:click\u003d\"openTabZoom(user, filterSinceDate, filterUntilDate, repo, i)\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "          )"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            i.icon-button.fas.fa-list-ul"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "          .summary-chart__title--percentile.mini-font("
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "          ) {{ getPercentile(i) }} %"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        .summary-chart__ramp("
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "          onclick\u003d\"viewClick(event)\","
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "          v-on:click\u003d\"openTabZoomSubrange(user, repo, i)\""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        )"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "          v_ramp("
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:groupby\u003d\"filterGroupSelection\","
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:user\u003d\"user\","
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:tframe\u003d\"filterTimeFrame\","
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:sdate\u003d\"filterSinceDate\","
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:udate\u003d\"filterUntilDate\","
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:avgsize\u003d\"avgCommitSize\","
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:mergegroup\u003d\"isMergeGroup\")"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "          .overlay"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        .summary-chart__contribution"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "          template(v-if\u003d\"filterBreakdown\")"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            .summary-chart__contrib("
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "              v-for\u003d\"(widths, fileType) in getFileTypeContributionBars(user.fileTypeContribution)\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            )"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "              .summary-chart__contrib--bar("
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                v-for\u003d\"width in widths\","
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                v-bind:style\u003d\"{ width: width + \u0027%\u0027,\\"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u0027background-color\u0027: fileTypeColors[fileType] }\","
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                v-bind:title\u003d\"fileType + \u0027: \u0027 + user.fileTypeContribution[fileType] + \u0027 lines, \u0027\\"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                  + \u0027total: \u0027 + user.totalCommits + \u0027 lines \u0027 + \u0027(contribution from \u0027 + minDate + \u0027 to \u0027\\"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                  + maxDate + \u0027)\u0027\""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "              )"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "          template(v-else)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            .summary-chart__contrib("
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "              v-bind:title\u003d\"\u0027Total contribution from \u0027 + minDate + \u0027 to \u0027 + maxDate + \u0027: \u0027\\"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                + user.totalCommits + \u0027 lines\u0027\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            )"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "              .summary-chart__contrib--bar("
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                v-for\u003d\"width in getContributionBars(user.totalCommits)\","
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                v-bind:style\u003d\"{ width: width+\u0027%\u0027 }\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "              )"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 9,
      "-": 204
    }
  },
  {
    "path": "frontend/src/tabs/segment.pug",
    "fileType": "pug",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ".segment(v-bind:class\u003d\"{ untouched: !segment.authored, active: segment.lines.length \u003c 5 }\")"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  .closer(v-if\u003d\"!segment.authored \u0026\u0026 segment.lines.length \u003e 4\", v-on:click\u003d\"loadCode()\")"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    i.fas.fa-plus-circle.icon.open(v-bind:title\u003d\"\u0027Click to open code\u0027\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    i.fas.fa-chevron-circle-down.icon.hide(v-bind:title\u003d\"\u0027Click to hide code\u0027\")"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  div(v-if\u003d\"loaded\", v-hljs\u003d\"path\")"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    .code(v-for\u003d\"(line, index) in segment.lines\")"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      .line-number {{ segment.lineNumbers[index] + \"\\n\" }}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      .line-content {{ line + \"\\n\" }}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  .closer.bottom(v-if\u003d\"!segment.authored \u0026\u0026 segment.lines.length \u003e 4\", v-on:click\u003d\"loadCode()\")"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    i.fas.fa-chevron-circle-up.icon.hide(v-bind:title\u003d\"\u0027Click to hide code\u0027\")"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 10
    }
  },
  {
    "path": "frontend/src/tabs/zoom.pug",
    "fileType": "pug",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#zoom"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  span.large-font Commits Panel"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  .toolbar(v-if\u003d\"filteredUser.commits.length\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    a(v-if\u003d\"expandedCommitMessagesCount \u003d\u003d\u003d 0\", v-on:click\u003d\"toggleAllCommitMessagesBody(true)\") show all commit messages"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    a(v-else, v-on:click\u003d\"toggleAllCommitMessagesBody(false)\") hide all commit messages"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  .zoom__title"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    .zoom_title--group.large-font"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      span("
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        v-if\u003d\"info.filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      ) {{ filteredUser.displayName }} ({{ filteredUser.name }})"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      a("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        v-else,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        v-bind:href\u003d\"info.location\", target\u003d\"_blank\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        v-bind:title\u003d\"\u0027Click to open the repo\u0027\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      )"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        span {{ filteredUser.repoName }}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    .zoom__title--chart.medium-font(v-if\u003d\"!info.isMergeGroup\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      span \u0026#8627; \u0026nbsp;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      span(v-if\u003d\"info.filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\") {{ filteredUser.repoName }}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      span(v-else) {{ filteredUser.displayName }} ({{ filteredUser.name }})"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    .zoom__title--period.medium-font"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      span \u0026#8627; \u0026nbsp;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      span {{ info.sinceDate }} to {{ info.untilDate }} \u0026nbsp;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      a(v-on:click\u003d\"openSummary\") [Show ramp chart for this period]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    .zoom__title--granularity.mini-font granularity: one ramp per {{ info.filterTimeFrame }}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    .zoom__title--tags"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      template(v-for\u003d\"commit in filteredUser.commits\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        template(v-for\u003d\"commitResult in commit.commitResults\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          template(v-if\u003d\"commitResult.tags\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            .tag.mini-font("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "              v-for\u003d\"tag in commitResult.tags\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "              v-on:click\u003d\"scrollToCommit(tag, `tag ${commitResult.hash}`)\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            )"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "              i.fas.fa-tags"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "              span \u0026nbsp;{{ tag }}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  v_ramp("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    v-bind:groupby\u003d\"info.filterGroupSelection\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    v-bind:user\u003d\"filteredUser\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    v-bind:tframe\u003d\"info.filterTimeFrame\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    v-bind:sdate\u003d\"info.sinceDate\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    v-bind:udate\u003d\"info.untilDate\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    v-bind:avgsize\u003d\"info.avgCommitSize\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    v-bind:mergegroup\u003d\"info.isMergeGroup\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  .sorting.mui-form--inline"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    .mui-select"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      select.medium-font(v-model\u003d\"commitsSortType\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        option(value\u003d\"time\") Time"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        option(value\u003d\"lineOfCode\") LoC"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      label.medium-font sort by"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    .mui-select"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      select.medium-font(v-model\u003d\"toReverseSortedCommits\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        option(v-bind:value\u003d\u0027true\u0027) Descending"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        option(v-bind:value\u003d\u0027false\u0027) Ascending"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      label.medium-font order"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  .zoom__day(v-for\u003d\"day in filteredUser.commits\", v-bind:key\u003d\"day.date\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    h3(v-if\u003d\"info.filterTimeFrame \u003d\u003d\u003d \u0027week\u0027\") Week of {{ day.date }}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    h3(v-else) {{ day.date }}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    template"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      //- use tabindex to enable focus property on div"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      .commit-message("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        tabindex\u003d\"-1\","
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        v-for\u003d\"slice in day.commitResults\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        v-bind:key\u003d\"slice.hash\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        v-bind:class\u003d\"{ \u0027message-body active\u0027: slice.messageBody !\u003d\u003d \u0027\u0027 }\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      )"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        a.message-title(v-bind:href\u003d\"getSliceLink(slice)\", target\u003d\"_blank\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          .within-border {{ slice.messageTitle.substr(0, 50) }}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          .not-within-border(v-if\u003d\"slice.messageTitle.length \u003e 50\") {{ slice.messageTitle.substr(50) }}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        span \u0026nbsp; ({{ slice.insertions }} lines) \u0026nbsp;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        template(v-if\u003d\"slice.tags\", v-for\u003d\"tag in slice.tags\")"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "          .tag.mini-font(tabindex\u003d\"-1\", v-bind:class\u003d\"[`${slice.hash}`, tag]\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            i.fas.fa-tags"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            span \u0026nbsp;{{ tag }}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        a("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "          v-if\u003d\"slice.messageBody !\u003d\u003d \u0027\u0027\","
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "          v-on:click\u003d\"updateExpandedCommitMessagesCount\","
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "          onclick\u003d\"toggleNext(this)\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "          title\u003d\"Click to show/hide the commit message body\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        )"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "          i.commit-message--button.fas.fa-ellipsis-h"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        .body(v-if\u003d\"slice.messageBody !\u003d\u003d \u0027\u0027\")"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "          pre {{ slice.messageBody }}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            .dashed-border"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 26,
      "-": 60
    }
  },
  {
    "path": "package.json",
    "fileType": "json",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \"name\": \"reposense\","
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \"version\": \"1.0.0\","
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \"description\": \"[![Build Status](https://travis-ci.org/reposense/RepoSense.svg?branch\u003dmaster)](https://travis-ci.org/reposense/RepoSense) [![Build status](https://ci.appveyor.com/api/projects/status/gsbkj5qby3pjd6nw/branch/master?svg\u003dtrue)](https://ci.appveyor.com/project/eugenepeh/reposense/branch/master)\","
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \"main\": \"index.js\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \"directories\": {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \"doc\": \"docs\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  \"scripts\": {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \"lint\": \"eslint -- --fix frontend/src/**/*js frontend/cypress/**.js \u0026\u0026 stylelint frontend/src/**/*.scss \u0026\u0026 pug-lint frontend/src/*.pug frontend/src/tabs/*.pug\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \"browserify\": \"browserify -t vueify -e frontend/src/static/js/v_authorship.js -o frontend/build/static/js/v_authorship.js\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \"spuild\": \"spuild frontend\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \"repository\": {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    \"type\": \"git\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \"url\": \"git+https://github.com/reposense/RepoSense.git\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  \"author\": \"\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \"license\": \"ISC\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \"bugs\": {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \"url\": \"https://github.com/reposense/RepoSense/issues\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  \"homepage\": \"https://github.com/reposense/RepoSense#readme\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  \"dependencies\": {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    \"minimatch\": \"^3.0.4\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    \"pug-lint\": \"^2.6.0\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"spuild\": \"1.0.2\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"stylelint-config-standard\": \"^18.3.0\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  \"devDependencies\": {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    \"browserify\": \"^16.2.3\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    \"eslint\": \"^4.19.1\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    \"eslint-config-airbnb-base\": \"^13.0.0\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    \"eslint-plugin-import\": \"^2.13.0\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"stylelint\": \"^10.1.0\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"stylelint-order\": \"^3.0.1\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    \"vueify\": \"^9.4.1\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 4,
      "-": 35
    }
  },
  {
    "path": "src/main/java/reposense/RepoSense.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZonedDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.helper.HelpScreenException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.AuthorConfiguration;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.CliArguments;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.ConfigCliArguments;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.GroupConfiguration;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.LocationsCliArguments;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoConfiguration;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoLocation;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.ViewCliArguments;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.parser.ArgsParser;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.parser.AuthorConfigCsvParser;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.parser.GroupConfigCsvParser;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.parser.InvalidCsvException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.parser.InvalidLocationException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.parser.ParseException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.parser.RepoConfigCsvParser;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.report.ReportGenerator;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.LogsManager;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.ReportServer;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.FileUtil;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "import reposense.util.TimeUtil;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * The main RepoSense class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "public class RepoSense {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsManager.getLogger(RepoSense.class);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int SERVER_PORT_NUMBER \u003d 9000;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"E MMM d HH:mm:ss yyyy z\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VERSION_UNSPECIFIED \u003d \"unspecified\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * The entry point of the program."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            TimeUtil.startTimer();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            CliArguments cliArguments \u003d ArgsParser.parse(args);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cRepoConfiguration\u003e configs \u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            if (cliArguments instanceof ViewCliArguments) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                ReportServer.startServer(SERVER_PORT_NUMBER, (("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                        ViewCliArguments) cliArguments).getReportDirectoryPath().toAbsolutePath());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (cliArguments instanceof ConfigCliArguments) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                configs \u003d getRepoConfigurations((ConfigCliArguments) cliArguments);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (cliArguments instanceof LocationsCliArguments) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                configs \u003d getRepoConfigurations((LocationsCliArguments) cliArguments);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new AssertionError(\"CliArguments\u0027s subclass type is unhandled.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            RepoConfiguration.setFormatsToRepoConfigs(configs, cliArguments.getFormats());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            RepoConfiguration.setDatesToRepoConfigs(configs, cliArguments.getSinceDate(), cliArguments.getUntilDate());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(configs,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                    cliArguments.isStandaloneConfigIgnored());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cPath\u003e reportFoldersAndFiles \u003d ReportGenerator.generateReposReport(configs,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                    cliArguments.getOutputFilePath().toAbsolutePath().toString(),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    formatter.format(ZonedDateTime.now(cliArguments.getZoneId())),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                    cliArguments.getSinceDate(), cliArguments.getUntilDate(),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                    cliArguments.isSinceDateProvided(), cliArguments.isUntilDateProvided(),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    TimeUtil::getElapsedTime);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            FileUtil.zipFoldersAndFiles(reportFoldersAndFiles, cliArguments.getOutputFilePath().toAbsolutePath(),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                    \".json\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            logger.info(TimeUtil.getElapsedTimeMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            if (cliArguments.isAutomaticallyLaunching()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                ReportServer.startServer(SERVER_PORT_NUMBER, cliArguments.getOutputFilePath().toAbsolutePath());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException | ParseException | InvalidCsvException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, e.getMessage(), e);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (HelpScreenException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            // help message was printed by the ArgumentParser; it is safe to exit."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a list of {@code RepoConfiguration} if {@code cliArguments} is a {@code ConfigCliArguments}."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if user-supplied csv file does not exists or is not readable."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidCsvException if user-supplied repo-config csv is malformed."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cRepoConfiguration\u003e getRepoConfigurations(ConfigCliArguments cliArguments)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            throws IOException, InvalidCsvException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cRepoConfiguration\u003e repoConfigs \u003d new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cAuthorConfiguration\u003e authorConfigs;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cGroupConfiguration\u003e groupConfigs;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            authorConfigs \u003d new AuthorConfigCsvParser(cliArguments.getAuthorConfigFilePath()).parse();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            RepoConfiguration.merge(repoConfigs, authorConfigs);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (FileNotFoundException fnfe) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            // FileNotFoundException thrown as author-config.csv is not found."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            // Ignore exception as the file is optional."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException | InvalidCsvException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            // for all IO and invalid csv exceptions, log the error and continue"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, e.getMessage(), e);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            groupConfigs \u003d new GroupConfigCsvParser(cliArguments.getGroupConfigFilePath()).parse();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            RepoConfiguration.setGroupConfigsToRepos(repoConfigs, groupConfigs);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (FileNotFoundException fnfe) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            // FileNotFoundException thrown as groups-config.csv is not found."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            // Ignore exception as the file is optional."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException | InvalidCsvException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            // for all other IO and invalid csv exceptions, log the error and continue"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, e.getMessage(), e);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        return repoConfigs;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a list of {@code RepoConfiguration} if {@code cliArguments} is a {@code LocationsCliArguments}."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cRepoConfiguration\u003e getRepoConfigurations(LocationsCliArguments cliArguments) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cRepoConfiguration\u003e configs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String locationString : cliArguments.getLocations()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                configs.add(new RepoConfiguration(new RepoLocation(locationString)));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (InvalidLocationException ile) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.log(Level.WARNING, ile.getMessage(), ile);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        return configs;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getVersion() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        String version \u003d RepoSense.class.getPackage().getImplementationVersion();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        if (version \u003d\u003d null || version.equals(VERSION_UNSPECIFIED)) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            version \u003d System.getProperty(\"version\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        return version;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 5,
      "-": 147
    }
  },
  {
    "path": "src/main/java/reposense/authorship/FileInfoAnalyzer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.authorship;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "import java.time.ZoneOffset;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "import java.util.TimeZone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.analyzer.AnnotatorAnalyzer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.model.FileInfo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.model.FileResult;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.model.LineInfo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitBlame;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.CommitHash;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoConfiguration;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.LogsManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.FileUtil;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * Analyzes the target and information given in the {@code FileInfo}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileInfoAnalyzer {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsManager.getLogger(FileInfoAnalyzer.class);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int AUTHOR_NAME_OFFSET \u003d \"author \".length();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int AUTHOR_EMAIL_OFFSET \u003d \"author-mail \".length();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final int AUTHOR_TIME_OFFSET \u003d \"author-time \".length();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final int AUTHOR_TIMEZONE_OFFSET \u003d \"author-tz \".length();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int FULL_COMMIT_HASH_LENGTH \u003d 40;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_FILE_MISSING \u003d \"Unable to analyze the file located at \\\"%s\\\" \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"as the file is missing from your system. Skipping this file.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Analyzes the lines of the file, given in the {@code fileInfo}, that has changed in the time period provided"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * by {@code config}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns null if the file is missing from the local system, or none of the"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code Author} specified in {@code config} contributed to the file in {@code fileInfo}."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static FileResult analyzeFile(RepoConfiguration config, FileInfo fileInfo) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        String relativePath \u003d fileInfo.getPath();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        if (Files.notExists(Paths.get(config.getRepoRoot(), relativePath))) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(String.format(MESSAGE_FILE_MISSING, relativePath));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        if (FileUtil.isEmptyFile(config.getRepoRoot(), relativePath)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        aggregateBlameAuthorInfo(config, fileInfo);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        fileInfo.setFileType(config.getFileType(fileInfo.getPath()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        if (config.isAnnotationOverwrite()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            AnnotatorAnalyzer.aggregateAnnotationAuthorInfo(fileInfo, config.getAuthorEmailsAndAliasesMap());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!config.getAuthorList().isEmpty() \u0026\u0026 fileInfo.isAllAuthorsIgnored(config.getAuthorList())) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        return generateFileResult(fileInfo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates and returns a {@code FileResult} with the authorship results from {@code fileInfo} consolidated."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FileResult generateFileResult(FileInfo fileInfo) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        HashMap\u003cAuthor, Integer\u003e authorContributionMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        for (LineInfo line : fileInfo.getLines()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            Author author \u003d line.getAuthor();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            authorContributionMap.put(author, authorContributionMap.getOrDefault(author, 0) + 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        return new FileResult(fileInfo.getPath(), fileInfo.getFileType(), fileInfo.getLines(), authorContributionMap);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Author} for each line in {@code fileInfo} based on the git blame analysis on the file."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void aggregateBlameAuthorInfo(RepoConfiguration config, FileInfo fileInfo) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        String blameResults \u003d getGitBlameResult(config, fileInfo.getPath());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] blameResultLines \u003d blameResults.split(\"\\n\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        Path filePath \u003d Paths.get(fileInfo.getPath());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Long sinceDateInMs \u003d config.getSinceDate().getTime();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Long untilDateInMs \u003d config.getUntilDate().getTime();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        int systemRawOffset \u003d TimeZone.getTimeZone(ZoneId.systemDefault()).getRawOffset();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        for (int lineCount \u003d 0; lineCount \u003c blameResultLines.length; lineCount +\u003d 5) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            String commitHash \u003d blameResultLines[lineCount].substring(0, FULL_COMMIT_HASH_LENGTH);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            String authorName \u003d blameResultLines[lineCount + 1].substring(AUTHOR_NAME_OFFSET);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            String authorEmail \u003d blameResultLines[lineCount + 2]"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    .substring(AUTHOR_EMAIL_OFFSET).replaceAll(\"\u003c|\u003e\", \"\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            Long commitDateInMs \u003d Long.parseLong(blameResultLines[lineCount + 3].substring(AUTHOR_TIME_OFFSET)) * 1000;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            String authorTimeZone \u003d blameResultLines[lineCount + 4].substring(AUTHOR_TIMEZONE_OFFSET);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            Author author \u003d config.getAuthor(authorName, authorEmail);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            int authorRawOffset \u003d TimeZone.getTimeZone(ZoneOffset.of(authorTimeZone)).getRawOffset();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            if (systemRawOffset !\u003d authorRawOffset) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                // adjust commit date according to difference in timezone"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                commitDateInMs +\u003d authorRawOffset - systemRawOffset;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!fileInfo.isFileLineTracked(lineCount / 5) || author.isIgnoringFile(filePath)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                    || CommitHash.isInsideCommitList(commitHash, config.getIgnoreCommitList())"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                    || commitDateInMs \u003c sinceDateInMs || commitDateInMs \u003e untilDateInMs) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                author \u003d Author.UNKNOWN_AUTHOR;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            fileInfo.setLineAuthor(lineCount / 5, author);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the analysis result from running git blame on {@code filePath}."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String getGitBlameResult(RepoConfiguration config, String filePath) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        return GitBlame.blame(config.getRepoRoot(), filePath);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 20,
      "-": 104
    }
  },
  {
    "path": "src/main/java/reposense/commits/CommitInfoAnalyzer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.commits;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.commits.model.CommitInfo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.commits.model.CommitResult;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.CommitHash;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoConfiguration;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.LogsManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * Analyzes commit information found in the git log."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommitInfoAnalyzer {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DateFormat GIT_STRICT_ISO_DATE_FORMAT \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsManager.getLogger(CommitInfoAnalyzer.class);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_START_ANALYZING_COMMIT_INFO \u003d \"Analyzing commits info for %s (%s)...\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_SPLITTER \u003d \"\\\\|\\\\n\\\\|\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final String REF_SPLITTER \u003d \",\\\\s\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final String TAG_PREFIX \u003d \"tag:\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int COMMIT_HASH_INDEX \u003d 0;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int AUTHOR_INDEX \u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int EMAIL_INDEX \u003d 2;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int DATE_INDEX \u003d 3;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MESSAGE_TITLE_INDEX \u003d 4;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MESSAGE_BODY_INDEX \u003d 5;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final int REF_NAME_INDEX \u003d 6;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern INSERTION_PATTERN \u003d Pattern.compile(\"([0-9]+) insertion\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern DELETION_PATTERN \u003d Pattern.compile(\"([0-9]+) deletion\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern MESSAGEBODY_LEADING_PATTERN \u003d Pattern.compile(\"^ {4}\", Pattern.MULTILINE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Analyzes each {@code CommitInfo} in {@code commitInfos} and returns a list of {@code CommitResult} that is not"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * specified to be ignored or the author is inside {@code config}."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cCommitResult\u003e analyzeCommits(List\u003cCommitInfo\u003e commitInfos, RepoConfiguration config) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(String.format(MESSAGE_START_ANALYZING_COMMIT_INFO, config.getLocation(), config.getBranch()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        return commitInfos.stream()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(commitInfo -\u003e analyzeCommit(commitInfo, config))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(commitResult -\u003e !commitResult.getAuthor().equals(Author.UNKNOWN_AUTHOR)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u0026\u0026 !CommitHash.isInsideCommitList(commitResult.getHash(), config.getIgnoreCommitList()))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                .sorted(Comparator.comparing(CommitResult::getTime))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * Extracts the relevant data from {@code commitInfo} into a {@code CommitResult}."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public static CommitResult analyzeCommit(CommitInfo commitInfo, RepoConfiguration config) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        String infoLine \u003d commitInfo.getInfoLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        String statLine \u003d commitInfo.getStatLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        String[] elements \u003d infoLine.split(LOG_SPLITTER, 7);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        String hash \u003d elements[COMMIT_HASH_INDEX];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        Author author \u003d config.getAuthor(elements[AUTHOR_INDEX], elements[EMAIL_INDEX]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            date \u003d GIT_STRICT_ISO_DATE_FORMAT.parse(elements[DATE_INDEX]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, \"Unable to parse the date from git log result for commit.\", pe);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        String messageTitle \u003d (elements.length \u003e MESSAGE_TITLE_INDEX) ? elements[MESSAGE_TITLE_INDEX] : \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        String messageBody \u003d (elements.length \u003e MESSAGE_BODY_INDEX)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                ? getCommitMessageBody(elements[MESSAGE_BODY_INDEX]) : \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        String[] refs \u003d (elements.length \u003e REF_NAME_INDEX)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                ? elements[REF_NAME_INDEX].split(REF_SPLITTER)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                : new String[]{\"\"};"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        String[] tags \u003d Arrays.stream(refs).filter(ref -\u003e ref.contains(TAG_PREFIX)).toArray(String[]::new);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        if (tags.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            tags \u003d null; // set to null so it won\u0027t be converted to json"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            extractTagNames(tags);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        int insertion \u003d getInsertion(statLine);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        int deletion \u003d getDeletion(statLine);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return new CommitResult(author, hash, date, messageTitle, messageBody, tags, insertion, deletion);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "     * Extracts the tag names in {@code tags}."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static void extractTagNames(String[] tags) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        for (int i \u003d 0; i \u003c tags.length; i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            tags[i] \u003d tags[i].substring(tags[i].lastIndexOf(TAG_PREFIX) + TAG_PREFIX.length()).trim();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String getCommitMessageBody(String raw) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        Matcher matcher \u003d MESSAGEBODY_LEADING_PATTERN.matcher(raw);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        return matcher.replaceAll(\"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    private static int getInsertion(String raw) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        return getNumberWithPattern(raw, INSERTION_PATTERN);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    private static int getDeletion(String raw) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        return getNumberWithPattern(raw, DELETION_PATTERN);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    private static int getNumberWithPattern(String raw, Pattern p) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        Matcher m \u003d p.matcher(raw);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        return m.find() ? Integer.parseInt(m.group(1)) : 0;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 26,
      "-": 101
    }
  },
  {
    "path": "src/main/java/reposense/commits/CommitInfoExtractor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.commits;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.commits.model.CommitInfo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitCheckout;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitLog;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoConfiguration;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.LogsManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * Extracts commit information of a repository."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommitInfoExtractor {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsManager.getLogger(CommitInfoExtractor.class);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_START_EXTRACTING_COMMIT_INFO \u003d \"Extracting commits info for %s (%s)...\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern TRAILING_NEWLINES_PATTERN \u003d Pattern.compile(\"\\n+$\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Extracts out and returns the raw information of each commit for the repo in {@code config}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cCommitInfo\u003e extractCommitInfos(RepoConfiguration config) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(String.format(MESSAGE_START_EXTRACTING_COMMIT_INFO, config.getLocation(), config.getBranch()));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitInfo\u003e repoCommitInfos \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Author author : config.getAuthorList()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            String gitLogResult \u003d GitLog.get(config, author);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cCommitInfo\u003e authorCommitInfos \u003d parseGitLogResults(gitLogResult);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            repoCommitInfos.addAll(authorCommitInfos);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return repoCommitInfos;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the {@code gitLogResult} into a list of {@code CommitInfo} and returns it."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ArrayList\u003cCommitInfo\u003e parseGitLogResults(String gitLogResult) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cCommitInfo\u003e commitInfos \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] rawCommitInfos \u003d gitLogResult.split(GitLog.COMMIT_INFO_DELIMITER);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        if (rawCommitInfos.length \u003c 2) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            //no log (maybe because no contribution for that file type)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            return commitInfos;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        // Starts from 1 as index 0 is always empty."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 1; i \u003c rawCommitInfos.length; i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            Matcher matcher \u003d TRAILING_NEWLINES_PATTERN.matcher(rawCommitInfos[i]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            String rawCommitInfo \u003d matcher.replaceAll(\"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            int statLineSeparatorIndex \u003d rawCommitInfo.lastIndexOf(\"|\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            String infoLine \u003d rawCommitInfo.substring(0, statLineSeparatorIndex);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            String statLine \u003d rawCommitInfo.substring(statLineSeparatorIndex + 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            commitInfos.add(new CommitInfo(infoLine, statLine));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.reverse(commitInfos);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return commitInfos;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 70
    }
  },
  {
    "path": "src/main/java/reposense/commits/model/CommitResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.commits.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Stores the result from analyzing a {@code CommitInfo}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommitResult {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String hash;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String messageTitle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String messageBody;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private final String[] tags;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int insertions;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int deletions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private final transient Author author;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private final transient Date time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommitResult(Author author, String hash, Date time, String messageTitle,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            String messageBody, String[] tags, int insertions, int deletions) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.author \u003d author;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.hash \u003d hash;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.messageTitle \u003d messageTitle;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.messageBody \u003d messageBody;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.insertions \u003d insertions;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.deletions \u003d deletions;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getMessageTitle() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return messageTitle;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getMessageBody() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return messageBody;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    public String[] getTags() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public Author getAuthor() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return author;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getHash() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return hash;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getTime() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getInsertions() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return insertions;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getDeletions() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        return deletions;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this \u003d\u003d other) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof CommitResult)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        CommitResult otherCommitResult \u003d (CommitResult) other;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return author.equals(otherCommitResult.author)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 hash.equals(otherCommitResult.hash)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 time.equals(otherCommitResult.time)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 messageTitle.equals(otherCommitResult.messageTitle)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 messageBody.equals(otherCommitResult.messageBody)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                \u0026\u0026 Arrays.equals(tags, otherCommitResult.tags)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 insertions \u003d\u003d otherCommitResult.insertions"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 deletions \u003d\u003d otherCommitResult.deletions;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 9,
      "-": 77
    }
  },
  {
    "path": "src/main/java/reposense/git/GitBlame.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.git;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static reposense.system.CommandRunner.runCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static reposense.util.StringsUtil.addQuote;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.StringsUtil;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains git blame related functionalities."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Git blame is responsible for showing which revision and author last modified each line of a file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class GitBlame {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String COMMIT_HASH_REGEX \u003d \"(^[0-9a-f]{40} .*)\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String AUTHOR_NAME_REGEX \u003d \"(^author .*)\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String AUTHOR_EMAIL_REGEX \u003d \"(^author-mail .*)\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final String AUTHOR_TIME_REGEX \u003d \"(^author-time [0-9]+)\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final String AUTHOR_TIMEZONE_REGEX \u003d \"(^author-tz .*)\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final String COMBINATION_REGEX \u003d COMMIT_HASH_REGEX + \"|\" + AUTHOR_NAME_REGEX + \"|\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            + AUTHOR_EMAIL_REGEX + \"|\" + AUTHOR_TIME_REGEX + \"|\" + AUTHOR_TIMEZONE_REGEX;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the raw git blame result for the {@code fileDirectory}, performed at the {@code root} directory."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String blame(String root, String fileDirectory) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        Path rootPath \u003d Paths.get(root);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        String blameCommand \u003d \"git blame -w --line-porcelain\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        blameCommand +\u003d \" \" + addQuote(fileDirectory);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return StringsUtil.filterText(runCommand(rootPath, blameCommand), COMBINATION_REGEX);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 4,
      "-": 32
    }
  },
  {
    "path": "src/main/java/reposense/git/GitLog.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.git;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static reposense.system.CommandRunner.runCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoConfiguration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains git log related functionalities."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Git log is responsible to obtain the commit logs and the authors\u0027 info."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class GitLog {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMIT_INFO_DELIMITER \u003d \"(?m)^\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PRETTY_FORMAT_STRING \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            \"\\\"\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c%n%H|%n|%aN|%n|%aE|%n|%cI|%n|%s|%n|%w(0,4,4)%b%w(0,0,0)|%n|%D|\\\"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the git commit log info of {@code Author}, in the repository specified in {@code config}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String get(RepoConfiguration config, Author author) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        Path rootPath \u003d Paths.get(config.getRepoRoot());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        String command \u003d \"git log --no-merges -i \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        command +\u003d GitUtil.convertToGitDateRangeArgs(config.getSinceDate(), config.getUntilDate());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        command +\u003d \" --pretty\u003dformat:\" + PRETTY_FORMAT_STRING + \" --shortstat\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        command +\u003d GitUtil.convertToFilterAuthorArgs(author);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        command +\u003d GitUtil.convertToGitFormatsArgs(config.getFileTypeManager().getFormats());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        command +\u003d GitUtil.convertToGitExcludeGlobArgs(rootPath.toFile(), author.getIgnoreGlobList());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return runCommand(rootPath, command);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the git commit log info of {@code Author}, with the files changed, in the repository specified in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code config}."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getWithFiles(RepoConfiguration config, Author author) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        Path rootPath \u003d Paths.get(config.getRepoRoot());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        String command \u003d \"git log --no-merges -i \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        command +\u003d GitUtil.convertToGitDateRangeArgs(config.getSinceDate(), config.getUntilDate());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        command +\u003d \" --pretty\u003dformat:\" + PRETTY_FORMAT_STRING + \" --stat\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        command +\u003d GitUtil.convertToFilterAuthorArgs(author);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        command +\u003d GitUtil.convertToGitFormatsArgs(config.getFileTypeManager().getFormats());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        command +\u003d GitUtil.convertToGitExcludeGlobArgs(rootPath.toFile(), author.getIgnoreGlobList());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return runCommand(rootPath, command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 52
    }
  },
  {
    "path": "src/main/java/reposense/git/GitUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.git;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static reposense.util.StringsUtil.addQuote;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.FileSystem;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.FileSystems;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.PathMatcher;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.FileType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.LogsManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.StringsUtil;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains Git related utilities."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "class GitUtil {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    static final DateFormat GIT_LOG_SINCE_DATE_FORMAT \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss+08:00\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    static final DateFormat GIT_LOG_UNTIL_DATE_FORMAT \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss+08:00\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsManager.getLogger(GitUtil.class);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    // ignore check against email"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String AUTHOR_NAME_PATTERN \u003d \"^%s \u003c.*\u003e$\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    // ignore check against author name"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String AUTHOR_EMAIL_PATTERN \u003d \"^.* \u003c\\\\(.*+\\\\)\\\\?%s\u003e$\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String OR_OPERATOR_PATTERN \u003d \"\\\\|\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the {@code String} command to specify the date range of commits to analyze for `git` commands."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    static String convertToGitDateRangeArgs(Date sinceDate, Date untilDate) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        String gitDateRangeArgs \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sinceDate !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            gitDateRangeArgs +\u003d \" --since\u003d\" + addQuote(GIT_LOG_SINCE_DATE_FORMAT.format(sinceDate));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        if (untilDate !\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            gitDateRangeArgs +\u003d \" --until\u003d\" + addQuote(GIT_LOG_UNTIL_DATE_FORMAT.format(untilDate));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return gitDateRangeArgs;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the {@code String} command to specify the authors to analyze for `git log` command."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    static String convertToFilterAuthorArgs(Author author) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder filterAuthorArgsBuilder \u003d new StringBuilder(\" --author\u003d\\\"\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        // git author names and emails may contain regex meta-characters, so we need to escape those"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        author.getAuthorAliases().stream()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(authorAlias -\u003e String.format(AUTHOR_NAME_PATTERN,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                        StringsUtil.replaceSpecialSymbols(authorAlias, \".\")) + OR_OPERATOR_PATTERN)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(filterAuthorArgsBuilder::append);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        author.getEmails().stream()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(email -\u003e String.format(AUTHOR_EMAIL_PATTERN,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                        StringsUtil.replaceSpecialSymbols(email, \".\")) + OR_OPERATOR_PATTERN)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(filterAuthorArgsBuilder::append);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        filterAuthorArgsBuilder.append("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(AUTHOR_NAME_PATTERN,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                        StringsUtil.replaceSpecialSymbols(author.getGitId(), \".\"))).append(\"\\\"\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return filterAuthorArgsBuilder.toString();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the {@code String} command to specify the file formats to analyze for `git` commands."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String convertToGitFormatsArgs(List\u003cFileType\u003e formats) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder gitFormatsArgsBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        final String cmdFormat \u003d \" -- \" + addQuote(\"*.%s\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        formats.stream()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(format -\u003e String.format(cmdFormat, format.toString()))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(gitFormatsArgsBuilder::append);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        return gitFormatsArgsBuilder.toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the {@code String} command to specify the globs to exclude for `git log` command."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * Also checks that every glob in {@code ignoreGlobList} only targets files within the given repository"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code root}."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String convertToGitExcludeGlobArgs(File root, List\u003cString\u003e ignoreGlobList) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder gitExcludeGlobArgsBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        final String cmdFormat \u003d \" \" + addQuote(\":(exclude)%s\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        ignoreGlobList.stream()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(item -\u003e isValidIgnoreGlob(root, item))"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(ignoreGlob -\u003e String.format(cmdFormat, ignoreGlob))"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(gitExcludeGlobArgsBuilder::append);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        return gitExcludeGlobArgsBuilder.toString();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the {@code ignoreGlob} is inside the current repository."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "     * Produces log messages when the invalid {@code ignoreGlob} is skipped."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isValidIgnoreGlob(File repoRoot, String ignoreGlob) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        String validPath \u003d ignoreGlob;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        FileSystem fileSystem \u003d FileSystems.getDefault();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        if (ignoreGlob.isEmpty()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (ignoreGlob.startsWith(\"/\") || ignoreGlob.startsWith(\"\\\\\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            // Ignore globs cannot start with a slash"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, ignoreGlob + \" cannot start with / or \\\\.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (ignoreGlob.contains(\"/*\") || ignoreGlob.contains(\"\\\\*\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            // contains directories"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            validPath \u003d ignoreGlob.substring(0, ignoreGlob.indexOf(\"/*\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (ignoreGlob.contains(\"*\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            // no directories"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            String fileGlobPath \u003d \"glob:\" + repoRoot.getCanonicalPath().replaceAll(\"\\\\\\\\+\", \"\\\\/\") + \"/**\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            PathMatcher pathMatcher \u003d fileSystem.getPathMatcher(fileGlobPath);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            validPath \u003d new File(repoRoot, validPath).getCanonicalPath();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            if (pathMatcher.matches(Paths.get(validPath))) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, ioe.getMessage(), ioe);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.WARNING, ignoreGlob + \" will be skipped as this glob points to the outside of \""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"the repository.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 2,
      "-": 141
    }
  },
  {
    "path": "src/main/java/reposense/model/Author.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.FileSystems;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.PathMatcher;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Git Author."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Author {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    public static final String NAME_FAILED_TO_CLONE_OR_CHECKOUT \u003d \"FAILED TO CLONE OR CHECKOUT THIS REPOSITORY\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    public static final String NAME_NO_AUTHOR_WITH_COMMITS_FOUND \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            \"NO AUTHOR WITH COMMITS FOUND WITHIN THIS PERIOD OF TIME\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String UNKNOWN_AUTHOR_GIT_ID \u003d \"-\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String STANDARD_GITHUB_EMAIL_DOMAIN \u003d \"@users.noreply.github.com\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_UNCOMMON_EMAIL_PATTERN \u003d \"The provided email, %s, uses uncommon pattern.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_UNCOMMON_GLOB_PATTERN \u003d \"The provided ignore glob, %s, uses uncommon pattern.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String COMMON_EMAIL_REGEX \u003d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            \"^([a-zA-Z0-9_\\\\-\\\\.\\\\+]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String COMMON_GLOB_REGEX \u003d \"^[-a-zA-Z0-9 _/\\\\\\\\*!{}\\\\[\\\\]!(),:.]*$\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Author UNKNOWN_AUTHOR \u003d new Author(UNKNOWN_AUTHOR_GIT_ID);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String gitId;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient List\u003cString\u003e emails;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient String displayName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient List\u003cString\u003e authorAliases;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient List\u003cString\u003e ignoreGlobList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient PathMatcher ignoreGlobMatcher;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public Author(String gitId) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.gitId \u003d gitId;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        this.emails \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this.displayName \u003d gitId;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        this.authorAliases \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        this.ignoreGlobList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        addStandardGitHubEmail(this.emails);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        updateIgnoreGlobMatcher();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public Author(StandaloneAuthor sa) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        String gitId \u003d sa.getGithubId();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e emails \u003d new ArrayList\u003c\u003e(sa.getEmails());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        String displayName \u003d !sa.getDisplayName().isEmpty() ? sa.getDisplayName() : sa.getGithubId();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e authorAliases \u003d sa.getAuthorNames();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e ignoreGlobList \u003d sa.getIgnoreGlobList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        this.gitId \u003d gitId;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        this.displayName \u003d displayName;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        this.authorAliases \u003d authorAliases;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        setEmails(emails);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        setIgnoreGlobList(ignoreGlobList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public Author(Author another) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        this.gitId \u003d another.gitId;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        this.emails \u003d another.emails;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        this.displayName \u003d another.gitId;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        this.authorAliases \u003d another.authorAliases;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        this.ignoreGlobList \u003d another.ignoreGlobList;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        this.ignoreGlobMatcher \u003d another.ignoreGlobMatcher;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks that all the strings in the {@code emails} only contains commonly used email patterns."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalArgumentException if any of the values do not meet the criteria."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void validateEmails(List\u003cString\u003e emails) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String email : emails) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!email.matches(COMMON_EMAIL_REGEX)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new IllegalArgumentException(String.format(MESSAGE_UNCOMMON_EMAIL_PATTERN, email));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks that all the strings in the {@code ignoreGlobList} only contains commonly used glob patterns."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalArgumentException if any of the values do not meet the criteria."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void validateIgnoreGlobs(List\u003cString\u003e ignoreGlobList) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String glob : ignoreGlobList) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!glob.matches(COMMON_GLOB_REGEX)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new IllegalArgumentException(String.format(MESSAGE_UNCOMMON_GLOB_PATTERN, glob));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getGitId() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        return gitId;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getEmails() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        return emails;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setEmails(List\u003cString\u003e emails) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        validateEmails(emails);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        this.emails \u003d new ArrayList\u003c\u003e(emails);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        addStandardGitHubEmail(this.emails);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDisplayName() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        return displayName;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDisplayName(String displayName) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        this.displayName \u003d displayName;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getAuthorAliases() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        return authorAliases;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAuthorAliases(List\u003cString\u003e authorAliases) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        this.authorAliases \u003d authorAliases;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getIgnoreGlobList() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        return ignoreGlobList;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setIgnoreGlobList(List\u003cString\u003e ignoreGlobList) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        validateIgnoreGlobs(ignoreGlobList);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        this.ignoreGlobList \u003d new ArrayList\u003c\u003e(ignoreGlobList);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        updateIgnoreGlobMatcher();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "     * Validates and adds a list of ignore glob into the {@code Author} class instance variable without duplicates"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "     * and updates the ignore glob matcher."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    public void importIgnoreGlobList(List\u003cString\u003e ignoreGlobList) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        validateIgnoreGlobs(ignoreGlobList);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        ignoreGlobList.forEach(ignoreGlob -\u003e {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!this.ignoreGlobList.contains(ignoreGlob)) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                this.ignoreGlobList.add(ignoreGlob);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        updateIgnoreGlobMatcher();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if this author is ignoring the {@code filePath} based on its ignore glob matcher."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isIgnoringFile(Path filePath) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        return ignoreGlobMatcher.matches(filePath);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this \u003d\u003d other) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles null"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof Author)) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        Author otherAuthor \u003d (Author) other;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.gitId.equalsIgnoreCase(otherAuthor.gitId);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        return gitId !\u003d null ? gitId.toLowerCase().hashCode() : 0;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        return gitId;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the {@code PathMatcher} to the new ignore glob list set."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "     * Called after a new ignore glob list is set."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    private void updateIgnoreGlobMatcher() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        String globString \u003d \"glob:{\" + String.join(\",\", ignoreGlobList) + \"}\";"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        ignoreGlobMatcher \u003d FileSystems.getDefault().getPathMatcher(globString);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the standard github email to {@code emails} if doesn\u0027t exist."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addStandardGitHubEmail(List\u003cString\u003e emails) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        String standardGitHubEmail \u003d getGitId() + STANDARD_GITHUB_EMAIL_DOMAIN;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!emails.contains(standardGitHubEmail)) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            emails.add(standardGitHubEmail);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 3,
      "-": 197
    }
  },
  {
    "path": "src/main/java/reposense/model/CliArguments.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents command line arguments user supplied when running the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class CliArguments {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Path outputFilePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Date sinceDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Date untilDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    protected boolean isSinceDateProvided;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    protected boolean isUntilDateProvided;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    protected List\u003cFileType\u003e formats;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isAutomaticallyLaunching;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isStandaloneConfigIgnored;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    protected ZoneId zoneId;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public ZoneId getZoneId() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        return zoneId;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getOutputFilePath() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        return outputFilePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getSinceDate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return sinceDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getUntilDate() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return untilDate;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    public boolean isSinceDateProvided() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return isSinceDateProvided;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    public boolean isUntilDateProvided() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return isUntilDateProvided;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFileType\u003e getFormats() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return formats;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isAutomaticallyLaunching() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return isAutomaticallyLaunching;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isStandaloneConfigIgnored() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        return isStandaloneConfigIgnored;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this \u003d\u003d other) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles null"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof CliArguments)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments otherCliArguments \u003d (CliArguments) other;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.outputFilePath.equals(otherCliArguments.outputFilePath)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 this.sinceDate.equals(otherCliArguments.sinceDate)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 this.untilDate.equals(otherCliArguments.untilDate)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                \u0026\u0026 this.isSinceDateProvided \u003d\u003d otherCliArguments.isSinceDateProvided"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                \u0026\u0026 this.isUntilDateProvided \u003d\u003d otherCliArguments.isUntilDateProvided"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 this.formats.equals(otherCliArguments.formats)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 this.isAutomaticallyLaunching \u003d\u003d otherCliArguments.isAutomaticallyLaunching"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 this.isStandaloneConfigIgnored \u003d\u003d otherCliArguments.isStandaloneConfigIgnored"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 this.zoneId.equals(otherCliArguments.zoneId);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 12,
      "-": 70
    }
  },
  {
    "path": "src/main/java/reposense/model/ConfigCliArguments.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.parser.AuthorConfigCsvParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.parser.GroupConfigCsvParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.parser.RepoConfigCsvParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents command line arguments user supplied when running the program with mandatory field -config."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class ConfigCliArguments extends CliArguments {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path EMPTY_PATH \u003d Paths.get(\"\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path configFolderPath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path repoConfigFilePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path authorConfigFilePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path groupConfigFilePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public ConfigCliArguments(Path configFolderPath, Path outputFilePath, Date sinceDate,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            Date untilDate, boolean isSinceDateProvided, boolean isUntilDateProvided,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFileType\u003e formats, boolean isAutomaticallyLaunching,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isStandaloneConfigIgnored, ZoneId zoneId) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.configFolderPath \u003d configFolderPath.equals(EMPTY_PATH)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                ? configFolderPath.toAbsolutePath()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                : configFolderPath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.repoConfigFilePath \u003d configFolderPath.resolve(RepoConfigCsvParser.REPO_CONFIG_FILENAME);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.authorConfigFilePath \u003d configFolderPath.resolve(AuthorConfigCsvParser.AUTHOR_CONFIG_FILENAME);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.groupConfigFilePath \u003d configFolderPath.resolve(GroupConfigCsvParser.GROUP_CONFIG_FILENAME);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.outputFilePath \u003d outputFilePath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sinceDate \u003d sinceDate;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.untilDate \u003d untilDate;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.isSinceDateProvided \u003d isSinceDateProvided;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.isUntilDateProvided \u003d isUntilDateProvided;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        this.formats \u003d formats;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isAutomaticallyLaunching \u003d isAutomaticallyLaunching;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        this.zoneId \u003d zoneId;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getConfigFolderPath() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return configFolderPath;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getRepoConfigFilePath() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return repoConfigFilePath;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getAuthorConfigFilePath() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return authorConfigFilePath;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getGroupConfigFilePath() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        return groupConfigFilePath;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this \u003d\u003d other) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles null"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof ConfigCliArguments)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        ConfigCliArguments otherConfigCliArguments \u003d (ConfigCliArguments) other;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return super.equals(other)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 this.repoConfigFilePath.equals(otherConfigCliArguments.repoConfigFilePath)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 this.authorConfigFilePath.equals(otherConfigCliArguments.authorConfigFilePath)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 this.groupConfigFilePath.equals(otherConfigCliArguments.groupConfigFilePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 3,
      "-": 77
    }
  },
  {
    "path": "src/main/java/reposense/model/LocationsCliArguments.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents command line arguments user supplied when running the program with mandatory field -repos."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class LocationsCliArguments extends CliArguments {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cString\u003e locations;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public LocationsCliArguments(List\u003cString\u003e locations, Path outputFilePath, Date sinceDate,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            Date untilDate, boolean isSinceDateProvided, boolean isUntilDateProvided, List\u003cFileType\u003e formats,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            boolean isAutomaticallyLaunching, boolean isStandaloneConfigIgnored, ZoneId zoneId) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        this.locations \u003d locations;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        this.outputFilePath \u003d outputFilePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sinceDate \u003d sinceDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.untilDate \u003d untilDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.isSinceDateProvided \u003d isSinceDateProvided;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.isUntilDateProvided \u003d isUntilDateProvided;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.formats \u003d formats;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isAutomaticallyLaunching \u003d isAutomaticallyLaunching;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.zoneId \u003d zoneId;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getLocations() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return locations;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this \u003d\u003d other) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof LocationsCliArguments)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        LocationsCliArguments otherLocationsCliArguments \u003d (LocationsCliArguments) other;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return super.equals(other)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 this.locations.equals(otherLocationsCliArguments.locations);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 3,
      "-": 47
    }
  },
  {
    "path": "src/main/java/reposense/parser/ArgsParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.ArgumentParsers;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.helper.HelpScreenException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.impl.Arguments;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.impl.action.HelpArgumentAction;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.impl.action.VersionArgumentAction;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.inf.ArgumentParser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.inf.ArgumentParserException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.inf.MutuallyExclusiveGroup;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.inf.Namespace;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.RepoSense;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.CliArguments;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.ConfigCliArguments;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.FileType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.LocationsCliArguments;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.ViewCliArguments;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.LogsManager;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * Verifies and parses a string-formatted date to a {@code CliArguments} object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "public class ArgsParser {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_REPORT_NAME \u003d \"reposense-report\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String[] HELP_FLAGS \u003d new String[]{\"--help\", \"-h\"};"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String[] CONFIG_FLAGS \u003d new String[]{\"--config\", \"-c\"};"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String[] REPO_FLAGS \u003d new String[]{\"--repo\", \"--repos\", \"-r\"};"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String[] VIEW_FLAGS \u003d new String[]{\"--view\", \"-v\"};"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String[] OUTPUT_FLAGS \u003d new String[]{\"--output\", \"-o\"};"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String[] SINCE_FLAGS \u003d new String[]{\"--since\", \"-s\"};"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String[] UNTIL_FLAGS \u003d new String[]{\"--until\", \"-u\"};"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String[] FORMAT_FLAGS \u003d new String[]{\"--formats\", \"-f\"};"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String[] IGNORE_FLAGS \u003d new String[]{\"--ignore-standalone-config\", \"-i\"};"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String[] TIMEZONE_FLAGS \u003d new String[]{\"--timezone\", \"-t\"};"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String[] VERSION_FLAGS \u003d new String[]{\"--version\", \"-V\"};"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsManager.getLogger(ArgsParser.class);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PROGRAM_USAGE \u003d \"java -jar RepoSense.jar\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PROGRAM_DESCRIPTION \u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \"RepoSense is a contribution analysis tool for Git repositories.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_HEADER_MUTEX \u003d \"mutual exclusive arguments\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_SINCE_DATE_LATER_THAN_UNTIL_DATE \u003d"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            \"\\\"Since Date\\\" cannot be later than \\\"Until Date\\\"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_SINCE_DATE_LATER_THAN_TODAY_DATE \u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            \"\\\"Since Date\\\" must not be later than today\u0027s date.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_USING_DEFAULT_CONFIG_PATH \u003d"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Config path not provided, using current working directory as default.\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path EMPTY_PATH \u003d Paths.get(\"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ArgumentParser getArgumentParser() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentParser parser \u003d ArgumentParsers"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                .newFor(PROGRAM_USAGE)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                .addHelp(false)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                .build()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                .description(PROGRAM_DESCRIPTION);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        MutuallyExclusiveGroup mutexParser \u003d parser"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                .addMutuallyExclusiveGroup(MESSAGE_HEADER_MUTEX)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                .required(false);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        // Boolean flags"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        parser.addArgument(HELP_FLAGS)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                .help(\"Show help message.\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                .action(new HelpArgumentAction());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        parser.version(\"RepoSense \" + RepoSense.getVersion());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        parser.addArgument(VERSION_FLAGS)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                .help(\"Show the version of RepoSense.\")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                .action(new VersionArgumentAction());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        parser.addArgument(IGNORE_FLAGS)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                .dest(IGNORE_FLAGS[0])"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                .action(Arguments.storeTrue())"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                .help(\"A flag to ignore the standalone config file in the repo.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        parser.addArgument(VIEW_FLAGS)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                .dest(VIEW_FLAGS[0])"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                .nargs(\"?\")"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                .metavar(\"PATH\")"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                .type(new ReportFolderArgumentType())"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                .setConst(EMPTY_PATH)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                .help(\"Starts a server to display the report in the provided directory. \""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"If used as a flag (with no argument), \""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"generates a report and automatically displays the report.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        parser.addArgument(OUTPUT_FLAGS)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                .dest(OUTPUT_FLAGS[0])"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                .metavar(\"PATH\")"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                .type(new OutputFolderArgumentType())"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                .setDefault(Paths.get(ArgsParser.DEFAULT_REPORT_NAME))"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                .help(\"The directory to output the report folder, reposense-report. \""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"If not provided, the report folder will be created in the current working directory.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        parser.addArgument(SINCE_FLAGS)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                .dest(SINCE_FLAGS[0])"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                .metavar(\"dd/MM/yyyy\")"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                .type(new SinceDateArgumentType())"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                .setDefault(Optional.empty())"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                .help(\"The date to start filtering.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        parser.addArgument(UNTIL_FLAGS)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                .dest(UNTIL_FLAGS[0])"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                .metavar(\"dd/MM/yyyy\")"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                .type(new UntilDateArgumentType())"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                .setDefault(Optional.empty())"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                .help(\"The date to stop filtering.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        parser.addArgument(FORMAT_FLAGS)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                .dest(FORMAT_FLAGS[0])"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                .nargs(\"*\")"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                .metavar(\"FORMAT\")"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                .type(new AlphanumericArgumentType())"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                .setDefault(Collections.emptyList())"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                .help(\"The alphanumeric file formats to process.\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"If not provided, default file formats will be used.\\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"Please refer to userguide for more information.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        // Mutex flags - these will always be the last parameters in help message."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        mutexParser.addArgument(CONFIG_FLAGS)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                .dest(CONFIG_FLAGS[0])"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                .type(new ConfigFolderArgumentType())"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                .metavar(\"PATH\")"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                .setDefault(EMPTY_PATH)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                .help(\"The directory containing the config files.\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"If not provided, the config files will be obtained from the current working directory.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        mutexParser.addArgument(REPO_FLAGS)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                .nargs(\"+\")"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                .dest(REPO_FLAGS[0])"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                .metavar(\"LOCATION\")"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                .help(\"The GitHub URL or disk locations to clone repository.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        parser.addArgument(TIMEZONE_FLAGS)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                .dest(TIMEZONE_FLAGS[0])"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                .metavar(\"ZONE_ID[±hh[mm]]\")"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                .type(new ZoneIdArgumentType())"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                .setDefault(ZoneId.systemDefault())"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                .help(\"The timezone to use for the generated report. \""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"One kind of valid timezones is relative to UTC. E.g. UTC, UTC+08, UTC-1030. \\n\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"If not provided, system default timezone will be used.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        return parser;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the given string arguments to a {@code CliArguments} object."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws HelpScreenException if given args contain the --help flag. Help message will be printed out"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * by the {@code ArgumentParser} hence this is to signal to the caller that the program is safe to exit."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given string arguments fails to parse to a {@code CliArguments} object."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    public static CliArguments parse(String[] args) throws HelpScreenException, ParseException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            ArgumentParser parser \u003d getArgumentParser();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            Namespace results \u003d parser.parseArgs(args);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            Path configFolderPath \u003d results.get(CONFIG_FLAGS[0]);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            Path reportFolderPath \u003d results.get(VIEW_FLAGS[0]);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            Path outputFolderPath \u003d results.get(OUTPUT_FLAGS[0]);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cDate\u003e cliSinceDate \u003d results.get(SINCE_FLAGS[0]);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cDate\u003e cliUntilDate \u003d results.get(UNTIL_FLAGS[0]);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            boolean isSinceDateProvided \u003d cliSinceDate.isPresent();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            boolean isUntilDateProvided \u003d cliUntilDate.isPresent();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            Date sinceDate \u003d cliSinceDate.orElse(getDateMinusAMonth(cliUntilDate));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            Date untilDate \u003d cliUntilDate.orElse(getCurrentDate());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e locations \u003d results.get(REPO_FLAGS[0]);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFileType\u003e formats \u003d FileType.convertFormatStringsToFileTypes(results.get(FORMAT_FLAGS[0]));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isStandaloneConfigIgnored \u003d results.get(IGNORE_FLAGS[0]);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            ZoneId zoneId \u003d results.get(TIMEZONE_FLAGS[0]);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            LogsManager.setLogFolderLocation(outputFolderPath);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            verifySinceDateIsValid(sinceDate);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            verifyDatesRangeIsCorrect(sinceDate, untilDate);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            if (reportFolderPath !\u003d null \u0026\u0026 !reportFolderPath.equals(EMPTY_PATH) \u0026\u0026 configFolderPath.equals(EMPTY_PATH)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 locations \u003d\u003d null) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                return new ViewCliArguments(reportFolderPath);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isAutomaticallyLaunching \u003d reportFolderPath !\u003d null;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isAutomaticallyLaunching \u0026\u0026 !reportFolderPath.equals(EMPTY_PATH)) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.info(String.format(\"Ignoring argument \u0027%s\u0027 for --view.\", reportFolderPath.toString()));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            if (locations !\u003d null) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                return new LocationsCliArguments(locations, outputFolderPath, sinceDate, untilDate, isSinceDateProvided,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                        isUntilDateProvided, formats, isAutomaticallyLaunching, isStandaloneConfigIgnored, zoneId);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            if (configFolderPath.equals(EMPTY_PATH)) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.info(MESSAGE_USING_DEFAULT_CONFIG_PATH);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            return new ConfigCliArguments(configFolderPath, outputFolderPath, sinceDate, untilDate, isSinceDateProvided,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                    isUntilDateProvided, formats, isAutomaticallyLaunching, isStandaloneConfigIgnored, zoneId);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (HelpScreenException hse) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            throw hse;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArgumentParserException ape) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(getArgumentParser().formatUsage() + ape.getMessage() + \"\\n\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code Date} that is one month before {@code cliUntilDate} (if present) or one month before report"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "     * generation date otherwise."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Date getDateMinusAMonth(Optional\u003cDate\u003e cliUntilDate) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        cliUntilDate.ifPresent(cal::setTime);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.HOUR_OF_DAY, 0);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.MINUTE, 0);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.SECOND, 0);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.MILLISECOND, 0);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.add(Calendar.MONTH, -1);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        return cal.getTime();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns current date with time set to 23:59:59."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Date getCurrentDate() {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.HOUR_OF_DAY, 23);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.MINUTE, 59);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.SECOND, 59);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.MILLISECOND, 0);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        return cal.getTime();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "     * Verifies that {@code sinceDate} is earlier than {@code untilDate}."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if {@code sinceDate} supplied is later than {@code untilDate}."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void verifyDatesRangeIsCorrect(Date sinceDate, Date untilDate)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            throws ParseException {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sinceDate.getTime() \u003e untilDate.getTime()) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_SINCE_DATE_LATER_THAN_UNTIL_DATE);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "     * Verifies that {@code sinceDate} is no later than the date of report generation."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if {@code sinceDate} supplied is later than date of report generation."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void verifySinceDateIsValid(Date sinceDate) throws ParseException {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        Date dateToday \u003d new Date();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sinceDate.getTime() \u003e dateToday.getTime()) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_SINCE_DATE_LATER_THAN_TODAY_DATE);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 6,
      "-": 259
    }
  },
  {
    "path": "src/main/java/reposense/parser/DateArgumentType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.inf.Argument;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.inf.ArgumentParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.inf.ArgumentParserException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.inf.ArgumentType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * Verifies and parses a string-formatted date to a {@code Date} object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class DateArgumentType implements ArgumentType\u003cOptional\u003cDate\u003e\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    protected static final String DATE_FORMAT_REGEX \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            \"^((0[1-9]|[12][0-9]|3[01])\\\\/(0[1-9]|1[012])\\\\/(19|2[0-9])[0-9]{2})\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARSE_EXCEPTION_MESSAGE_INVALID_DATE_STRING_FORMAT \u003d \"Invalid Date: %s\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final DateFormat CLI_ARGS_DATE_FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "         * Setting setLenient to false prevents unexpected results."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "         * Without it, even with \"dd/MM/yyyy HH:mm:ss\" format, 11/31/2017 00:00:00 will be parsed to 11/7/2019 00:00:00."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "         * */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        CLI_ARGS_DATE_FORMAT.setLenient(false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "     * Extracts the first substring that matches the {@code DATE_FORMAT_REGEX}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    protected String extractDate(String date) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Matcher matcher \u003d Pattern.compile(DATE_FORMAT_REGEX).matcher(date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        String extractedDate \u003d date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            extractedDate \u003d matcher.group(1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return extractedDate;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cDate\u003e convert(ArgumentParser parser, Argument arg, String value) throws ArgumentParserException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.of(CLI_ARGS_DATE_FORMAT.parse(value));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (java.text.ParseException pe) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ArgumentParserException("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                    String.format(PARSE_EXCEPTION_MESSAGE_INVALID_DATE_STRING_FORMAT, value), parser);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 18,
      "-": 35
    }
  },
  {
    "path": "src/main/java/reposense/parser/SinceDateArgumentType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.inf.Argument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.inf.ArgumentParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.inf.ArgumentParserException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Verifies and parses a string-formatted since date to a {@code Date} object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class SinceDateArgumentType extends DateArgumentType {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * When user specifies \"d1\", arbitrary first commit date will be returned."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Then, ReportGenerator will replace the arbitrary since date with the earliest commit date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Date ARBITRARY_FIRST_COMMIT_DATE \u003d new Date(Long.MIN_VALUE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FIRST_COMMIT_DATE_SHORTHAND \u003d \"d1\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an arbitrary year {@link SinceDateArgumentType#ARBITRARY_FIRST_COMMIT_DATE} if user specifies"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link SinceDateArgumentType#FIRST_COMMIT_DATE_SHORTHAND} in {@code value}, or attempts to return the"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * desired date otherwise."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cDate\u003e convert(ArgumentParser parser, Argument arg, String value) throws ArgumentParserException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        if (FIRST_COMMIT_DATE_SHORTHAND.equals(value)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            return Optional.of(ARBITRARY_FIRST_COMMIT_DATE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        String sinceDate \u003d extractDate(value);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return super.convert(parser, arg, sinceDate + \" 00:00:00\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 5,
      "-": 29
    }
  },
  {
    "path": "src/main/java/reposense/parser/UntilDateArgumentType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "package reposense.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "import net.sourceforge.argparse4j.inf.Argument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "import net.sourceforge.argparse4j.inf.ArgumentParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "import net.sourceforge.argparse4j.inf.ArgumentParserException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": " * Verifies and parses a string-formatted until date to a {@code Date} object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "public class UntilDateArgumentType extends DateArgumentType {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    public Optional\u003cDate\u003e convert(ArgumentParser parser, Argument arg, String value) throws ArgumentParserException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        String untilDate \u003d extractDate(value);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return super.convert(parser, arg, untilDate + \" 23:59:59\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 20
    }
  },
  {
    "path": "src/main/java/reposense/report/CommitReportJson.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.report;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.model.AuthorshipSummary;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.commits.model.AuthorDailyContribution;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.commits.model.CommitContributionSummary;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.FileType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * Class that holds the data to be serialized into JSON format in `commits.json`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommitReportJson {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e authorDailyContributionsMap;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Map\u003cAuthor, Integer\u003e authorFinalContributionMap;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Map\u003cAuthor, LinkedHashMap\u003cFileType, Integer\u003e\u003e authorFileTypeContributionMap;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Map\u003cAuthor, Float\u003e authorContributionVariance;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Map\u003cAuthor, String\u003e authorDisplayNameMap;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "     * Constructor to construct an empty commit report with the author\u0027s display name as {@code displayName}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    public CommitReportJson(String displayName) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        Author emptyAuthor \u003d Author.UNKNOWN_AUTHOR;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        authorDailyContributionsMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        authorDailyContributionsMap.put(emptyAuthor, Collections.emptyList());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        authorFinalContributionMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        authorFinalContributionMap.put(emptyAuthor, 0);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        authorFileTypeContributionMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        authorFileTypeContributionMap.put(emptyAuthor, new LinkedHashMap\u003c\u003e());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        authorContributionVariance \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        authorContributionVariance.put(emptyAuthor, (float) 0.0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        authorDisplayNameMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        authorDisplayNameMap.put(emptyAuthor, displayName);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommitReportJson(CommitContributionSummary commitSummary, AuthorshipSummary authorshipSummary) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        authorDailyContributionsMap \u003d commitSummary.getAuthorDailyContributionsMap();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        authorFinalContributionMap \u003d authorshipSummary.getAuthorFinalContributionMap();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        authorFileTypeContributionMap \u003d authorshipSummary.getAuthorFileTypeContributionMap();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        authorContributionVariance \u003d commitSummary.getAuthorContributionVariance();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        authorDisplayNameMap \u003d commitSummary.getAuthorDisplayNameMap();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 3,
      "-": 51
    }
  },
  {
    "path": "src/main/java/reposense/report/ReportGenerator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.report;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Supplier;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.gson.JsonSyntaxException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.RepoSense;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.AuthorshipReporter;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.model.AuthorshipSummary;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.commits.CommitsReporter;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.commits.model.CommitContributionSummary;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitClone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitLsTree;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitRevParse;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitShortlog;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.exception.GitBranchException;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.exception.GitCloneException;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.exception.InvalidFilePathException;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoConfiguration;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoLocation;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.StandaloneConfig;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.parser.SinceDateArgumentType;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.parser.StandaloneConfigJsonParser;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "import reposense.report.exception.NoAuthorsWithCommitsFoundException;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.LogsManager;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.FileUtil;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.ProgressTracker;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains report generation related functionalities."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "public class ReportGenerator {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REPOSENSE_CONFIG_FOLDER \u003d \"_reposense\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REPOSENSE_CONFIG_FILE \u003d \"config.json\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsManager.getLogger(ReportGenerator.class);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    // zip file which contains all the report template files"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String TEMPLATE_FILE \u003d \"/templateZip.zip\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_INVALID_CONFIG_JSON \u003d \"%s Ignoring the config provided by %s (%s).\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_ERROR_CREATING_DIRECTORY \u003d"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Error has occurred while creating repo directory for %s (%s), will skip this repo.\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_NO_STANDALONE_CONFIG \u003d \"%s (%s) does not contain a standalone config file.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_IGNORING_STANDALONE_CONFIG \u003d \"Ignoring standalone config file in %s (%s).\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_MALFORMED_STANDALONE_CONFIG \u003d \"%s/%s/%s is malformed for %s (%s).\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_NO_AUTHORS_SPECIFIED \u003d"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            \"%s (%s) has no authors specified, using all authors by default.\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final String MESSAGE_NO_AUTHORS_WITH_COMMITS_FOUND \u003d"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            \"No authors found with commits for %s (%s).\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_START_ANALYSIS \u003d \"Analyzing %s (%s)...\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_COMPLETE_ANALYSIS \u003d \"Analysis of %s (%s) completed!\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_REPORT_GENERATED \u003d \"The report is generated at %s\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_BRANCH_DOES_NOT_EXIST \u003d \"Branch %s does not exist in %s! Analysis terminated.\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_ERROR_CLONING \u003d \"Failed to clone from %s\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_BRANCH_DOES_NOT_EXIST \u003d \"Branch \\\"%s\\\" does not exist.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_BRANCH_CONTAINS_ILLEGAL_FILE_PATH \u003d"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Branch contains file paths with illegal characters and not analyzable.\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_ERROR_CLONING_OR_BRANCHING \u003d \"Exception met while cloning or checking out.\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_UNEXPECTED_ERROR \u003d \"Unexpected error stack trace for %s:\\n\u003e%s\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Date earliestSinceDate \u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ProgressTracker progressTracker \u003d null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates the authorship and commits JSON file for each repo in {@code configs} at {@code outputPath}, as"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * well as the summary JSON file of all the repos."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the list of file paths that were generated."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if templateZip.zip does not exists in jar file."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cPath\u003e generateReposReport(List\u003cRepoConfiguration\u003e configs, String outputPath,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            String generationDate, Date cliSinceDate, Date untilDate,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isSinceDateProvided, boolean isUntilDateProvided,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            Supplier\u003cString\u003e reportGenerationTimeProvider) throws IOException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        prepareTemplateFile(outputPath);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        earliestSinceDate \u003d null;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        progressTracker \u003d new ProgressTracker(configs.size());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPath\u003e reportFoldersAndFiles \u003d cloneAndAnalyzeRepos(configs, outputPath);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        Date reportSinceDate \u003d (cliSinceDate.equals(SinceDateArgumentType.ARBITRARY_FIRST_COMMIT_DATE))"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                ? earliestSinceDate : cliSinceDate;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional\u003cPath\u003e summaryPath \u003d FileUtil.writeJsonFile("
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                new SummaryJson(configs, generationDate, reportSinceDate, untilDate, isSinceDateProvided,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                        isUntilDateProvided, RepoSense.getVersion(), ErrorSummary.getInstance().getErrorList(),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                        reportGenerationTimeProvider.get()),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                getSummaryResultPath(outputPath));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        summaryPath.ifPresent(reportFoldersAndFiles::add);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(String.format(MESSAGE_REPORT_GENERATED, outputPath));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        return reportFoldersAndFiles;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * Copies the template file to the specified {@code outputPath} for the repo report to be generated."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if template resource is not found."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void prepareTemplateFile(String outputPath) throws IOException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        InputStream is \u003d RepoSense.class.getResourceAsStream(TEMPLATE_FILE);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.copyTemplate(is, outputPath);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     * Groups {@code RepoConfiguration} with the same {@code RepoLocation} together so that they are only cloned once."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Map\u003cRepoLocation, List\u003cRepoConfiguration\u003e\u003e groupConfigsByRepoLocation("
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cRepoConfiguration\u003e configs) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cRepoLocation, List\u003cRepoConfiguration\u003e\u003e repoLocationMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        for (RepoConfiguration config : configs) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            RepoLocation location \u003d config.getLocation();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!repoLocationMap.containsKey(location)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                repoLocationMap.put(location, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            repoLocationMap.get(location).add(config);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        return repoLocationMap;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     * Clone, analyze and generate the report for repositories in {@code repoLocationMap}."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "     * Performs analysis and report generation of each repository in parallel with the cloning of the next repository."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A list of paths to the JSON report files generated for each repository."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cPath\u003e cloneAndAnalyzeRepos(List\u003cRepoConfiguration\u003e configs, String outputPath) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cRepoLocation, List\u003cRepoConfiguration\u003e\u003e repoLocationMap \u003d groupConfigsByRepoLocation(configs);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        RepoCloner repoCloner \u003d new RepoCloner();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        RepoLocation clonedRepoLocation \u003d null;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cRepoLocation\u003e repoLocationList \u003d new ArrayList\u003c\u003e(repoLocationMap.keySet());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        RepoLocation currRepoLocation \u003d repoLocationList.get(0);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        repoCloner.cloneBare(repoLocationMap.get(currRepoLocation).get(0));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int index \u003d 1; index \u003c\u003d repoLocationList.size(); index++) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            RepoLocation nextRepoLocation \u003d (index \u003c repoLocationList.size()) ? repoLocationList.get(index) : null;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            clonedRepoLocation \u003d repoCloner.getClonedRepoLocation();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            // Clones the next location while analyzing the previously cloned repos in parallel."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            if (nextRepoLocation !\u003d null) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                repoCloner.cloneBare(repoLocationMap.get(nextRepoLocation).get(0));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            if (clonedRepoLocation \u003d\u003d null) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                handleCloningFailed(configs, currRepoLocation);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                generatedFiles.addAll(analyzeRepos(outputPath, configs, repoLocationMap.get(clonedRepoLocation),"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                        repoCloner.getCurrentRepoDefaultBranch()));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            currRepoLocation \u003d nextRepoLocation;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        repoCloner.cleanup();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        return generatedFiles;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "     * Analyzes all repos in {@code configsToAnalyze} and generates their report."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "     * Also removes {@code configsToAnalyze} that failed to analyze from {@code configs}."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A list of paths to the JSON report files generated for the repositories in {@code configsToAnalyze}."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cPath\u003e analyzeRepos(String outputPath, List\u003cRepoConfiguration\u003e configs,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cRepoConfiguration\u003e configsToAnalyze, String defaultBranch) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        Iterator\u003cRepoConfiguration\u003e itr \u003d configsToAnalyze.iterator();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        while (itr.hasNext()) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            progressTracker.incrementProgress();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            RepoConfiguration configToAnalyze \u003d itr.next();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            configToAnalyze.updateBranch(defaultBranch);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            Path repoReportDirectory \u003d Paths.get(outputPath, configToAnalyze.getOutputFolderName());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info("
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                    String.format(progressTracker.getProgress() + \" \""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                            + MESSAGE_START_ANALYSIS, configToAnalyze.getLocation(), configToAnalyze.getBranch()));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                GitRevParse.assertBranchExists(configToAnalyze, FileUtil.getBareRepoPath(configToAnalyze));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                GitLsTree.validateFilePaths(configToAnalyze, FileUtil.getBareRepoPath(configToAnalyze));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                GitClone.cloneFromBareAndUpdateBranch(Paths.get(FileUtil.REPOS_ADDRESS), configToAnalyze);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                FileUtil.createDirectory(repoReportDirectory);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                generatedFiles.addAll(analyzeRepo(configToAnalyze, repoReportDirectory.toString()));"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException ioe) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                String logMessage \u003d String.format(MESSAGE_ERROR_CREATING_DIRECTORY,"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                        configToAnalyze.getLocation(), configToAnalyze.getBranch());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.log(Level.WARNING, logMessage, ioe);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (GitBranchException gbe) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.log(Level.SEVERE, String.format(MESSAGE_BRANCH_DOES_NOT_EXIST,"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                        configToAnalyze.getBranch(), configToAnalyze.getLocation()), gbe);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                handleAnalysisFailed(configs, configToAnalyze,"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                        String.format(LOG_BRANCH_DOES_NOT_EXIST, configToAnalyze.getBranch()));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (InvalidFilePathException ipe) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                handleAnalysisFailed(configs, configToAnalyze, LOG_BRANCH_CONTAINS_ILLEGAL_FILE_PATH);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (GitCloneException gce) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                handleAnalysisFailed(configs, configToAnalyze, LOG_ERROR_CLONING_OR_BRANCHING);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (NoAuthorsWithCommitsFoundException nafe) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.log(Level.WARNING, String.format(MESSAGE_NO_AUTHORS_WITH_COMMITS_FOUND,"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                        configToAnalyze.getLocation(), configToAnalyze.getBranch()));"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                generatedFiles.addAll(generateEmptyRepoReport(repoReportDirectory.toString(),"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                        Author.NAME_NO_AUTHOR_WITH_COMMITS_FOUND));"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                generateEmptyRepoReport(repoReportDirectory.toString(), Author.NAME_NO_AUTHOR_WITH_COMMITS_FOUND);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                e.printStackTrace(new PrintWriter(sw));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.log(Level.SEVERE, sw.toString());"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                handleAnalysisFailed(configs, configToAnalyze,"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                        String.format(LOG_UNEXPECTED_ERROR, configToAnalyze.getLocation(), sw.toString()));"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        return generatedFiles;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "     * Analyzes repo specified by {@code config} and generates the report."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A list of paths to the JSON report files generated for the repo specified by {@code config}."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cPath\u003e analyzeRepo("
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            RepoConfiguration config, String repoReportDirectory) throws NoAuthorsWithCommitsFoundException {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        // preprocess the config and repo"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        updateRepoConfig(config);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        updateAuthorList(config);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        CommitContributionSummary commitSummary \u003d CommitsReporter.generateCommitSummary(config);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        AuthorshipSummary authorshipSummary \u003d AuthorshipReporter.generateAuthorshipSummary(config);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPath\u003e generatedFiles \u003d generateIndividualRepoReport(repoReportDirectory, commitSummary, authorshipSummary);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(String.format(MESSAGE_COMPLETE_ANALYSIS, config.getLocation(), config.getBranch()));"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        return generatedFiles;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates {@code config} with configuration provided by repository if exists."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void updateRepoConfig(RepoConfiguration config) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configJsonPath \u003d"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                Paths.get(config.getRepoRoot(), REPOSENSE_CONFIG_FOLDER, REPOSENSE_CONFIG_FILE).toAbsolutePath();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Files.exists(configJsonPath)) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(String.format(MESSAGE_NO_STANDALONE_CONFIG, config.getLocation(), config.getBranch()));"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        if (config.isStandaloneConfigIgnored()) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(String.format(MESSAGE_IGNORING_STANDALONE_CONFIG, config.getLocation(), config.getBranch()));"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(configJsonPath);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            config.update(standaloneConfig);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (JsonSyntaxException jse) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(String.format(MESSAGE_MALFORMED_STANDALONE_CONFIG, config.getDisplayName(),"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "                    REPOSENSE_CONFIG_FOLDER, REPOSENSE_CONFIG_FILE, config.getLocation(), config.getBranch()));"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IllegalArgumentException iae) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(String.format(MESSAGE_INVALID_CONFIG_JSON,"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                    iae.getMessage(), config.getLocation(), config.getBranch()));"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError("
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "                    \"This exception should not happen as we have performed the file existence check.\");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "     * Find and update {@code config} with all the author identities if author list is empty."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "     * Also removes ignored authors from author list."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static void updateAuthorList(RepoConfiguration config) throws NoAuthorsWithCommitsFoundException {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        if (config.getAuthorList().isEmpty()) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(String.format(MESSAGE_NO_AUTHORS_SPECIFIED, config.getLocation(), config.getBranch()));"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cAuthor\u003e authorList \u003d GitShortlog.getAuthors(config);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            if (authorList.isEmpty()) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                throw new NoAuthorsWithCommitsFoundException();"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "            config.setAuthorList(authorList);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        config.removeIgnoredAuthors();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds {@code configs} that were not successfully cloned from {@code failedRepoLocation}"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "     * into the list of errors in the summary report and removes them from the list of {@code configs}."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void handleCloningFailed(List\u003cRepoConfiguration\u003e configs, RepoLocation failedRepoLocation) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cRepoConfiguration\u003e failedConfigs \u003d configs.stream()"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(config -\u003e config.getLocation().equals(failedRepoLocation))"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        handleFailedConfigs(configs, failedConfigs, String.format(LOG_ERROR_CLONING, failedRepoLocation));"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds {@code failedConfig} that failed analysis into the list of errors in the summary report and"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "     * removes {@code failedConfig} from the list of {@code configs}."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void handleAnalysisFailed(List\u003cRepoConfiguration\u003e configs, RepoConfiguration failedConfig,"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "            String errorMessage) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        handleFailedConfigs(configs, Collections.singletonList(failedConfig), errorMessage);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds {@code failedConfigs} that failed cloning/analysis into the list of errors in the summary report and"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "     * removes {@code failedConfigs} from the list of {@code configs}."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void handleFailedConfigs("
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cRepoConfiguration\u003e configs, List\u003cRepoConfiguration\u003e failedConfigs, String errorMessage) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        Iterator\u003cRepoConfiguration\u003e itr \u003d configs.iterator();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        while (itr.hasNext()) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "            RepoConfiguration config \u003d itr.next();"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "            if (failedConfigs.contains(config)) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                ErrorSummary.getInstance().addErrorMessage(config.getDisplayName(), errorMessage);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                itr.remove();"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates a report at the {@code repoReportDirectory}."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A list of paths to the JSON report files generated for this empty report."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cPath\u003e generateEmptyRepoReport(String repoReportDirectory, String displayName) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        CommitReportJson emptyCommitReportJson \u003d new CommitReportJson(displayName);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.writeJsonFile(emptyCommitReportJson, getIndividualCommitsPath(repoReportDirectory))"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                .ifPresent(generatedFiles::add);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.writeJsonFile(Collections.emptyList(), getIndividualAuthorshipPath(repoReportDirectory))"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "                .ifPresent(generatedFiles::add);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        return generatedFiles;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates a report for a single repository at {@code repoReportDirectory}."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A list of paths to the JSON report files generated for this report."
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cPath\u003e generateIndividualRepoReport("
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "            String repoReportDirectory, CommitContributionSummary commitSummary, AuthorshipSummary authorshipSummary) {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        CommitReportJson commitReportJson \u003d new CommitReportJson(commitSummary, authorshipSummary);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.writeJsonFile(commitReportJson, getIndividualCommitsPath(repoReportDirectory))"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "                .ifPresent(generatedFiles::add);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.writeJsonFile(authorshipSummary.getFileResults(), getIndividualAuthorshipPath(repoReportDirectory))"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "                .ifPresent(generatedFiles::add);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        return generatedFiles;"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String getSummaryResultPath(String targetFileLocation) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        return targetFileLocation + \"/\" + SummaryJson.SUMMARY_JSON_FILE_NAME;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String getIndividualAuthorshipPath(String repoReportDirectory) {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        return repoReportDirectory + \"/authorship.json\";"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String getIndividualCommitsPath(String repoReportDirectory) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "        return repoReportDirectory + \"/commits.json\";"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void setEarliestSinceDate(Date newEarliestSinceDate) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        if (earliestSinceDate \u003d\u003d null || newEarliestSinceDate.before(earliestSinceDate)) {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "            earliestSinceDate \u003d newEarliestSinceDate;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 13,
      "-": 376
    }
  },
  {
    "path": "src/main/java/reposense/report/SummaryJson.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.report;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoConfiguration;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the structure of summary.json file in reposense-report folder."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class SummaryJson {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String SUMMARY_JSON_FILE_NAME \u003d \"summary.json\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String repoSenseVersion;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String reportGeneratedTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String reportGenerationTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final List\u003cRepoConfiguration\u003e repos;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private final List\u003cMap\u003cString, String\u003e\u003e errorList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Date sinceDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Date untilDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private final boolean isSinceDateProvided;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private final boolean isUntilDateProvided;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public SummaryJson(List\u003cRepoConfiguration\u003e repos, String reportGeneratedTime, Date sinceDate, Date untilDate,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isSinceDateProvided, boolean isUntilDateProvided, String repoSenseVersion,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cMap\u003cString, String\u003e\u003e errorList, String reportGenerationTime) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.repos \u003d repos;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.reportGeneratedTime \u003d reportGeneratedTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.reportGenerationTime \u003d reportGenerationTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sinceDate \u003d sinceDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.untilDate \u003d untilDate;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.isSinceDateProvided \u003d isSinceDateProvided;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.isUntilDateProvided \u003d isUntilDateProvided;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.repoSenseVersion \u003d repoSenseVersion;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.errorList \u003d errorList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 4,
      "-": 34
    }
  },
  {
    "path": "src/main/java/reposense/report/exception/NoAuthorsWithCommitsFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "package reposense.report.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": " * Signals that no authors with commits were found from a specific repository."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "public class NoAuthorsWithCommitsFoundException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 7
    }
  },
  {
    "path": "src/main/java/reposense/util/TimeUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "package reposense.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": " * Contains time related functionalities."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "public class TimeUtil {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static Long startTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "     * Sets the {@code startTime} to be the current time"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    public static void startTimer() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        startTime \u003d System.nanoTime();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "     * Returns the formatted elapsed time from {@code startTime} until current time"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getElapsedTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        long endTime \u003d System.nanoTime();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        double elapsedTime \u003d (double) (endTime - startTime) / 1_000_000_000.0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        int elapsedHours \u003d (int) elapsedTime / 3600;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        int elapsedMinutes \u003d (int) (elapsedTime % 3600) / 60;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        double elapsedSeconds \u003d elapsedTime % 60;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        String formattedElapsedTime \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        if (elapsedHours \u003e 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            formattedElapsedTime +\u003d String.format(\" %d hour(s)\", elapsedHours);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        if (elapsedMinutes \u003e 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            formattedElapsedTime +\u003d String.format(\" %d minute(s)\", elapsedMinutes);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        formattedElapsedTime +\u003d String.format(\" %.2f second(s)\", elapsedSeconds);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return formattedElapsedTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the formatted elapsed time from {@code startTime} until current time,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * with an additional explanatory string."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getElapsedTimeMessage() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"Elapsed processing time:\" + getElapsedTime();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 33,
      "-": 13
    }
  },
  {
    "path": "src/systemtest/resources/30daysFromUntilDate/expected/reposense_testrepo-Alpha_master/commits.json",
    "fileType": "json",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"authorDailyContributionsMap\": {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"-\": []"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  },"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"authorFinalContributionMap\": {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"-\": 0"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  },"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \"authorFileTypeContributionMap\": {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"-\": {}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  },"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"authorContributionVariance\": {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"-\": 0.0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  },"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"authorDisplayNameMap\": {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"-\": \"NO AUTHOR WITH COMMITS FOUND WITHIN THIS PERIOD OF TIME\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 14,
      "-": 3
    }
  },
  {
    "path": "src/systemtest/resources/30daysFromUntilDate/expected/summary.json",
    "fileType": "json",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \"reportGeneratedTime\": \"Tue Jul 24 17:45:15 SGT 2018\","
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \"reportGenerationTime\": \"15 second(s)\","
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \"repos\": ["
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "      \"location\": {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        \"location\": \"https://github.com/reposense/testrepo-Alpha.git\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \"repoName\": \"testrepo-Alpha\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \"organization\": \"reposense\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \"branch\": \"master\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      \"displayName\": \"reposense/testrepo-Alpha[master]\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "      \"outputFolderName\": \"reposense_testrepo-Alpha_master\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      \"location\": {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        \"location\": \"https://github.com/reposense/testrepo-Beta.git\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        \"repoName\": \"testrepo-Beta\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        \"organization\": \"reposense\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      \"branch\": \"master\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \"displayName\": \"reposense/testrepo-Beta[master]\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      \"outputFolderName\": \"reposense_testrepo-Beta_master\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      \"location\": {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \"location\": \"https://github.com/reposense/testrepo-Charlie.git\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        \"repoName\": \"testrepo-Charlie\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \"organization\": \"reposense\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \"branch\": \"master\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \"displayName\": \"reposense/testrepo-Charlie[master]\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      \"outputFolderName\": \"reposense_testrepo-Charlie_master\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      \"location\": {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        \"location\": \"https://github.com/reposense/testrepo-Delta.git\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        \"repoName\": \"testrepo-Delta\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        \"organization\": \"reposense\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      \"branch\": \"master\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      \"displayName\": \"reposense/testrepo-Delta[master]\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      \"outputFolderName\": \"reposense_testrepo-Delta_master\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  \"errorList\": ["
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      \"repoName\": \"reposense/testrepo-Delta[nonExistentBranch]\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      \"errorMessage\": \"Branch \\\"nonExistentBranch\\\" does not exist.\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  \"sinceDate\": \"2017-10-01\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"untilDate\": \"2017-11-01\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"isSinceDateProvided\": false,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"isUntilDateProvided\": true"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 3,
      "-": 53
    }
  },
  {
    "path": "src/systemtest/resources/dateRange/expected/reposense_testrepo-Alpha_master/commits.json",
    "fileType": "json",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"authorDailyContributionsMap\": {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"-\": []"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  },"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"authorFinalContributionMap\": {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"-\": 0"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  },"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \"authorFileTypeContributionMap\": {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"-\": {}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  },"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"authorContributionVariance\": {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"-\": 0.0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  },"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"authorDisplayNameMap\": {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    \"-\": \"NO AUTHOR WITH COMMITS FOUND WITHIN THIS PERIOD OF TIME\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 14,
      "-": 3
    }
  },
  {
    "path": "src/systemtest/resources/dateRange/expected/summary.json",
    "fileType": "json",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \"reportGeneratedTime\": \"Tue Jul 24 17:45:15 SGT 2018\","
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \"reportGenerationTime\": \"15 second(s)\","
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \"repos\": ["
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "      \"location\": {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        \"location\": \"https://github.com/reposense/testrepo-Alpha.git\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \"repoName\": \"testrepo-Alpha\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \"organization\": \"reposense\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \"branch\": \"master\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      \"displayName\": \"reposense/testrepo-Alpha[master]\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "      \"outputFolderName\": \"reposense_testrepo-Alpha_master\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      \"location\": {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        \"location\": \"https://github.com/reposense/testrepo-Beta.git\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        \"repoName\": \"testrepo-Beta\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        \"organization\": \"reposense\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      \"branch\": \"master\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \"displayName\": \"reposense/testrepo-Beta[master]\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      \"outputFolderName\": \"reposense_testrepo-Beta_master\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      \"location\": {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \"location\": \"https://github.com/reposense/testrepo-Charlie.git\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        \"repoName\": \"testrepo-Charlie\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \"organization\": \"reposense\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \"branch\": \"master\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \"displayName\": \"reposense/testrepo-Charlie[master]\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      \"outputFolderName\": \"reposense_testrepo-Charlie_master\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      \"location\": {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        \"location\": \"https://github.com/reposense/testrepo-Delta.git\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        \"repoName\": \"testrepo-Delta\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        \"organization\": \"reposense\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      \"branch\": \"master\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      \"displayName\": \"reposense/testrepo-Delta[master]\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      \"outputFolderName\": \"reposense_testrepo-Delta_master\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  \"errorList\": ["
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      \"repoName\": \"reposense/testrepo-Delta[nonExistentBranch]\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      \"errorMessage\": \"Branch \\\"nonExistentBranch\\\" does not exist.\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  \"sinceDate\": \"2017-09-01\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"untilDate\": \"2017-10-30\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"isSinceDateProvided\": true,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"isUntilDateProvided\": true"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 3,
      "-": 53
    }
  },
  {
    "path": "src/systemtest/resources/sinceBeginningDateRange/expected/reposense_testrepo-Delta_master/commits.json",
    "fileType": "json",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \"authorDailyContributionsMap\": {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \"lithiumlkid\": ["
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 2,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 2,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-01\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"5c1caec2ee5611a938becb727933e30156fdbc38\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Updated repoUrl\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 3,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 4,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-02\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"4cada5456502cbba544ea56ac4ff38f0944345b4\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Updated travis url and removed codacy badge\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"78e045559e69a4326071fea9522e9d99da3522d4\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Updated coveralls Url\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"8e7f50654fab252b5e0badafae25e2b80a490b89\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Updated appveyor url\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 68,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 2,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-09\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"0821b695403037f7d809269543c12a16321e5665\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Added user stories to developer guide.\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 68,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 46,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 2,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-15\","
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"1ed8b502950c3b5d41e2917b13f0d2a9b67c80e3\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Updated userguide for v2.0\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 13,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"313506e09f3aab63544d2d2757d26aa774ebaa74\","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Updated developer guide for v2.0\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 33,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 10,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 9,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-23\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"6f6c76023def0eafc2fa90e9e2a393d9990b4166\","
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"update user guide\","
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 8,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 7"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"937bfbba3665e7dc5dbff682e8539cf870055246\","
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"-Added new command strings to autocomplete -Fix correct use of []\","
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 2,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 2,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-30\","
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"34ed7be74295dcd48520c40e1254de526057b1e8\","
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"update userguide\","
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 1,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 1,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-09\","
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"dacdd3a631a8690b1dea18fd59bcfe2aeb25cabd\","
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"fix help multiple windows bug fix After clicking on tab after entering list command it doesn\\u0027t turn red even tho it has no extra parameters fix export command in uder guide\","
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 56,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 5,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-10\","
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"845a4384071fe901cd40c84ae322f846a6b346d1\","
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Added PPP and change prefix for avatar\","
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 55,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 4"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"53058c48ce9f286ad865abf5763f8e6063cdffb3\","
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add newline\","
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 60,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 46,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-11\","
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"5741509ed275ebe2bb1488f3ca618f72110b8648\","
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Update ppp and some collate tags\","
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 42,"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 28"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"90bd6deffdd8b267090dca12f645d8f373db06c7\","
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Added circleci status badge\","
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"500d7017b4a498f3dd95a80901a6487306f156f5\","
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"fix circle ci badge\","
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"dfa7bbde76b65cefc9b991127d1a387e4fc2f8ca\","
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Update userguide and collate\","
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 16,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 17"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 73,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 16,"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-12\","
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"ecd417c0c1fcb111114f7a7ba34ad85af8d6295c\","
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Update quick start\","
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 72,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 14"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"c3a7e736cbb9d65a02ac2be1a6742bf196177ac7\","
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Fix checkstyle\","
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 76,"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 64,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-13\","
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"7d8ed3452ba2152ee2e792e969cfddcf32516f35\","
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Update quick start\","
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 74,"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 62"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"d918b5597f82b7c4b1be70b762bbbacdd34080f0\","
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Fix Ui guide\","
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"85ce9496dcee768ed1a6900dd420dcddfc427403\","
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"fix create image\","
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            \"tags\": ["
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "              \"v1.5rc\""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            ],"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 2,"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 0,"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-14\","
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"6bed3ffa42dba02927f8d2878e6b423cdee2fd89\","
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"no message\","
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 154,"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 15,"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-15\","
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"eda516d6ffde5c58ea12e7b4585487cde1e686ee\","
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Remove line\","
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 0,"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"ae85e47558d4b6493b8b5f6e0593ebf569535e5b\","
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Change privacy and key information in fundamentals\","
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 5,"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 3"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"3bb5fe1e8e7fa021d3d435aef1fbe6fb8f9916a1\","
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Changed Readme\","
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"2a843e7afc0419c8e709005a57533fb81f90e972\","
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Added player component to dg\","
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 129,"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"892f1cc40539f189fd837ca2c0062a91a742e92c\","
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Updated dev guide\","
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 18,"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 4"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"fbe8d0d5160127af3a276b0997892dc98db2de65\","
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Fix end tag\","
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"7ee7a7e700fbb6cec77e80128bdb0e000da6d8ca\","
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Removed introduction\","
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            \"tags\": ["
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "              \"v1.5\""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            ],"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 0,"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    ],"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    \"lohtianwei\": ["
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 102,"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 1,"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-09\","
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"e4ef52408f20318ae565f40886d938aed329086f\","
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Minor edits to target user profile and value proposition in DEV GUIDE\","
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 3,"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"15470f7ade79e0147d032e15c4895b4938702e4f\","
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"AddressBookParser:Add alias for Addcommand\","
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 9,"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"95abeede889a31caf076b6377b327e43d6bc2cee\","
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"AddressBookParser: Add alias for EditCommand\","
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 11,"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"bacc0b716fb216f2d21bc347410985e30161347b\","
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"AdressBookParser: Add alias for selectCommand\","
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 9,"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"ef2dd3f68b07ece04005fd5c4c45f4967cc70963\","
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"AddressBookParser: Add alias for DeleteCommand\","
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 9,"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"f7e839f0a73bfec04117a2264cfc8d94a927d514\","
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"AddressBookParser: Add alias for clearCommand\","
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 8,"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"b4c2ecca4c0ce629b0aeba75e4b3b972fbe85e0b\","
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"AdressBookParser: Add alias for FindCommand\","
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 10,"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"65ab45d0a89ba38567c095b10db894747f603a2e\","
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"AddressBookParser: Add alias for listCommand\","
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 8,"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"b086d334c5db73294b7c76436af46e3e4879102c\","
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"AddressBookParser: Add alias for historyCommand\","
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 8,"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"486b9ca9ff65ac3b45d43d43451e20bf03b9ed04\","
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"AddressBookParser: Add alias for undoCommand\","
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 8,"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"dd853a209df4b4810ac5f669b5babb8743cb7a5a\","
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"AddressBookParser: Add alias for redoCommand\","
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 8,"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"e044c7f70e49fac1fbd33b402be5ba201838a9b0\","
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"UserGuide: Add command aliases\","
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 11,"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 196,"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 13,"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-15\","
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"55842f5443086411149c45f58388868e2e4ea376\","
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Added sort function\","
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 196,"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 13"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 7,"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 7,"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-16\","
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"56fe3371acccdb958b83fb14c02b5eb8d8020d3a\","
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Edited userguide features portion 3.4-3.6\","
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 7,"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 7"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 51,"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 7,"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-19\","
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"379a1949e354fdbc3636172db5130558cc7afc8a\","
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Edits done to sort function based on Jordan\\u0027s comments\","
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"933235a2f8c458c4b57beac44ac1ff4fd853ea8f\","
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Updated user guide for feature sort. Added user guide for feature bestXI and set fields to private\","
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 29,"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 5"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"6b264039b2138bd5a99455d162c11f9a94f68c39\","
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"DevGuide: Implementation\","
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 14,"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"a070b6117343c78d4444e0824e38b536427c8e55\","
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"DevGuide:Implementation for showBest added\","
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 7,"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 9,"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 4,"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-20\","
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"342022a12e1b296dbde96a0d6c171f93c9ed06a6\","
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Minor edit to sortCommand: Change usage example.\","
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"Added model stub for sort function\\n\","
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 8,"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"6f19ba6513957b5e27312970fbf933707db57985\","
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Removed additional line break in sort command\","
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 258,"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 0,"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-21\","
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"806daf429c576f8f53d2cdc602bc06b4c4600a1e\","
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Added test cases for Sort function.\","
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 258,"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 134,"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 97,"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-22\","
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"e1a2f9fc13f0f7de5732559e8ef9f380a2ebcca8\","
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Fixed checkstyle error for Travis\","
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 40,"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 29"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"867396b5927cf33a62d9af0d8cf2b7f264c34555\","
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Removed trailing whitespaces according to Travis checks\","
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 4,"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 4"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"fc35bc155ae60091d188b456d22fa94f031adee8\","
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Edited sort tests to appease Travis\","
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 25,"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 26"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"71266a9804ed611124ab958045d7595d289a339a\","
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"edit test files for travis testing\","
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 15,"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 15"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"e6466a174901bc27886887b897cd0afcb76a521a\","
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Made minor changes to sort command and it\\u0027s parser to throw appropriate exceptions to allow test cases to pass.\","
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 25,"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"a334ec531a61061a28a9de2c6982f0a77214d7c5\","
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"SortCommandParserTest: Removed redundant whitespaces\","
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 13,"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 13"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"fe087b9ecf042ce5aaa256d27ff879641968fbfa\","
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Travis checkstyle edit\","
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"87888d4c9579336198e1c2f49272b7c3bd5bc4ab\","
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Removed 1 test case temporarily for sortCommand\","
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 3,"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 3"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"fd406f4169c0b5ceb89374862ca6c0fa9a7fc728\","
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Minor checkstyle edit for sort command parser test\","
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 7,"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 6"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 107,"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 0,"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-23\","
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"7fd47b674bffbf2f8c0d42b23e70c50aa6d5a24d\","
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"DevGuide: Updated implementation for Sort Command\","
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 107,"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 65,"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 82,"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-30\","
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"4526e0910ebb486fe690b4e417bfbccd3092a85d\","
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Minor updates to Toggleprivacy. Privacy toggles and changes in addressbook.xml but display still shows plaintext\","
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 45,"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 61"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"eac0df1a1d0fafb28f4828ee204790350756848b\","
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Minor change to xmladapated person for toggle privacy function to save permanently\","
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 20,"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 21"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 43,"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 8,"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-31\","
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"f3e6adc221749d6819b8602f6ea46320771933cc\","
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Minor update to UI portion Person Card to ensure private fields do not show plaintext in panel list\","
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 25,"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 4"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"12f95796f6a7b2e04e7d13652ffd768e01204c12\","
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Minor update to UI portion PlayerDetails to ensure private fields are not displayed in side panel\","
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 18,"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 4"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 212,"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 61,"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-05\","
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"07ad8a7cb4a0da747a853e37001d2e1b0bc7046a\","
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Updated TogglePrivacyCommand to include new fields added. PersonCard updated to ensure privated fields cannot be seen. XMLAdaptedPerson updated to save Rating privacy Changes made to Rating Class to allow privacy setting\","
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 81,"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 5"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"e78b54c2e63826714795cc9b31d1cc02368aa427\","
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"no message\","
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 0,"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 3"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"0652617c03d5bf99ef04b79346ea23b7ecee15df\","
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Resolve conflicts\","
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 0,"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 4"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"6be5cc5d0d0995d2905f3d3081822018ca64e440\","
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Minor update to command usage\","
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 4,"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"27b85087afcf2000bd8f4cece8d6f445c2b5f7ee\","
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Fix Checkstyle errors\","
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 44,"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 18"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"4550d779031456ab2cdc0488d7f907ee8492f152\","
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Fix checkstyle\","
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 3,"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"6ffe0468a6f61777ba70aa594fada6a92148e4a6\","
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Checkstyle\","
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 5,"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 3"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"3debb89f556207d50fbede51b22b2dae534d29ed\","
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Checkstyle yet again\","
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 7,"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"3a28cab3f00ed710d0d2aa17302c5c68f3c8fc9c\","
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Updated sort command to include fields: JerseyNum, Position and Rating. Updated sort command to exclude field: Phone\","
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 28,"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 5"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"368b06813203f6397e61216683271efe50da7b63\","
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Removed outdated test case\","
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 18"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"f8a1fdf20370da4d03c39ad19481ad435609f4aa\","
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Anotonate for collate\","
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 15,"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"a75099d80a5ebf195c93a9f9f3edf78d999790a5\","
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Userguide: Updated Sort feature and Toggle Privacy Feature\","
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 23,"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 330,"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 80,"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-10\","
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"4fe9716a6d09ec1794c7d5e93e7c32e506e88fbe\","
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Added Key Command. Toggles between locking and unlocking of the MTM. In a locked state, MTM has limited functionality: Change Theme, Find, List, Key, View, Exit, Help, Sort. Unlocked state has full functionality.\","
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 286,"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 72"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"d3561646c124d32f19bf68f052279407767fc25a\","
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Edited Key command to show current lock state when no password is entered\","
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 14,"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 3"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"c4e606b177e85be9207aa8e5085aa08308aa0ca2\","
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Checkstyles\","
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 4,"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 5"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"2d8d475bee1404af52c0572422a7cdb32bec0b8b\","
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Checkstyle again\","
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 3,"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"a10d1066dc3de1db7cd8d3dd1798b6c6584de9a6\","
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Checkstyle luvit\","
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 23,"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 48,"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 3,"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-11\","
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"6df9792246dd7e46d4dbc81f38f0f95311af5a24\","
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Minor edits to UG features portion\","
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 48,"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 3"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 419,"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 85,"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-12\","
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"741c2631fca2f084d0d083d5607e985483a69381\","
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"DevGuide: Updated sort, toggle privacy and lock MTM\","
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 253,"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 23"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"547828b327324784581897b933e477227a972789\","
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Collate, PPP\","
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 166,"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 62"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 357,"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 55,"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-14\","
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"f377bc7b5ff27a0bc1c11177d2cb7ecffaa2ffa2\","
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Added Sort Sequence Diagram and Key activity diagram to DevGuide\","
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 17,"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 10"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"e194b3980139cd66cd9bb22d5934cd74a75fc07f\","
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Minor edit to Key command message success to show current lock state\","
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"2a14f88387cb3da57541084f9a8ddec8817e0b4a\","
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Minor edit to sort function: When sorting, private fields will all be place together\","
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 3,"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 3"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"dff0632ae1549a66179874d42537461349ae19db\","
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Minor edit to sort command to show correct usage for sorting in descending order\","
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"ee8271bfde66db3aeb3eca84f14768a22e2dedcd\","
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Edit to DG sort portion, update code snippet\","
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 40,"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 40"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"08603d466ab8eff0f2f62b10558210e1372cf7a6\","
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Edit toggle privacy command to handle no prefix input\","
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 12,"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"1392332abce54868138114b632f72e213db45f52\","
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Test cases for Key and Toggle Privacy and their respective command parsers\","
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 272,"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"d3342cf9fcdcb0770215f09665a695885caf5e0c\","
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Added javadoc to a method in Toggle Privacy\","
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 4,"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"b07411fb021c74750f37ea8a2b6a9e2e821b0d77\","
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"Checkstyle\","
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 6,"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 6,"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 63,"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-15\","
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"8774826cf0ee7922c349cdcb3ee207586f9d1e18\","
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"no message\","
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 0,"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 4"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"625da21556a1ec353ffa7a887e4057b9807a4fba\","
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"no message\","
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 55"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"6f172199f88aca5d079a3b83a00c3a8eac257960\","
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"no message\","
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 4,"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 4"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "    ],"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "    \"codeeong\": ["
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 99,"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 15,"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-06\","
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"876e38d87523be06f3e0b6dbe063431a3f7cb74e\","
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"UI change tag color\","
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 88,"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 4"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"4a5af1f33809d7b56e529fa161faf638649ae7fe\","
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"PersonCard.java : change indentation\","
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 10,"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 10"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"1018044e372f49648530e1e18a44fcd0386809bb\","
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"UI Change : to pass tests\","
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 14,"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 3,"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-08\","
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"95f3f1cc6515986858dcaa1bdfdd3431c40ba891\","
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add NFR\","
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 14,"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 3"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 24,"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 23,"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-09\","
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"29b0282175811ab6626633735bff47ce22230f41\","
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"added newlines\","
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 4,"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 3"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"9977364558e6a3a34f91a28346ef620ea6908136\","
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"change indentation\","
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"0101b0c699395efe25d041790357cdecac0bf6f3\","
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"change indentation 2.0\","
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"4c339ec00ad957d49507456d15a71ddd6b3cc4e9\","
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"indent\","
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 16,"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 16"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"78d0aec5a88fad0eaf34a85f4db090324a23643c\","
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"change name of our product\","
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 205,"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 25,"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-14\","
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"b0a6978fddb4d0b1b2adcd91d9cda0e752a0cc90\","
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"codee v1.1 minor enhancement - set colour of tag\","
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 205,"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 25"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 23,"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 13,"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-15\","
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"75ca797b872234199d2c26813fcebcb089a5ee46\","
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"codee - add intro and 3.11-3.15\","
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 22,"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 12"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"528592114dd1420c256539d8dd065dbcda5909c5\","
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"blue-teal default colour\","
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 224,"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 70,"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-16\","
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"e1f19e270a61bfeba687bae278723d6e8e9522d1\","
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add SetCommadTest\","
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 153,"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 25"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"4f9ee6fde76b3690698d6d6e8ef6a508dfbc766c\","
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"codee - set tag colour\","
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 6,"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 24"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"6fd8313574ef7d44037dc3b4e0a6fa3461de5a2c\","
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"change indentation and checkstyle errors\","
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 22,"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 8"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"1d6978befa4c8700dd14a5e5539819ad9e1191bb\","
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add setcommand\","
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"e3c84e54d011c337c01b0bb268a90c9006801ba9\","
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"checkstyle\","
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 11"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"f2bf2585b4d096cf6636d60ece8226ef1f6ceab9\","
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add TagTests\","
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 13,"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"5d7ac4e10e0da5f3918be9e706d41968e5374623\","
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add set tag colour to storage\","
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 27,"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 16,"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 3,"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-18\","
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"6c14350bf7b14c4e629c4fd5e24637939079cf60\","
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"v1.2 update readme\","
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 16,"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 3"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 35,"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 3,"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-19\","
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"a7f73d24998ed0d25c740b59e52ff4b59d849452\","
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"1.2 update developer guide feature contribution\","
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 33,"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"363805a5dd9f088e7ca3dc93ad3c3e8b57c88ff5\","
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"change readme\","
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 0,"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 1,"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-20\","
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"2e13d3e60dfc3dd981ab794fe9e8f0429e5016f4\","
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"checkstyle\","
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 0,"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 128,"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 93,"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-21\","
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"d3fbded779ed1d8877f1434691758d6d5173f857\","
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"more checkstyle changes to setcommandTest\","
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 5,"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"bdf66e5c806d0bc9cf8d378a84213ec45d75ca31\","
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"swap import\","
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 5,"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"c3a3a0ed2deff6595bd5df86cb01bf9b244206dd\","
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"make sure all tests pass\","
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 3,"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"28e737b35db0409b3d43f4ea517866da88ade379\","
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"change browser panel to player details panel and add team panel\","
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 115,"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 88"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 91,"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 192,"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-22\","
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"0543945c49e1b0c630d279f3d37064dbd4b8963f\","
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add implementation for stc in dg\","
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 48,"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"e33b9adecdcdec549573d2964719ba85c5aaa767\","
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add set colour tag implementation into DG\","
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 32,"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 32"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"53ca8f2d8b5cc639b32dfd2a01560604214a053d\","
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"change tests for UI changes\","
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 7,"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 151"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"ab6edb053c98489bab46283f4e929333dc0d8635\","
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"checkstyle errors\","
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 3"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"2452dc105e79db6ba50bb7956978dce7eb1f6eab\","
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"more checkstyle\","
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 3,"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 6"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 3,"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 16,"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-23\","
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"94d1d8d251cc7bbe350451f6e4eb865e31d3f83e\","
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"change logo and software title\","
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 3,"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 3"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"abea5fd0859c3ec1460673bd8542cb523b638f3a\","
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"ui\","
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 0,"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 13"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 133,"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 24,"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-28\","
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"7c79b2f86ea55407fb18bb0fded1ca3d9fd8539d\","
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add XmlAdaptedTeam.java for team to be added and saved to storage\","
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 85,"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 6"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"2f7ee8725ee7013582527fce5de0b749eb733767\","
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"change tests to accommodate team (**in progress, will not pass build tests)\","
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 8,"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"dd5d18d2a798e719c7e5d56342b76f7a665c411d\","
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"link create team to ui\","
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 37,"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 15"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"ef2545a84f4f99922b2ed36669baf156a9bffe91\","
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"remove unused import\","
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 0,"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"95b7a81a3f44799366a1717836744b7a38ca96db\","
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"set spacing between team names\","
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 3,"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 3,"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 4,"
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-30\","
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"5e8185978b0bbf6040025d45e7e3645af3aac1fc\","
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"change colours of team name\","
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"9c23ec05c2d395c030fe26123060fbe732f22f92\","
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"changed date \\\"from june 2016\\\"\","
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 178,"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 41,"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-03-31\","
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"911593eb3e8d6ce9c55ecc6aa7eade6e8083c460\","
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"adding tests in progress\","
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 12,"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"4c66babd667551737ae6c90b1f697b7e244c1d30\","
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"adding tests in progress\","
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 95,"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 8"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"3b69786e861b4dde8175a3016fe457d49fc02010\","
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"git tag added for release\","
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"1909128bb74d559342771238f56c54013d6dda11\","
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add TeamDisplay tests\","
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 55,"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 11"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"826d51bcaa82d19a452bd71139e5286bdfa3f001\","
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"checkstyle errors\","
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 4,"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 5"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"5e908f146c72fa75e141367d620c2a05043249ea\","
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"fix checkstyle errors\","
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 11,"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 7"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"2db659e95be2204dadb05fa3d80b9deaab6470cb\","
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"changes after revieww\","
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 0,"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 9"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 173,"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 29,"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-01\","
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"45efc712fc1e51f9d41e40eb3871724bbc0bb66b\","
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"change colour event\","
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 173,"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 29"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 52,"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 11,"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-02\","
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"9296910d075ad19fdf32ef9ffbc448195fb95383\","
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add deselectteamevent\","
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 49,"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 3"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"e2e9dfaa92a6e7fea71e4c458299c6dfeba9e3e6\","
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"checkstyle\","
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 3,"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 8"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 227,"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 72,"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-05\","
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"8aa58eebbb221f7100446a854b24a58bf61aced9\","
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"change tests for new player details panel\","
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 29,"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 46"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"e8c26e318450c58a8fed23ad69431b91b0b3109e\","
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add light theme\","
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 14,"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 3"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"5a841951bcb6353a960f3f40b4eb1ac28278c444\","
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"collation of code into collate/Codee.md\","
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 101,"
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 6"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"4253f3af0bac048f8a3ec1098b15c8a034863ffa\","
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"checkstyle + add setcommandparsertest\","
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 8,"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 9"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"9f0468042a22ba96de744c18a64dd08f1c565f20\","
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add teamdisplay code to DG\","
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 22,"
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"945732b612004720468ac1d8c79d2b3502c0db0c\","
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"checkstyle\","
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 14,"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 5"
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"e0e136b12db3f1f26d11eab3a171239e0e77b29c\","
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add changetheme to userguide\","
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 10,"
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"2dac757302b465e5538d113b3313a6e8251b9a8f\","
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"update UI in readme and add changetheme in userguide\","
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 5,"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"5153aa3b398c278cfec6b4910dd5508dabafdf91\","
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add changethemecommand to DG\","
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 24,"
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 358,"
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 35,"
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-06\","
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"ac2fdc691d9decf6a1a7e08fdd8f5dbc853ce259\","
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"checkstyle\","
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 272,"
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 5"
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"89caa243928e0ed67a57ec09f87e62a36df1ab3d\","
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"DG\","
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 8,"
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 8"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"ff0b81d21e871524660aab10f4dd3c8a5fa5c39d\","
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add to user guide + change name of app\","
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 34,"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 22"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"5e91e747c151e32c7c4afc7d7f5eb260ebe69020\","
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add toggle privacy event handling\","
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 44,"
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 31,"
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 25,"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-07\","
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"a146f9f6fe7c61a98f1d66a779550c3532fd86ab\","
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"event handler for remarks\","
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 17,"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 15"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"4cefb7f483aff3fa751fab7e902bba0be6b29f8a\","
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add ChangeTheme Command and tests, with change in user guide\","
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 11,"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 5"
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"80f4d9f4ecb66e08b43c37e776f6c3ef40935f7f\","
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"checkstyle\","
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 3,"
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 5"
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 25,"
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 0,"
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-08\","
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"456a8c4bcca006bc327fb54e0eb0b7a758ba0081\","
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"clarifies that settagcolor is NOT undoable\","
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 8,"
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"61e1bf739ebd5fa01e52d51f8ba05d0f73f0760a\","
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"clarify that cte is also not undoable\","
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 6,"
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"e5e2e413a503ce583c7469c3b9456e94f795b322\","
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add logo to UI and change logo\","
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 11,"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 77,"
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 14,"
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-09\","
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"9a4aa4b2dc43b20e5e97d10264dfa5fd8ff0c3aa\","
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"fix avatar path problem\","
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 72,"
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 9"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"b9367caeed8811c7594a7c9ae622664571714cd8\","
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"mem\","
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 5,"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 5"
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 258,"
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 17,"
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-10\","
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"a32b555ee3b10e3faf7569a732b269bef064b960\","
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"seq diagram for settag\","
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"219c12b49bf5aa8ac6ed8523254cdce80cfdc19f\","
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"sampledata changed\","
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"7a8f64a71ed60018d3944d4910d65a78816b0a10\","
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"event handler for edit\","
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"a6edadc423383fa1b7f91eb6825a40f9384d1a04\","
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"edit command\","
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 31,"
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"3412a2013488958283c62ff641a7fa966bbba0c0\","
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"fix select edit undo bug\","
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 19,"
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 10"
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"f2ac395b6012f5610b261aa8d0290cde2b432c5e\","
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"change sampleDataUtil\","
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 128,"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 5"
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"6cfc25f0524c3e91e42083d747547f1ad00809c3\","
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add author\","
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 4,"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"815b2fd002ddaa65b2c5967177c8aab6c354694c\","
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add ppp doc\","
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 71,"
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 218,"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 155,"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-11\","
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"85e1583faa5f30b224402a302d81d17139bc1ec8\","
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add to dg\","
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 70,"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 50"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"bf44c1d8041c179fa7f3b0665e3551805eeb73d5\","
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"PPP + UI change for autocomplete, text changed to black\","
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 64,"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 24"
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"e97b6d8eac3df2369cad932b5d3535582e39ab74\","
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"dg changes\","
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 84,"
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 81"
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 15,"
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 4,"
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-12\","
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"77b31c34bad4634c94d2d9054367ae7267080a09\","
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add stuff to DG\","
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 15,"
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 4"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 182,"
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 27,"
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-13\","
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"e795362a729c5c3553d995961b6eca4418098996\","
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"convert to pdf\","
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"d849139595b0cbfa0ae4b50d9accfcf4b49b079f\","
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add event handlers for team display\","
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 13,"
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 6"
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"90173a14e3dea374a9fbdac064b8beac214d0b5e\","
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add tests\","
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 130,"
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"315e7dc33f52de769806ee045110717fa8143b69\","
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"collation\","
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 6,"
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"9ec2d66fba92299056460d55a293f598591a3c4e\","
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"found bug in edit and remark, changed UG\","
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 32,"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 17"
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"1282fbc9b3de17e73a194cf95d1f4a00f7d5b172\","
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"remove print statements\","
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 0,"
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 3"
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "-"
        },
        "content": "        \"insertions\": 97,"
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "-"
        },
        "content": "        \"deletions\": 48,"
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "-"
        },
        "content": "        \"date\": \"2018-04-15\","
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "-"
        },
        "content": "        \"commitResults\": ["
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"b1bad787325876cf999561c64864df33eab38c8a\","
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add labels for diagrams\","
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 4,"
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"588963c9e80c35a765753837618b4b32b7aa11dc\","
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add diagrams\","
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 9,"
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"38a9f652337fde517d73c59bfeff823d0b84e119\","
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add diagrams to teamdisplay and playerdetails\","
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 12,"
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"b240303f5d476cd14abdf225cb259bb25239adb3\","
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"checkstyle\","
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 0,"
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"606410b4373aee590bf80c90358d1586187dca12\","
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"bug\","
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"d04dfbf66f28ed615a349422db0319d959a56bd5\","
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"app veyor\","
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"bcc73e55706bd69f51327b1a6df832f9e79f8439\","
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"test cases\","
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 19,"
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"c274c683da90f2dfc4d1127ca2b9b80fc15f58d2\","
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"trailing whitespace?!?!?!?!!?\","
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 3,"
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"c3210755031bb872715add3e71a663899f12522f\","
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"newline\","
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"bc91f22d942ae0c18b751d54349d0cca0aba2171\","
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"missing word\","
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"aadf38a06c489f5ce6a48151086e358fd24150a3\","
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"update PPP\","
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 1,"
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"09cbd78d52c6b2efd1ef4962b379ac4da7258f22\","
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add what to expect to UG\","
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 6,"
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"eefd26b1d641b98ef6d0033da6d6c7d5d3c8767c\","
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add valid command\","
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 14,"
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 1"
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"d304575228900e13e6857e49dc92e51c1d925008\","
      },
      {
        "lineNumber": 1806,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"more changes\","
      },
      {
        "lineNumber": 1807,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1808,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 10,"
      },
      {
        "lineNumber": 1809,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 22"
      },
      {
        "lineNumber": 1810,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1811,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1812,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"07331ea204e39259f559bd67090bf47f8dc0c6c3\","
      },
      {
        "lineNumber": 1813,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"some grammar\","
      },
      {
        "lineNumber": 1814,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1815,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 1816,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 1817,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1818,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1819,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"34b2df5737e17e2dfb5f18cb4de61d6f9cc44608\","
      },
      {
        "lineNumber": 1820,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"change the default theme\","
      },
      {
        "lineNumber": 1821,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1822,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 7,"
      },
      {
        "lineNumber": 1823,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 7"
      },
      {
        "lineNumber": 1824,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1825,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1826,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"31165bade695962ec406dd51acd350fe07ec93d1\","
      },
      {
        "lineNumber": 1827,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"ui diagram\","
      },
      {
        "lineNumber": 1828,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1829,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 2,"
      },
      {
        "lineNumber": 1830,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 0"
      },
      {
        "lineNumber": 1831,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1832,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 1833,
        "author": {
          "gitId": "-"
        },
        "content": "            \"hash\": \"36965d6ca1895deff3d776a4f43a551e26987c56\","
      },
      {
        "lineNumber": 1834,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageTitle\": \"add preface for devops and appendix\","
      },
      {
        "lineNumber": 1835,
        "author": {
          "gitId": "-"
        },
        "content": "            \"messageBody\": \"\","
      },
      {
        "lineNumber": 1836,
        "author": {
          "gitId": "-"
        },
        "content": "            \"insertions\": 3,"
      },
      {
        "lineNumber": 1837,
        "author": {
          "gitId": "-"
        },
        "content": "            \"deletions\": 2"
      },
      {
        "lineNumber": 1838,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1839,
        "author": {
          "gitId": "-"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 1840,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 1841,
        "author": {
          "gitId": "-"
        },
        "content": "    ],"
      },
      {
        "lineNumber": 1842,
        "author": {
          "gitId": "-"
        },
        "content": "    \"jordancjq\": []"
      },
      {
        "lineNumber": 1843,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 1844,
        "author": {
          "gitId": "-"
        },
        "content": "  \"authorFinalContributionMap\": {"
      },
      {
        "lineNumber": 1845,
        "author": {
          "gitId": "-"
        },
        "content": "    \"lithiumlkid\": 360,"
      },
      {
        "lineNumber": 1846,
        "author": {
          "gitId": "-"
        },
        "content": "    \"lohtianwei\": 2121,"
      },
      {
        "lineNumber": 1847,
        "author": {
          "gitId": "-"
        },
        "content": "    \"codeeong\": 2090,"
      },
      {
        "lineNumber": 1848,
        "author": {
          "gitId": "-"
        },
        "content": "    \"jordancjq\": 0"
      },
      {
        "lineNumber": 1849,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 1850,
        "author": {
          "gitId": "-"
        },
        "content": "  \"authorFileTypeContributionMap\": {"
      },
      {
        "lineNumber": 1851,
        "author": {
          "gitId": "-"
        },
        "content": "    \"lithiumlkid\": {"
      },
      {
        "lineNumber": 1852,
        "author": {
          "gitId": "-"
        },
        "content": "      \"java\": 0,"
      },
      {
        "lineNumber": 1853,
        "author": {
          "gitId": "-"
        },
        "content": "      \"adoc\": 360,"
      },
      {
        "lineNumber": 1854,
        "author": {
          "gitId": "-"
        },
        "content": "      \"md\": 0"
      },
      {
        "lineNumber": 1855,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 1856,
        "author": {
          "gitId": "-"
        },
        "content": "    \"lohtianwei\": {"
      },
      {
        "lineNumber": 1857,
        "author": {
          "gitId": "-"
        },
        "content": "      \"java\": 1817,"
      },
      {
        "lineNumber": 1858,
        "author": {
          "gitId": "-"
        },
        "content": "      \"adoc\": 304,"
      },
      {
        "lineNumber": 1859,
        "author": {
          "gitId": "-"
        },
        "content": "      \"md\": 0"
      },
      {
        "lineNumber": 1860,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 1861,
        "author": {
          "gitId": "-"
        },
        "content": "    \"codeeong\": {"
      },
      {
        "lineNumber": 1862,
        "author": {
          "gitId": "-"
        },
        "content": "      \"java\": 1685,"
      },
      {
        "lineNumber": 1863,
        "author": {
          "gitId": "-"
        },
        "content": "      \"adoc\": 405,"
      },
      {
        "lineNumber": 1864,
        "author": {
          "gitId": "-"
        },
        "content": "      \"md\": 0"
      },
      {
        "lineNumber": 1865,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 1866,
        "author": {
          "gitId": "-"
        },
        "content": "    \"jordancjq\": {"
      },
      {
        "lineNumber": 1867,
        "author": {
          "gitId": "-"
        },
        "content": "      \"java\": 0,"
      },
      {
        "lineNumber": 1868,
        "author": {
          "gitId": "-"
        },
        "content": "      \"adoc\": 0,"
      },
      {
        "lineNumber": 1869,
        "author": {
          "gitId": "-"
        },
        "content": "      \"md\": 0"
      },
      {
        "lineNumber": 1870,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1871,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 1872,
        "author": {
          "gitId": "-"
        },
        "content": "  \"authorContributionVariance\": {"
      },
      {
        "lineNumber": 1873,
        "author": {
          "gitId": "-"
        },
        "content": "    \"lithiumlkid\": 1465.0459,"
      },
      {
        "lineNumber": 1874,
        "author": {
          "gitId": "-"
        },
        "content": "    \"lohtianwei\": 15288.368,"
      },
      {
        "lineNumber": 1875,
        "author": {
          "gitId": "-"
        },
        "content": "    \"codeeong\": 13430.541,"
      },
      {
        "lineNumber": 1876,
        "author": {
          "gitId": "-"
        },
        "content": "    \"jordancjq\": 0.0"
      },
      {
        "lineNumber": 1877,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 1878,
        "author": {
          "gitId": "-"
        },
        "content": "  \"authorDisplayNameMap\": {"
      },
      {
        "lineNumber": 1879,
        "author": {
          "gitId": "-"
        },
        "content": "    \"lithiumlkid\": \"Ahm\","
      },
      {
        "lineNumber": 1880,
        "author": {
          "gitId": "-"
        },
        "content": "    \"lohtianwei\": \"Loh\","
      },
      {
        "lineNumber": 1881,
        "author": {
          "gitId": "-"
        },
        "content": "    \"codeeong\": \"Cod\","
      },
      {
        "lineNumber": 1882,
        "author": {
          "gitId": "-"
        },
        "content": "    \"jordancjq\": \"Jor\""
      },
      {
        "lineNumber": 1883,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 1884,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 6,
      "-": 1878
    }
  },
  {
    "path": "src/systemtest/resources/sinceBeginningDateRange/expected/summary.json",
    "fileType": "json",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \"reportGeneratedTime\": \"Tue Jul 24 17:45:15 SGT 2018\","
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \"reportGenerationTime\": \"15 second(s)\","
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \"repos\": ["
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "      \"location\": {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        \"location\": \"https://github.com/reposense/testrepo-Alpha.git\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \"repoName\": \"testrepo-Alpha\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \"organization\": \"reposense\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \"branch\": \"master\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      \"displayName\": \"reposense/testrepo-Alpha[master]\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "      \"outputFolderName\": \"reposense_testrepo-Alpha_master\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      \"location\": {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        \"location\": \"https://github.com/reposense/testrepo-Beta.git\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        \"repoName\": \"testrepo-Beta\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        \"organization\": \"reposense\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      \"branch\": \"master\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \"displayName\": \"reposense/testrepo-Beta[master]\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      \"outputFolderName\": \"reposense_testrepo-Beta_master\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      \"location\": {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \"location\": \"https://github.com/reposense/testrepo-Charlie.git\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        \"repoName\": \"testrepo-Charlie\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \"organization\": \"reposense\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \"branch\": \"master\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \"displayName\": \"reposense/testrepo-Charlie[master]\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      \"outputFolderName\": \"reposense_testrepo-Charlie_master\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      \"location\": {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        \"location\": \"https://github.com/reposense/testrepo-Delta.git\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        \"repoName\": \"testrepo-Delta\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        \"organization\": \"reposense\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      \"branch\": \"master\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      \"displayName\": \"reposense/testrepo-Delta[master]\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      \"outputFolderName\": \"reposense_testrepo-Delta_master\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  \"errorList\": ["
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      \"repoName\": \"reposense/testrepo-Delta[nonExistentBranch]\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      \"errorMessage\": \"Branch \\\"nonExistentBranch\\\" does not exist.\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  \"sinceDate\": \"2017-09-30\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"untilDate\": \"2019-03-02\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"isSinceDateProvided\": true,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \"isUntilDateProvided\": true"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 3,
      "-": 53
    }
  },
  {
    "path": "src/test/java/reposense/authorship/FileAnalyzerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.authorship;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.model.FileInfo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.model.FileResult;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitCheckout;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.exception.CommitNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.CommitHash;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.template.GitTestTemplate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.TestUtil;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileAnalyzerTest extends GitTestTemplate {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final Date BLAME_TEST_SINCE_DATE \u003d TestUtil.getSinceDate(2018, Calendar.FEBRUARY, 6);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final Date BLAME_TEST_UNTIL_DATE \u003d TestUtil.getUntilDate(2018, Calendar.FEBRUARY, 8);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final Date EMAIL_WITH_ADDITION_TEST_SINCE_DATE \u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            TestUtil.getSinceDate(2019, Calendar.MARCH, 28);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final Date EMAIL_WITH_ADDITION_TEST_UNTIL_DATE \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            TestUtil.getUntilDate(2019, Calendar.MARCH, 28);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final Date MOVED_FILE_SINCE_DATE \u003d TestUtil.getSinceDate(2018, Calendar.FEBRUARY, 7);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final Date MOVED_FILE_UNTIL_DATE \u003d TestUtil.getUntilDate(2018, Calendar.FEBRUARY, 9);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void blameTest() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setSinceDate(BLAME_TEST_SINCE_DATE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        FileResult fileResult \u003d getFileResult(\"blameTest.java\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFileAnalysisCorrectness(fileResult);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void movedFileBlameTest() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setSinceDate(MOVED_FILE_SINCE_DATE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setUntilDate(MOVED_FILE_UNTIL_DATE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        FileResult fileResult \u003d getFileResult(\"newPos/movedFile.java\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFileAnalysisCorrectness(fileResult);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public void blameTestDateRange() throws CommitNotFoundException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), BLAME_TEST_UNTIL_DATE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setSinceDate(BLAME_TEST_SINCE_DATE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        FileResult fileResult \u003d getFileResult(\"blameTest.java\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFileAnalysisCorrectness(fileResult);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void movedFileBlameTestDateRange() throws CommitNotFoundException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), MOVED_FILE_UNTIL_DATE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setSinceDate(MOVED_FILE_SINCE_DATE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setUntilDate(MOVED_FILE_UNTIL_DATE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        FileResult fileResult \u003d getFileResult(\"newPos/movedFile.java\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFileAnalysisCorrectness(fileResult);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public void analyzeFile_blameTestFileIgnoreFakeAuthorCommitFullHash_success() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setSinceDate(BLAME_TEST_SINCE_DATE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfo fileInfoFull \u003d generateTestFileInfo(\"blameTest.java\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setIgnoreCommitList(Collections.singletonList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfoAnalyzer.analyzeFile(config, fileInfoFull);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfo fileInfoShort \u003d generateTestFileInfo(\"blameTest.java\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setIgnoreCommitList("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                Collections.singletonList("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                        new CommitHash(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8))));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfoAnalyzer.analyzeFile(config, fileInfoShort);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(fileInfoFull, fileInfoShort);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(new Author(MAIN_AUTHOR_NAME), fileInfoFull.getLine(1).getAuthor());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(new Author(MAIN_AUTHOR_NAME), fileInfoFull.getLine(2).getAuthor());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(new Author(MAIN_AUTHOR_NAME), fileInfoFull.getLine(4).getAuthor());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        // line added in commit that was ignored"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(Author.UNKNOWN_AUTHOR, fileInfoFull.getLine(3).getAuthor());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public void analyzeFile_blameTestFileIgnoreAllCommit_success() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setSinceDate(BLAME_TEST_SINCE_DATE);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfo fileInfoFull \u003d generateTestFileInfo(\"blameTest.java\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setIgnoreCommitList(Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfoAnalyzer.analyzeFile(config, fileInfoFull);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfo fileInfoShort \u003d generateTestFileInfo(\"blameTest.java\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setIgnoreCommitList(CommitHash.convertStringsToCommits("
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                        MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING.substring(0, 8))));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfoAnalyzer.analyzeFile(config, fileInfoShort);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(fileInfoFull, fileInfoShort);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        fileInfoFull.getLines().forEach(lineInfo -\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                Assert.assertEquals(Author.UNKNOWN_AUTHOR, lineInfo.getAuthor()));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public void analyzeFile_emailWithAdditionOperator_success() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setSinceDate(EMAIL_WITH_ADDITION_TEST_SINCE_DATE);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setUntilDate(EMAIL_WITH_ADDITION_TEST_UNTIL_DATE);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setBranch(\"617-FileAnalyzerTest-analyzeFile_emailWithAdditionOperator_success\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        Author author \u003d new Author(MINGYI_AUTHOR_NAME);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setAuthorList(Collections.singletonList(author));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfo fileInfo \u003d FileInfoExtractor.generateFileInfo(config.getRepoRoot(), \"pr_617.java\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfoAnalyzer.analyzeFile(config, fileInfo);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(1, fileInfo.getLines().size());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        fileInfo.getLines().forEach(lineInfo -\u003e Assert.assertEquals(author, lineInfo.getAuthor()));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 24,
      "-": 102
    }
  },
  {
    "path": "src/test/java/reposense/authorship/FileInfoExtractorTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.authorship;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.model.FileInfo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitCheckout;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.FileTypeTest;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.template.GitTestTemplate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.TestUtil;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileInfoExtractorTest extends GitTestTemplate {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"resources\", \"FileInfoExtractorTest\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path FILE_WITH_SPECIAL_CHARACTER \u003d TEST_DATA_FOLDER.resolve(\"fileWithSpecialCharacters.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path FILE_WITHOUT_SPECIAL_CHARACTER \u003d TEST_DATA_FOLDER"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            .resolve(\"fileWithoutSpecialCharacters.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String EDITED_FILE_INFO_BRANCH \u003d \"getEditedFileInfos-test\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String DIRECTORY_WITH_VALID_WHITELISTED_NAME_BRANCH \u003d \"directory-with-valid-whitelisted-name\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String BRANCH_WITH_VALID_WHITELISTED_FILE_NAME_BRANCH \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            \"535-FileInfoExtractorTest-branchWithValidWhitelistedFileName.txt\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String BRANCH_WITH_BINARY_FILES \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            \"728-FileInfoExtractorTest-getNonBinaryFilesList_directoryWithBinaryFiles_success\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String BRANCH_WITH_RARE_FILE_FORMATS \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            \"708-FileInfoExtractorTest-extractFileInfos_withoutSpecifiedFormats_success\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FEBRUARY_EIGHT_COMMIT_HASH \u003d \"768015345e70f06add2a8b7d1f901dc07bf70582\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void extractFileInfosTest() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkout(config.getRepoRoot(), TEST_COMMIT_HASH);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractFileInfos(config);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(6, files.size());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"README.md\"), files));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"blameTest.java\"), files));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"newFile.java\"), files));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public void extractFileInfos_sinceDateFebrauaryNineToLatestCommit_success() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date date \u003d TestUtil.getSinceDate(2018, Calendar.FEBRUARY, 9);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setSinceDate(date);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractFileInfos(config);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(4, files.size());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        // files edited within commit range"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"README.md\"), files));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        // files not edited within commit range"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(isFileExistence(Paths.get(\"blameTest.java\"), files));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(isFileExistence(Paths.get(\"newFile.java\"), files));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public void extractFileInfos_directoryWithValidWhitelistedName_success() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkout(config.getRepoRoot(), DIRECTORY_WITH_VALID_WHITELISTED_NAME_BRANCH);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractFileInfos(config);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(7, files.size());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\".gradle/anything.txt\"), files));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public void extractFileInfos_branchWithValidWhitelistedFileName_success() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkout(config.getRepoRoot(), BRANCH_WITH_VALID_WHITELISTED_FILE_NAME_BRANCH);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractFileInfos(config);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"whitelisted-format.txt\"), files));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public void extractFileInfos_sinceDateAfterLatestCommit_emptyResult() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date date \u003d TestUtil.getSinceDate(2050, 12, 31);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setSinceDate(date);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractFileInfos(config);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(files.isEmpty());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    public void extractFileInfos_untilDateBeforeFirstCommit_emptyResult() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date date \u003d TestUtil.getUntilDate(2015, 12, 31);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setUntilDate(date);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractFileInfos(config);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(files.isEmpty());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getEditedFileInfos_editFileInfoBranchSinceFebrauryEight_success() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkout(config.getRepoRoot(), EDITED_FILE_INFO_BRANCH);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.getEditedFileInfos(config, FEBRUARY_EIGHT_COMMIT_HASH);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(3, files.size());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"README.md\"), files));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        // file renamed without changing content, not included"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(isFileExistence(Paths.get(\"renamedFile.java\"), files));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getEditedFileInfos_editFileInfoBranchSinceFirstCommit_success() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkout(config.getRepoRoot(), EDITED_FILE_INFO_BRANCH);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.getEditedFileInfos(config, FIRST_COMMIT_HASH);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(5, files.size());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        // empty file created, not included"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    public void generateFileInfo_fileWithSpecialCharacters_correctFileInfoGenerated() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfo fileInfo \u003d FileInfoExtractor.generateFileInfo(\".\", FILE_WITH_SPECIAL_CHARACTER.toString());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(5, fileInfo.getLines().size());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    public void generateFileInfo_fileWithoutSpecialCharacters_correctFileInfoGenerated() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfo fileInfo \u003d FileInfoExtractor.generateFileInfo(\".\", FILE_WITHOUT_SPECIAL_CHARACTER.toString());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(5, fileInfo.getLines().size());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getNonBinaryFilesList_directoryWithBinaryFiles_success() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e nonBinaryFilesList \u003d Arrays.asList("
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                \"binaryFileTest/nonBinaryFile.txt\", \"My Documents/wordToHtml.htm\", \"My Pictures/notPngPicture.png\","
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                \"My Documents/wordToHtml_files/colorschememapping.xml\", \"My Documents/wordToHtml_files/filelist.xml\","
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                \"My Documents/notPdfDocument.pdf\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e binaryFilesList \u003d Arrays.asList("
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                \"binaryFileTest/binaryFile.txt\", \"My Documents/word.docx\", \"My Documents/pdfDocument.pdf\","
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                \"My Documents/wordToHtml_files/themedata.thmx\", \"My Pictures/pngPicture.png\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkoutBranch(config.getRepoRoot(), BRANCH_WITH_BINARY_FILES);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cPath\u003e files \u003d FileInfoExtractor.getNonBinaryFilesList(config);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(6, files.size());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        // Non binary files should be captured"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        nonBinaryFilesList.forEach(nonBinFile -\u003e Assert.assertTrue(files.contains(Paths.get(nonBinFile))));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        // Binary files should be ignored"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        binaryFilesList.forEach(binFile -\u003e Assert.assertFalse(files.contains(Paths.get(binFile))));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    public void extractFileInfos_withoutSpecifiedFormats_success() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e nonBinaryFilesList \u003d Arrays.asList("
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                \"binaryFileTest/nonBinaryFile.ARBIFORMAT\", \"My Documents/wordToHtml.htm\","
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                \"My Pictures/notPngPicture.png\", \"My Documents/wordToHtml_files/colorschememapping.xml\","
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                \"My Documents/wordToHtml_files/filelist.xml\", \"My Documents/notPdfDocument.fdp\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e binaryFilesList \u003d Arrays.asList("
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                \"binaryFileTest/binaryFile.ARBIFORMAT\", \"My Documents/word.docx\", \"My Documents/pdfDocument.fdp\","
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                \"My Documents/wordToHtml_files/themedata.thmx\", \"My Pictures/pngPicture.png\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkoutBranch(config.getRepoRoot(), BRANCH_WITH_RARE_FILE_FORMATS);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractFileInfos(config);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(nonBinaryFilesList.size(), files.size());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        // Non binary files should be captured"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        nonBinaryFilesList.forEach(nonBinFile -\u003e Assert.assertTrue(isFileExistence(Paths.get(nonBinFile), files)));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        // Binary files should be ignored"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        binaryFilesList.forEach(binFile -\u003e Assert.assertFalse(isFileExistence(Paths.get(binFile), files)));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isFileExistence(Path filePath, List\u003cFileInfo\u003e files) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        return files.stream().anyMatch(file -\u003e Paths.get(file.getPath()).equals(filePath));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 3,
      "-": 184
    }
  },
  {
    "path": "src/test/java/reposense/commits/CommitInfoAnalyzerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.commits;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.GregorianCalendar;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Before;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.commits.model.CommitInfo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.commits.model.CommitResult;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.CommitHash;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "import reposense.model.FileTypeTest;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.parser.InvalidLocationException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.template.GitTestTemplate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommitInfoAnalyzerTest extends GitTestTemplate {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int NUMBER_EUGENE_COMMIT \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int NUMBER_MINGYI_COMMIT \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int NUMBER_EMPTY_MESSAGE_COMMIT \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Before"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public void before() throws InvalidLocationException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        super.before();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().clear();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public void analyzeCommits_allAuthorNoIgnoredCommitsNoDateRange_success() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(EUGENE_AUTHOR_NAME, new Author(EUGENE_AUTHOR_NAME));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitResult\u003e commitResults \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(commitInfos.size(), commitResults.size());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public void analyzeCommits_fakeMainAuthorNoIgnoredCommitsNoDateRange_success() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitResult\u003e commitResults \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(commitInfos.size() - NUMBER_EUGENE_COMMIT, commitResults.size());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void analyzeCommits_eugeneAuthorNoIgnoredCommitsNoDateRange_success() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(EUGENE_AUTHOR_NAME, new Author(EUGENE_AUTHOR_NAME));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitResult\u003e commitResults \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(NUMBER_EUGENE_COMMIT, commitResults.size());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public void analyzeCommits_allAuthorSingleCommitIgnoredNoDateRange_success() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(EUGENE_AUTHOR_NAME, new Author(EUGENE_AUTHOR_NAME));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setIgnoreCommitList(Collections.singletonList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitResult\u003e commitResultsFull \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setIgnoreCommitList("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                Collections.singletonList("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                        new CommitHash(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8))));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitResult\u003e commitResultsShort \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(commitResultsShort, commitResultsFull);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(commitInfos.size() - 1, commitResultsFull.size());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public void analyzeCommits_allAuthorMultipleCommitIgnoredNoDateRange_success() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(EUGENE_AUTHOR_NAME, new Author(EUGENE_AUTHOR_NAME));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setIgnoreCommitList("
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018, EUGENE_AUTHOR_README_FILE_COMMIT_07052018));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitResult\u003e commitResultsFull \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setIgnoreCommitList(CommitHash.convertStringsToCommits(Arrays.asList("
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING.substring(0, 8))));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitResult\u003e commitResultsShort \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(commitResultsShort, commitResultsFull);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(commitInfos.size() - 2, commitResultsFull.size());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public void analyzeCommits_noCommitMessage_success() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setBranch(\"empty-commit-message\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().clear();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(YONG_AUTHOR_NAME, new Author(YONG_AUTHOR_NAME));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitResult\u003e commitResults \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        commitResults.removeIf(s -\u003e !s.getMessageTitle().isEmpty());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(NUMBER_EMPTY_MESSAGE_COMMIT, commitResults.size());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    public void analyzeCommits_emailWithAdditionOperator_success() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setBranch(\"617-FileAnalyzerTest-analyzeFile_emailWithAdditionOperator_success\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        Author author \u003d new Author(MINGYI_AUTHOR_NAME);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setAuthorList(Collections.singletonList(author));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitResult\u003e commitResults \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(NUMBER_MINGYI_COMMIT, commitResults.size());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    public void analyzeCommits_multipleCommitsWithCommitMessageBody_success() throws ParseException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        Author author \u003d new Author(JINYAO_AUTHOR_NAME);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommitResults.add(new CommitResult(author, \"2eccc111e813e8b2977719b5959e32b674c56afe\","
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                parseGitStrictIsoDate(\"2019-06-19T13:02:01+08:00\"), \"\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\","
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                \"Hi there!\\n\\n\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\n\", null, 1, 0));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommitResults.add(new CommitResult(author, \"8f8359649361f6736c31b87d499a4264f6cf7ed7\","
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                parseGitStrictIsoDate(\"2019-06-19T13:03:39+08:00\"), \"[#123] Reverted 1st commit\","
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                \"This is a test to see if the commit message body works. \""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                + \"All should be same same.\\n\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\n|The end.\", null, 0, 1));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setBranch(\"751-CommitInfoAnalyzerTest-analyzeCommits_multipleCommitsWithCommitMessageBody_success\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setAuthorList(Collections.singletonList(author));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setSinceDate(new GregorianCalendar(2019, Calendar.JUNE, 19).getTime());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setUntilDate(new GregorianCalendar(2019, Calendar.JUNE, 20).getTime());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedCommitResults, actualCommitResults);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    public void analyzeCommits_commitsWithEmptyCommitMessageTitleOrBody_success() throws ParseException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        Author author \u003d new Author(JINYAO_AUTHOR_NAME);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        // 1st test: Contains commit message title but no commit message body."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommitResults.add(new CommitResult(author, \"e54ae8fdb77c6c7d2c39131b816bfc03e6a6dd44\","
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                parseGitStrictIsoDate(\"2019-07-02T12:35:46+08:00\"), \"Test 1: With message title but no body\","
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                \"\", null, 1, 0));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        // 2nd test: Contains no commit message title and no commit message body."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommitResults.add(new CommitResult(author, \"57fa22fc2550210203c2941692f69ccb0cf18252\","
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                parseGitStrictIsoDate(\"2019-07-02T12:36:14+08:00\"), \"\", \"\", null, 0, 1));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setBranch(\"751-CommitInfoAnalyzerTest-analyzeCommits_commitsWithEmptyCommitMessageTitleOrBody_success\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setAuthorList(Collections.singletonList(author));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setSinceDate(new GregorianCalendar(2019, Calendar.JULY, 2).getTime());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setUntilDate(new GregorianCalendar(2019, Calendar.JULY, 3).getTime());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedCommitResults, actualCommitResults);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    public void analyzeCommits_commitsWithMultipleTags_success() throws ParseException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Author author \u003d new Author(JAMES_AUTHOR_NAME);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        expectedCommitResults.add(new CommitResult(author, \"62c3a50ef9b3580b2070deac1eed2b3e2d701e04\","
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                parseGitStrictIsoDate(\"2019-12-20T22:45:18+08:00\"), \"Single Tag Commit\","
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                \"\", new String[] {\"1st\"}, 2, 1));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        expectedCommitResults.add(new CommitResult(author, \"c5e36ec059390233ac036db61a84fa6b55952506\","
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                parseGitStrictIsoDate(\"2019-12-20T22:47:21+08:00\"), \"Double Tag Commit\","
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                \"\", new String[] {\"2nd-tag\", \"1st-tag\"}, 1, 0));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setBranch(\"879-CommitInfoAnalyzerTest-analyzeCommits_commitsWithMultipleTags_success\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setAuthorList(Collections.singletonList(author));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setSinceDate(new GregorianCalendar(2019, Calendar.DECEMBER, 20).getTime());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setUntilDate(new GregorianCalendar(2019, Calendar.DECEMBER, 21).getTime());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Assert.assertEquals(expectedCommitResults, actualCommitResults);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    public void analyzeCommits_emptyCommits_success() throws ParseException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Author author \u003d new Author(JAMES_AUTHOR_NAME);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        expectedCommitResults.add(new CommitResult(author, \"016ab87c4afe89a98225b96c98ff28dd4774410f\","
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                parseGitStrictIsoDate(\"2020-01-27T22:20:51+08:00\"), \"empty commit\","
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                \"\", null, 0, 0));"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setBranch(\"1019-CommitInfoAnalyzerTest-emptyCommits\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setAuthorList(Collections.singletonList(author));"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setSinceDate(new GregorianCalendar(2020, Calendar.JANUARY, 27).getTime());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setUntilDate(new GregorianCalendar(2020, Calendar.JANUARY, 28).getTime());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Assert.assertEquals(expectedCommitResults, actualCommitResults);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code Date} from a string {@code gitStrictIsoDate}."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date parseGitStrictIsoDate(String gitStrictIsoDate) throws ParseException {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        return CommitInfoAnalyzer.GIT_STRICT_ISO_DATE_FORMAT.parse(gitStrictIsoDate);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 49,
      "-": 175
    }
  },
  {
    "path": "src/test/java/reposense/commits/CommitInfoExtractorTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.commits;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.commits.model.CommitInfo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.template.GitTestTemplate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.TestUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommitInfoExtractorTest extends GitTestTemplate {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public void withContentTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitInfo\u003e commits \u003d CommitInfoExtractor.extractCommitInfos(config);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(commits.isEmpty());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void withoutContentTest() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date sinceDate \u003d TestUtil.getSinceDate(2050, Calendar.JANUARY, 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setSinceDate(sinceDate);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCommitInfo\u003e commits \u003d CommitInfoExtractor.extractCommitInfos(config);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(commits.isEmpty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 29
    }
  },
  {
    "path": "src/test/java/reposense/git/GitCheckoutTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.git;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.exception.CommitNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.template.GitTestTemplate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.TestUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class GitCheckoutTest extends GitTestTemplate {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkout_validBranch_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkout(config.getRepoRoot(), \"test\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        Path branchFile \u003d Paths.get(config.getRepoRoot(), \"inTestBranch.java\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.exists(branchFile));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkoutBranchTest() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        Path branchFile \u003d Paths.get(config.getRepoRoot(), \"inTestBranch.java\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(Files.exists(branchFile));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkoutBranch(config.getRepoRoot(), \"test\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.exists(branchFile));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkoutHashTest() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        Path newFile \u003d Paths.get(config.getRepoRoot(), \"newFile.java\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.exists(newFile));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkout(config.getRepoRoot(), FIRST_COMMIT_HASH);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(Files.exists(newFile));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkoutToDate_validDate_success() throws CommitNotFoundException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        Path newFile \u003d Paths.get(config.getRepoRoot(), \"newFile.java\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.exists(newFile));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date untilDate \u003d TestUtil.getUntilDate(2018, Calendar.FEBRUARY, 6);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), untilDate);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(Files.exists(newFile));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d CommitNotFoundException.class)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkoutToDate_invalidDate_throwsEmptyCommitException() throws CommitNotFoundException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date untilDate \u003d TestUtil.getUntilDate(2015, Calendar.FEBRUARY, 6);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), untilDate);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 2,
      "-": 57
    }
  },
  {
    "path": "src/test/java/reposense/git/GitLogTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.git;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.FileType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.template.GitTestTemplate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.TestUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class GitLogTest extends GitTestTemplate {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public void gitLog_existingFormats_hasContent() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(content.isEmpty());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public void gitLog_nonExistingFormats_noContent() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"py\")));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(content.isEmpty());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void gitLog_includeAllJavaFiles_success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"java\")));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(8, content));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public void gitLog_fakeAuthorNameOnly_success() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        Author fakeAuthorName \u003d new Author(FAKE_AUTHOR_NAME);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        String content \u003d GitLog.get(config, fakeAuthorName);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(4, content));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public void gitLog_authorNameIncorrectCase_success() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        Author fakeAuthorName \u003d new Author(FAKE_AUTHOR_NAME.toUpperCase());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        String content \u003d GitLog.get(config, fakeAuthorName);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(4, content));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public void gitLog_fakeAuthorNameWithSpecialCharacter_success() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        Author fakeAuthorWithSpecialCharacter \u003d new Author(FAKE_AUTHOR_NAME.replace(\"fake\", \"#()!\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        String content \u003d GitLog.get(config, fakeAuthorWithSpecialCharacter);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(4, content));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public void gitLog_includeAllJavaFilesAuthorIgnoreMovedFile_success() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"java\")));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        Author ignoreMovedFileAuthor \u003d getAlphaAllAliasAuthor();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        ignoreMovedFileAuthor.setIgnoreGlobList(Collections.singletonList(\"**movedFile.java\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        String content \u003d GitLog.getWithFiles(config, ignoreMovedFileAuthor);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberFilesChanged(4, content));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public void gitLog_authorIgnoreAllJavaFiles_success() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"java\")));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        Author ignoreAllJavaFilesAuthor \u003d getAlphaAllAliasAuthor();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        ignoreAllJavaFilesAuthor.setIgnoreGlobList(Collections.singletonList(\"*.java\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        String content \u003d GitLog.getWithFiles(config, ignoreAllJavaFilesAuthor);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberFilesChanged(0, content));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public void gitLog_validIgnoreGlobs_success() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        Author author \u003d getAlphaAllAliasAuthor();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        author.setIgnoreGlobList(Collections.singletonList(\"annotationTest.java\"));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        String content \u003d GitLog.getWithFiles(config, author);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberFilesChanged(6, content));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        author.setIgnoreGlobList(Collections.singletonList(\"**Test**\"));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        content \u003d GitLog.getWithFiles(config, author);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberFilesChanged(5, content));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        author.setIgnoreGlobList(Collections.singletonList(\"README.md\"));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        content \u003d GitLog.getWithFiles(config, author);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberFilesChanged(6, content));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        author.setIgnoreGlobList(Collections.singletonList(\"**.java\"));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        content \u003d GitLog.getWithFiles(config, author);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberFilesChanged(1, content));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        author.setIgnoreGlobList(Collections.singletonList(\"./newPos\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        content \u003d GitLog.getWithFiles(config, author);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberFilesChanged(6, content));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    public void gitLog_invalidIgnoreGlobs_filtered() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        Author author \u003d getAlphaAllAliasAuthor();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        author.setIgnoreGlobList(Collections.singletonList(\"../testrepo-Alpha\"));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        String content \u003d GitLog.getWithFiles(config, author);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberFilesChanged(7, content));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        author.setIgnoreGlobList(Collections.singletonList(\"../*.java\"));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        content \u003d GitLog.getWithFiles(config, author);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberFilesChanged(7, content));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        author.setIgnoreGlobList(Collections.singletonList(\"/newPos\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        content \u003d GitLog.getWithFiles(config, author);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberFilesChanged(7, content));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        author.setIgnoreGlobList(Collections.singletonList(\"..\"));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        content \u003d GitLog.getWithFiles(config, author);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberFilesChanged(7, content));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    public void gitLog_authorWithAllCharactersRegexAlias_emptyResult() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        Author authorWithAllCharactersRegexAlias \u003d new Author(\"none\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        authorWithAllCharactersRegexAlias.setAuthorAliases(Collections.singletonList(\".*\"));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        String content \u003d GitLog.get(config, authorWithAllCharactersRegexAlias);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(content.isEmpty());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public void gitLog_sinceDateInFuture_noContent() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date date \u003d TestUtil.getSinceDate(2050, Calendar.JANUARY, 1);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setSinceDate(date);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(content.isEmpty());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    public void gitLog_untilDateBeforeAnyCommit_noContent() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date date \u003d TestUtil.getUntilDate(2010, Calendar.JANUARY, 1);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setUntilDate(date);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setSinceDate(null);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(content.isEmpty());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    public void gitLog_emailWithAdditionOperator_success() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setBranch(\"617-FileAnalyzerTest-analyzeFile_emailWithAdditionOperator_success\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        Author author \u003d new Author(MINGYI_AUTHOR_NAME);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setAuthorList(Collections.singletonList(author));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        String content \u003d GitLog.get(config, author);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(1, content));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 2,
      "-": 161
    }
  },
  {
    "path": "src/test/java/reposense/git/GitRevListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.git;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.template.GitTestTemplate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.TestUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class GitRevListTest extends GitTestTemplate {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getCommitHashBeforeDate_beforeInitialCommitDate_emptyResult() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date date \u003d TestUtil.getUntilDate(2018, Calendar.FEBRUARY, 4);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        String commitHash \u003d GitRevList.getCommitHashBeforeDate(config.getRepoRoot(), config.getBranch(), date);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(commitHash.isEmpty());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getCommitHashBeforeDate_afterLatestCommitDate_success() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date date \u003d TestUtil.getUntilDate(2018, Calendar.MAY, 10);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        String commitHash \u003d GitRevList.getCommitHashBeforeDate(config.getRepoRoot(), config.getBranch(), date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        // result from git has a newline at the end"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(EUGENE_AUTHOR_README_FILE_COMMIT_07052018 + \"\\n\", commitHash);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getCommitHashBeforeDate_februaryNineDate_success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date date \u003d TestUtil.getUntilDate(2018, Calendar.FEBRUARY, 8);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        String commitHash \u003d GitRevList.getCommitHashBeforeDate(config.getRepoRoot(), config.getBranch(), date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        // result from git has a newline at the end"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018 + \"\\n\", commitHash);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getCommitHashBeforeDate_nullDate_emptyResult() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        String commitHash \u003d GitRevList.getCommitHashBeforeDate(config.getRepoRoot(), config.getBranch(), null);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(commitHash.isEmpty());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d RuntimeException.class)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getCommitHashBeforeDate_invalidBranch_throwsRunTimeException() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date date \u003d TestUtil.getUntilDate(2018, Calendar.FEBRUARY, 9);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        GitRevList.getCommitHashBeforeDate(config.getRepoRoot(), \"invalidBranch\", date);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 4,
      "-": 46
    }
  },
  {
    "path": "src/test/java/reposense/git/GitShortlogTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.git;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.template.GitTestTemplate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.TestUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class GitShortlogTest extends GitTestTemplate {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getAuthors_validRepoNoDateRange_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cAuthor\u003e expectedAuthorList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedAuthorList.add(new Author(\"Eugene Peh\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedAuthorList.add(new Author(\"eugenepeh\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedAuthorList.add(new Author(\"fakeAuthor\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedAuthorList.add(new Author(\"harryggg\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cAuthor\u003e actualAuthorList \u003d GitShortlog.getAuthors(config);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedAuthorList.size(), actualAuthorList.size());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedAuthorList, actualAuthorList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getAuthors_validRepoDateRange_success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cAuthor\u003e expectedAuthorList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedAuthorList.add(new Author(\"eugenepeh\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setSinceDate(TestUtil.getSinceDate(2018, Calendar.MAY, 5));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setUntilDate(TestUtil.getUntilDate(2018, Calendar.MAY, 10));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cAuthor\u003e actualAuthorList \u003d GitShortlog.getAuthors(config);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedAuthorList.size(), actualAuthorList.size());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedAuthorList, actualAuthorList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getAuthors_validRepoDateOutOfRange_success() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setSinceDate(TestUtil.getSinceDate(2018, Calendar.JUNE, 1));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        config.setUntilDate(TestUtil.getUntilDate(2018, Calendar.JUNE, 20));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cAuthor\u003e actualAuthorList \u003d GitShortlog.getAuthors(config);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(actualAuthorList.isEmpty());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 4,
      "-": 49
    }
  },
  {
    "path": "src/test/java/reposense/parser/ArgsParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.apache.tools.ant.types.Commandline.translateCommandline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.After;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Before;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import net.sourceforge.argparse4j.helper.HelpScreenException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.RepoSense;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.CliArguments;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.ConfigCliArguments;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.FileType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.FileTypeTest;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.LocationsCliArguments;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoConfiguration;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.ViewCliArguments;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.FileUtil;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.InputBuilder;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.TestUtil;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "public class ArgsParserTest {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path PROJECT_DIRECTORY \u003d Paths.get(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path CONFIG_FOLDER_ABSOLUTE \u003d new File(ArgsParserTest.class.getClassLoader()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            .getResource(\"cli_location_test\").getFile()).toPath();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path OUTPUT_DIRECTORY_ABSOLUTE \u003d new File(ArgsParserTest.class.getClassLoader()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            .getResource(\"output\").getFile()).toPath();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path CONFIG_FOLDER_RELATIVE \u003d PROJECT_DIRECTORY.relativize(CONFIG_FOLDER_ABSOLUTE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path OUTPUT_DIRECTORY_RELATIVE \u003d PROJECT_DIRECTORY.relativize(OUTPUT_DIRECTORY_ABSOLUTE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path REPO_CONFIG_CSV_FILE \u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            CONFIG_FOLDER_ABSOLUTE.resolve(RepoConfigCsvParser.REPO_CONFIG_FILENAME);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path AUTHOR_CONFIG_CSV_FILE \u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            CONFIG_FOLDER_ABSOLUTE.resolve(AuthorConfigCsvParser.AUTHOR_CONFIG_FILENAME);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String NONEXISTENT_DIRECTORY \u003d \"some_non_existent_dir/\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final InputBuilder DEFAULT_INPUT_BUILDER \u003d new InputBuilder();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String TEST_REPO_REPOSENSE \u003d \"https://github.com/reposense/RepoSense.git\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String TEST_REPO_BETA \u003d \"https://github.com/reposense/testrepo-Beta.git\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String TEST_REPO_CHARLIE \u003d \"https://github.com/reposense/testrepo-Charlie.git\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String TEST_REPO_DELTA \u003d \"https://github.com/reposense/testrepo-Delta.git\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String DEFAULT_TIMEZONE \u003d \"UTC+08\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Before"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void before() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        DEFAULT_INPUT_BUILDER.reset().addConfig(CONFIG_FOLDER_ABSOLUTE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    @After"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public void after() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            FileUtil.deleteDirectory(PROJECT_DIRECTORY.resolve(NONEXISTENT_DIRECTORY).toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_allCorrectInputs_success() throws ParseException, IOException, HelpScreenException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                .addSinceDate(\"01/07/2017\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                .addUntilDate(\"30/11/2017\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                .addFormats(\"java adoc html css js\")"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                .addIgnoreStandaloneConfig()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                .addView()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                .addTimezone(DEFAULT_TIMEZONE)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes("
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                Arrays.asList(\"java\", \"adoc\", \"html\", \"css\", \"js\"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedFormats, cliArguments.getFormats());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(ZoneId.of(DEFAULT_TIMEZONE), cliArguments.getZoneId());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d HelpScreenException.class)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_help_throwsHelpScreenException() throws HelpScreenException, ParseException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d \"--help\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_allCorrectInputsAlias_success() throws ParseException, IOException, HelpScreenException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d String.format(\"-c %s -o %s -s 01/07/2017 -u 30/11/2017 -f java adoc html css js -i -v -t %s\","
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                CONFIG_FOLDER_ABSOLUTE, OUTPUT_DIRECTORY_ABSOLUTE, DEFAULT_TIMEZONE);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                Arrays.asList(\"java\", \"adoc\", \"html\", \"css\", \"js\"));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedFormats, cliArguments.getFormats());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(ZoneId.of(DEFAULT_TIMEZONE), cliArguments.getZoneId());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_withExtraWhitespaces_success() throws ParseException, IOException, HelpScreenException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).addWhiteSpace(5)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE).addWhiteSpace(4)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                .addSinceDate(\"01/07/2017\").addWhiteSpace(3)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                .addUntilDate(\"30/11/2017\").addWhiteSpace(6)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                .addFormats(\"java   adoc  html      css js   \")"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                .addIgnoreStandaloneConfig().addWhiteSpace(1)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                .addView().addWhiteSpace(4)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                .addTimezone(DEFAULT_TIMEZONE).addWhiteSpace(5)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes(Arrays.asList("
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                \"java\", \"adoc\", \"html\", \"css\", \"js\"));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedFormats, cliArguments.getFormats());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(ZoneId.of(DEFAULT_TIMEZONE), cliArguments.getZoneId());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_configFolderOnly_success() throws ParseException, IOException, HelpScreenException {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).build();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        // Optional arguments have default values"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        assertDateDiffOneMonth(cliArguments.getSinceDate(), cliArguments.getUntilDate());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        assertDateDiffEndOfDay(cliArguments.getUntilDate());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(ArgsParser.DEFAULT_REPORT_NAME, cliArguments.getOutputFilePath().getFileName().toString());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(FileTypeTest.NO_SPECIFIED_FORMATS, cliArguments.getFormats());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(cliArguments.isAutomaticallyLaunching());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE).build();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        // Optional arguments have default values"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        assertDateDiffOneMonth(cliArguments.getSinceDate(), cliArguments.getUntilDate());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        assertDateDiffEndOfDay(cliArguments.getUntilDate());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(ArgsParser.DEFAULT_REPORT_NAME, cliArguments.getOutputFilePath().getFileName().toString());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(FileTypeTest.NO_SPECIFIED_FORMATS, cliArguments.getFormats());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(cliArguments.isAutomaticallyLaunching());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(ZoneId.systemDefault(), cliArguments.getZoneId());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_viewOnly_success() throws ParseException, IOException, HelpScreenException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addView(OUTPUT_DIRECTORY_ABSOLUTE).build();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ViewCliArguments);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                OUTPUT_DIRECTORY_ABSOLUTE, ((ViewCliArguments) cliArguments).getReportDirectoryPath()));"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_withIgnore_success() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                .addIgnoreStandaloneConfig()"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        String inputWithAlias \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                .add(\"-i\")"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArgumentsWithAlias \u003d ArgsParser.parse(translateCommandline(inputWithAlias));"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArgumentsWithAlias instanceof LocationsCliArguments);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(((LocationsCliArguments) cliArguments).isStandaloneConfigIgnored());"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(((LocationsCliArguments) cliArgumentsWithAlias).isStandaloneConfigIgnored());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(cliArguments, cliArgumentsWithAlias);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_withoutIgnore_success() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(((LocationsCliArguments) cliArguments).isStandaloneConfigIgnored());"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_viewOnlyWithoutArgs_returnsConfigCliArguments() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addView().build();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(PROJECT_DIRECTORY.toString(), ("
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "                (ConfigCliArguments) cliArguments).getConfigFolderPath().toString());"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_configFolderAndOutputDirectory_success() throws ParseException, IOException, HelpScreenException {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        Path expectedRelativeOutputDirectoryPath \u003d OUTPUT_DIRECTORY_RELATIVE.resolve(ArgsParser.DEFAULT_REPORT_NAME);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        Path expectedAbsoluteOutputDirectoryPath \u003d OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                .addOutput(OUTPUT_DIRECTORY_RELATIVE)"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile(expectedRelativeOutputDirectoryPath, cliArguments.getOutputFilePath()));"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile(expectedAbsoluteOutputDirectoryPath, cliArguments.getOutputFilePath()));"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_configFolderAndViewWithouthArgs_returnsConfigCliArguments()"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "            throws ParseException, IOException, HelpScreenException {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "                .addView()"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE)"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "                .addView()"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_configFolderAndViewWithArgs_returnsConfigCliArguments()"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "            throws ParseException, IOException, HelpScreenException {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "                .addView(OUTPUT_DIRECTORY_ABSOLUTE)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sinceDate_correctFormat_success() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(\"01/07/2017\").build();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "    public void untilDate_correctFormat_success() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d DEFAULT_INPUT_BUILDER.addUntilDate(\"30/11/2017\").build();"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    public void sinceDate_withExtraDate_success() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(\"\\\"01/07/2017 01/07/2018\\\"\").build();"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    public void untilDate_withExtraTime_success() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        String input \u003d DEFAULT_INPUT_BUILDER.addUntilDate(\"\\\"30/11/2017 10:10:10\\\"\").build();"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "    public void formats_inAlphanumeric_success() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d DEFAULT_INPUT_BUILDER.addFormats(\"java js css 7z\").build();"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes("
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "                Arrays.asList(\"java\", \"js\", \"css\", \"7z\"));"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedFormats, cliArguments.getFormats());"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_validGitRepoLocations_repoConfigurationListCorrectSize()"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "            throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cRepoConfiguration\u003e repoConfigs \u003d RepoSense.getRepoConfigurations((LocationsCliArguments) cliArguments);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(2, repoConfigs.size());"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_repoLocationsAndView_returnsLocationCliArguments() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "                .addView()"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedLocations, ((LocationsCliArguments) cliArguments).getLocations());"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_repoLocationsOnly_success() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(cliArguments.isAutomaticallyLaunching());"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedLocations, ((LocationsCliArguments) cliArguments).getLocations());"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_repoLocationsAndViewWithArgs_returnsLocationsCliArguments()"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "            throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "                .addView(OUTPUT_DIRECTORY_ABSOLUTE)"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedLocations, ((LocationsCliArguments) cliArguments).getLocations());"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_viewWithArgCwd_returnsViewCliArguments() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addView(new File(\".\").toPath()).build();"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ViewCliArguments);"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_configOrLocationsSimilar_success() throws Exception {"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).build();"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments configCliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(configCliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cRepoConfiguration\u003e actualRepoConfigs \u003d"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "                RepoSense.getRepoConfigurations((ConfigCliArguments) configCliArguments);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        input \u003d new InputBuilder().addRepos(TEST_REPO_BETA, TEST_REPO_CHARLIE, TEST_REPO_DELTA).build();"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments locationCliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(locationCliArguments instanceof LocationsCliArguments);"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cRepoConfiguration\u003e expectedRepoConfigs \u003d"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "                RepoSense.getRepoConfigurations((LocationsCliArguments) locationCliArguments);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(actualRepoConfigs, expectedRepoConfigs);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "    public void emptyArgs_defaultConfigFolderPath() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(new String[]{});"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(PROJECT_DIRECTORY.toString(), ("
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "                (ConfigCliArguments) cliArguments).getConfigFolderPath().toString());"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_repoAliases_sameResult() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addRepos(TEST_REPO_BETA).build();"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments repoAliasCliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        input \u003d new InputBuilder().add(String.format(\"--repos %s\", TEST_REPO_BETA)).build();"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments reposAliasCliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(repoAliasCliArguments, reposAliasCliArguments);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidRepoLocation_emptyRepoConfigurationList()"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "            throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addRepos(\"https://githubaaaa.com/asdasdasdasd/RepoSense\").build();"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cRepoConfiguration\u003e repoConfigs \u003d RepoSense.getRepoConfigurations((LocationsCliArguments) cliArguments);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(repoConfigs.isEmpty());"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d ParseException.class)"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "    public void absoluteConfigFolder_withoutRequiredConfigFiles_throwsParseException()"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "            throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "        Path absDirectory \u003d PROJECT_DIRECTORY.getParent().toAbsolutePath();"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addConfig(absDirectory).build();"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d ParseException.class)"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "    public void relativeConfigFolder_withoutRequiredConfigFiles_throwsParseException()"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "            throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        Path relDirectory \u003d PROJECT_DIRECTORY.getParent();"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addConfig(relDirectory).build();"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d ParseException.class)"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_notExistsConfigFolder_throwsParseException() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "        Path absConfigFolder \u003d PROJECT_DIRECTORY.resolve(\"non_existing_random_folder\");"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addConfig(absConfigFolder).build();"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d ParseException.class)"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_configCsvFileAsConfigFolder_throwsParseException() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addConfig(REPO_CONFIG_CSV_FILE).build();"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d ParseException.class)"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_missingConfigValue_throwsParseException() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addConfig(new File(\"\").toPath()).build();"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "    public void outputPath_nonExistentDirectory_success() throws ParseException, IOException, HelpScreenException {"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        Path nonExistentDirectory \u003d PROJECT_DIRECTORY.resolve(NONEXISTENT_DIRECTORY);"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        Path expectedRelativeOutputDirectoryPath \u003d nonExistentDirectory.resolve(ArgsParser.DEFAULT_REPORT_NAME);"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addOutput(nonExistentDirectory).build();"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(Files.isSameFile("
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "                expectedRelativeOutputDirectoryPath, cliArguments.getOutputFilePath()));"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d ParseException.class)"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sinceDate_unsupportedFormats_throwsParseException() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(\"01 July 17\").build();"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d ParseException.class)"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "    public void untilDate_unsupportedFormats_throwsParseException() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d DEFAULT_INPUT_BUILDER.addUntilDate(\"11/31/2017\").build();"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d ParseException.class)"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sinceDate_laterThanUntilDate_throwsParseException() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(\"01/12/2017\")"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "                .addUntilDate(\"30/11/2017\")"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d ParseException.class)"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "    public void formats_notInAlphanumeric_throwsParseException() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d DEFAULT_INPUT_BUILDER.addFormats(\".java\").build();"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d ParseException.class)"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_mutuallyExclusiveArgumentsConfigAndReposTogether_throwsParseException()"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "            throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "                .addRepos(TEST_REPO_REPOSENSE)"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d ParseException.class)"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_extraArgumentForIgnore_throwsParseException() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d DEFAULT_INPUT_BUILDER.addIgnoreStandaloneConfig().add(\"true\").build();"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_withTimezone_success() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "        String zoneId \u003d \"UTC+11\";"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "        zoneId \u003d \"UTC-1030\";"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "        input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "        input \u003d DEFAULT_INPUT_BUILDER.addTimezone(\"UTC+00\").build();"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(ZoneId.of(\"UTC\"), cliArguments.getZoneId());"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d ParseException.class)"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_incorrectTimezone_throwsParseException() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(\"UTC+\").build();"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test(expected \u003d ParseException.class)"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_timezoneWithoutArgument_throwsParseException() throws ParseException, HelpScreenException {"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(\"\").build();"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgsParser.parse(translateCommandline(input));"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "     * Ensures that {@code actualSinceDate} is exactly one month before {@code untilDate}."
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws AssertionError if {@code actualSinceDate} is not one month before {@code untilDate}."
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertDateDiffOneMonth(Date actualSinceDate, Date untilDate) {"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.setTime(untilDate);"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.HOUR_OF_DAY, 0);"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.MINUTE, 0);"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.SECOND, 0);"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.MILLISECOND, 0);"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.add(Calendar.MONTH, -1);"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "        assert actualSinceDate.equals(cal.getTime());"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "     * Ensures that {@code actualUntilDate} falls on the date of report generation with time at 23:59:59."
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws AssertionError if {@code actualUntilDate} does not fall on the date of report generation"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "     * with time at 23:59:59."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertDateDiffEndOfDay(Date actualUntilDate) {"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.HOUR_OF_DAY, 23);"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.MINUTE, 59);"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.SECOND, 59);"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "        cal.set(Calendar.MILLISECOND, 0);"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "        assert actualUntilDate.equals(cal.getTime());"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 26,
      "-": 599
    }
  },
  {
    "path": "src/test/java/reposense/template/GitTestTemplate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.template;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.After;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.AfterClass;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Before;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.BeforeClass;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.FileInfoAnalyzer;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.FileInfoExtractor;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.model.FileInfo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.model.FileResult;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.model.LineInfo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitCheckout;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitClone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.CommitHash;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.FileTypeTest;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoConfiguration;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoLocation;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.parser.InvalidLocationException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.FileUtil;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains templates for git testing."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "public class GitTestTemplate {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String TEST_REPO_GIT_LOCATION \u003d \"https://github.com/reposense/testrepo-Alpha.git\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String DISK_REPO_DISPLAY_NAME \u003d \"testrepo-Alpha_master\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String FIRST_COMMIT_HASH \u003d \"7d7584f\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String TEST_COMMIT_HASH \u003d \"2fb6b9b\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String MAIN_AUTHOR_NAME \u003d \"harryggg\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String FAKE_AUTHOR_NAME \u003d \"fakeAuthor\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String EUGENE_AUTHOR_NAME \u003d \"eugenepeh\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String YONG_AUTHOR_NAME \u003d \"Yong Hao TENG\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String MINGYI_AUTHOR_NAME \u003d \"myteo\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    protected static final String JAMES_AUTHOR_NAME \u003d \"jamessspanggg\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String JINYAO_AUTHOR_NAME \u003d \"jylee-git\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String LATEST_COMMIT_HASH \u003d \"136c6713fc00cfe79a1598e8ce83c6ef3b878660\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String EMPTY_TREE_HASH \u003d \"4b825dc642cb6eb9a060e54bf8d69288fbee4904\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING \u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            \"2d87a431fcbb8f73a731b6df0fcbee962c85c250\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final CommitHash EUGENE_AUTHOR_README_FILE_COMMIT_07052018 \u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            new CommitHash(EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING \u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            \"768015345e70f06add2a8b7d1f901dc07bf70582\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final CommitHash FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018 \u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            new CommitHash(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING \u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            \"8d0ac2ee20f04dce8df0591caed460bffacb65a4\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final CommitHash MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018 \u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            new CommitHash(MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String NONEXISTENT_COMMIT_HASH \u003d \"nonExistentCommitHash\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static RepoConfiguration config;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Before"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public void before() throws InvalidLocationException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        config \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_GIT_LOCATION), \"master\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setAuthorList(Collections.singletonList(getAlphaAllAliasAuthor()));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setFormats(FileTypeTest.DEFAULT_TEST_FORMATS);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeClass"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void beforeClass() throws Exception {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteRepos();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        config \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_GIT_LOCATION), \"master\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setFormats(FileTypeTest.DEFAULT_TEST_FORMATS);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        GitClone.clone(config);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @AfterClass"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void afterClass() throws IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteRepos();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @After"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public void after() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkout(config.getRepoRoot(), \"master\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void deleteRepos() throws IOException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.deleteDirectory(FileUtil.REPOS_ADDRESS);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates the information for test file."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public FileInfo generateTestFileInfo(String relativePath) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfo fileInfo \u003d FileInfoExtractor.generateFileInfo(config.getRepoRoot(), relativePath);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        return fileInfo;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public FileResult getFileResult(String relativePath) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfo fileinfo \u003d generateTestFileInfo(relativePath);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        return FileInfoAnalyzer.analyzeFile(config, fileinfo);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts the correctness of file analysis with regards to the contribution"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     * made by author named in {@code FAKE_AUTHOR_NAME}."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public void assertFileAnalysisCorrectness(FileResult fileResult) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        for (LineInfo line : fileResult.getLines()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            if (line.getContent().startsWith(\"fake\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                Assert.assertEquals(line.getAuthor(), new Author(FAKE_AUTHOR_NAME));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                Assert.assertNotEquals(line.getAuthor(), new Author(FAKE_AUTHOR_NAME));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code Author} that has git id and aliases of all authors in testrepo-Alpha, so that no commits"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     * will be filtered out in the `git log` command."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Author getAlphaAllAliasAuthor() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        Author author \u003d new Author(MAIN_AUTHOR_NAME);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        author.setAuthorAliases(Arrays.asList(FAKE_AUTHOR_NAME, EUGENE_AUTHOR_NAME, YONG_AUTHOR_NAME));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        return author;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 130
    }
  },
  {
    "path": "src/test/java/reposense/util/TestUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitLog;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoConfiguration;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains testing related functionalities."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class TestUtil {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final int[] END_OF_DAY_TIME \u003d {23, 59, 59};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static final int[] START_OF_DAY_TIME \u003d {0, 0, 0};"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_COMPARING_FILES \u003d \"Comparing files %s \u0026 %s\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_LINE_CONTENT_DIFFERENT \u003d \"Content different at line number %d:\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"\u003c\u003c %s\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"\u003e\u003e %s\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_LINES_LENGTH_DIFFERENT \u003d \"The files\u0027 lines count do not match.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the files\u0027 contents are the same."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Also prints out error message if the lines count are different,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * else prints out the first line of content difference (if any)."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean compareFileContents(Path expected, Path actual) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return compareFileContents(expected, actual, 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the files\u0027 contents are the same."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * Also prints out error message if the lines count are different,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * else prints out maximum {@code maxTraceCounts} lines of content difference (if any)."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean compareFileContents(Path expected, Path actual, int maxTraceCounts) throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        int traceCounts \u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(String.format(MESSAGE_COMPARING_FILES, expected, actual));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] expectedContent \u003d new String(Files.readAllBytes(expected))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                .replace(\"\\r\", \"\").split(\"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] actualContent \u003d new String(Files.readAllBytes(actual))"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                .replace(\"\\r\", \"\").split(\"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c Math.min(expectedContent.length, actualContent.length); i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!expectedContent[i].equals(actualContent[i])) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                        String.format(MESSAGE_LINE_CONTENT_DIFFERENT, i + 1, expectedContent[i], actualContent[i]));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                if (++traceCounts \u003e\u003d maxTraceCounts) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        if (expectedContent.length !\u003d actualContent.length) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(MESSAGE_LINES_LENGTH_DIFFERENT);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (traceCounts \u003e\u003d maxTraceCounts) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if {@code expected} directory has all files with same content as {@code actual} directory."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean compareDirectories(Path expected, Path actual) throws IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPath\u003e expectedPaths \u003d Files.walk(expected)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                .sorted()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPath\u003e actualPaths \u003d Files.walk(actual)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                .sorted()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        if (expectedPaths.size() !\u003d actualPaths.size()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c expectedPaths.size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!(Files.isDirectory(expectedPaths.get(i)) || Files.isDirectory(actualPaths.get(i)))"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 !TestUtil.compareFileContents(expectedPaths.get(i), actualPaths.get(i))) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates and returns a {@code Date} object with the specified {@code year}, {@code month}, {@code day}."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    private static Date getDate(int year, int month, int date, int[] time) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Calendar"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                .Builder()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                .setDate(year, month, date)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                .setTimeOfDay(time[0], time[1], time[2])"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                .build()"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                .getTime();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "     * Wrapper for {@code getDate} method to get since date with time 00:00:00"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    public static Date getSinceDate(int year, int month, int date) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return getDate(year, month, date, START_OF_DAY_TIME);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "     * Wrapper for {@code getDate} method to get until date with time 23:59:59"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    public static Date getUntilDate(int year, int month, int date) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return getDate(year, month, date, END_OF_DAY_TIME);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * Compares attributes of {@code expectedRepoConfig} and {@code actualRepoConfig}."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws AssertionError if any attributes fail equality check."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void compareRepoConfig(RepoConfiguration expectedRepoConfig, RepoConfiguration actualRepoConfig) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedRepoConfig, actualRepoConfig);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c expectedRepoConfig.getAuthorList().size(); i++) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            compareAuthor(expectedRepoConfig.getAuthorList().get(i), actualRepoConfig.getAuthorList().get(i));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     * Compares attributes of {@code expectedAuthor} and {@code actualAuthor}, with exception of it\u0027s display name."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     * The display name is not compared as it varies with object construction."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     * It is a transient value and it is not needed for object matching."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws AssertionError if any attributes fail equality check."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void compareAuthor(Author expectedAuthor, Author actualAuthor) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedAuthor.getGitId(), actualAuthor.getGitId());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedAuthor.getIgnoreGlobList(), actualAuthor.getIgnoreGlobList());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(expectedAuthor.getAuthorAliases(), actualAuthor.getAuthorAliases());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the {@code expectedNumberCommits} is equal to the expected number of commits captured in"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code gitLogResult}."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean compareNumberExpectedCommitsToGitLogLines(int expectedNumberCommits, String gitLogResult) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        // if git log result is empty, then there are no commits"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        if (gitLogResult.isEmpty()) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            return expectedNumberCommits \u003d\u003d 0;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        // (actualSplitGitLogResilt - 1) as the 1st token is always empty."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        return expectedNumberCommits \u003d\u003d (gitLogResult.split(GitLog.COMMIT_INFO_DELIMITER).length - 1);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the {@code expectedNumberFilesChanged} is equal to the actual number of files changed in"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code gitLogResult}."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean compareNumberFilesChanged(int expectedNumberFilesChanged, String gitLogResult) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        // if git log result is empty, then there are no files changed"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        if (gitLogResult.isEmpty()) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            return expectedNumberFilesChanged \u003d\u003d 0;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] changesLogged \u003d gitLogResult.split(GitLog.COMMIT_INFO_DELIMITER);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        HashSet\u003cString\u003e filesChanged \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        // start from index 1 as index 0 is always empty."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 1; i \u003c changesLogged.length; i++) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            filesChanged.addAll(getFilesChangedInCommit(changesLogged[i]));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        return filesChanged.size() \u003d\u003d expectedNumberFilesChanged;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the {@code set} of files changed in the commit {@code rawCommitInfo}."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Set\u003cString\u003e getFilesChangedInCommit(String rawCommitInfo) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e filesChanged \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] commitInfo \u003d rawCommitInfo.replaceAll(\"\\n+$\", \"\").split(\"\\n\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        int fileChangedNum \u003d Integer.parseInt(commitInfo[commitInfo.length - 1].trim().split(\" \")[0]);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int fileNum \u003d 0; fileNum \u003c fileChangedNum; fileNum++) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            filesChanged.add(getFileChanged(commitInfo[commitInfo.length - 2 - fileNum]));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        return filesChanged;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the file changed given a {@code rawFileChangedString}."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String getFileChanged(String rawFileChangedString) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        String fileChanged \u003d rawFileChangedString.split(\"\\\\| \")[0].trim();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fileChanged.contains(\"\u003d\u003e\")) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            fileChanged \u003d fileChanged.substring(fileChanged.indexOf(\"\u003d\u003e \") + 3);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        return fileChanged;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the test environment is on Windows OS."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isWindows() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        return System.getProperty(\"os.name\").toLowerCase().contains(\"win\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 18,
      "-": 198
    }
  }
]

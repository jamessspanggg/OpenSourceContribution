{
  "authorDailyContributionsMap": {
    "jamessspanggg": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-05-31",
        "commitResults": [
          {
            "hash": "3bbe5fccfc04aeb2742d814fef4fb8f534f3b55e",
            "messageTitle": "[#672] Toolbar: set \u0027commit\u0027 as default for granularity (#684)",
            "messageBody": "The default value of granularity is `Day`.\r\n\r\n`Commit` as granularity is more closer to reality because users are more\r\nlikely to observe per commits rather than per day/week. Users can choose\r\na more summarized view at their discretion.\r\n\r\nLet\u0027s change the default value for granularity to `Commit`.\r\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 2,
        "date": "2019-06-03",
        "commitResults": [
          {
            "hash": "7c0750c510003722f72ad363cb50ce759aa6735a",
            "messageTitle": "[#635] CodeView: add line number to code (#669)",
            "messageBody": "The code view displays only the code without the line number.\r\n\r\nIt is hard to associate a specific line from the code view with the\r\nactual code without the line number.\r\n\r\nLet\u0027s update the code view to display the line numbers by adding an\r\narray in each segment to keep track of the line numbers of the code.",
            "insertions": 32,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 10,
        "date": "2019-06-05",
        "commitResults": [
          {
            "hash": "ad1e0265a549888e25fc4b94759cca4bea575785",
            "messageTitle": "[#702] Fix url directing to the wrong branch (#704)",
            "messageBody": "The Octocat icon always links to the master branch of a GitHub \r\nrepository.\r\n\r\nOctocat icons of summary charts that are not within the master \r\nbranch will still point to the URL of the master branch.\r\n\r\nLet\u0027s update the URL to point to their respective branch.",
            "insertions": 18,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2019-06-15",
        "commitResults": [
          {
            "hash": "27152fb10573899b79fe93ffc2e211329ce9a4fc",
            "messageTitle": "[#712] ChartView: fix misalignment of chart title (#715)",
            "messageBody": "When \u0027breakdown by file format\u0027 is checked, the title of a chart aligns\r\nbeside the contribution bars of the previous chart when the\r\ncontribution bars\u0027 height of exceeds the margin allocated.\r\n\r\nLet\u0027s fix this misalignment by adding css property \u0027clear:left\u0027 to the\r\nchart title so that the chart title will always start at a new line.",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 10,
        "date": "2019-06-16",
        "commitResults": [
          {
            "hash": "5a405e1be35dc5ae8ccf832dd5caf27a94f699d4",
            "messageTitle": "[#689] v_summary.js: remove unused remnants code (#733)",
            "messageBody": "Unused code was found in v_summary.js; specifically code associated\r\nwith the variable, filterSortReverse. They are remnants left behind by\r\nthe improvement of sort controls introduced in #618.\r\n\r\nThe unused code was originally bind to the reverse checkbox in the\r\nolder version of RepoSense. As the checkbox was replaced by the\r\nintroduction of ascending and descending options in #618, the code is\r\nnow unused and redundant. This is also partially due to the complexity\r\nbrought upon by new sorting group, the reversing has to be done within\r\nthe code of descending\u0027s logic, rendering those code not reusable.\r\n\r\nLet\u0027s remove the unused code associated to the variable, \r\nfilterSortReverse and it\u0027s implementations.",
            "insertions": 0,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 22,
        "date": "2019-06-26",
        "commitResults": [
          {
            "hash": "194bd125a57a63f2e764a348b7549f9bba18213e",
            "messageTitle": "[#645] CodeView: improve UI of sort bar (#716)",
            "messageBody": "In the UI of sortbar: \r\n- The font size of 3 controls (searchbar, checkbox, sort) are different\r\n- The sorting option\u0027s position is below the radio controls\r\n- The font of reverse checkbox is red in colour\r\n- The gaps between sorting option and radio controls is not \r\nstandardized\r\n\r\nLets:\r\n- Standardize the font size of all 3 controls so that the sort bar\r\nlooks neater\r\n- Shift sorting option to be above radio controls to further\r\nemphasize the number of radio buttons better\r\n- Set the font of reverse checkbox to be black in color to\r\ndifferentiate from other checkboxes and to be consistent with the\r\nChartView\r\n- Standardize the gaps between sorting option and radio controls",
            "insertions": 28,
            "deletions": 19
          },
          {
            "hash": "5ad348098a9baa2effea7646bf0463da8cae5dd2",
            "messageTitle": "[#720] Set command-click to activate zoom-in feature for macOS devices (#730)",
            "messageBody": "Ctrl + mouse left-click is the default combination to activate the\r\nzoom-in feature for all environment.\r\n\r\nHowever, as the combination is registered as a right-click in macOS\r\nenvironment, users of macOS devices wouldn\u0027t be able to activate the\r\ncorresponding feature.\r\n\r\nLet\u0027s modify the zoom-in controls to allow command click for macOS \r\ndevices and control click for all other devices.",
            "insertions": 8,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-06-28",
        "commitResults": [
          {
            "hash": "d09194c65d9016c56dfc11d341b91cde5c0d1503",
            "messageTitle": "[#741] Fix view code icon not opening CodeView (#744)",
            "messageBody": "The splitCommitsWeek() method executes a dateRounding() method that \r\nrounds up the filterSinceDate to the next nearest Monday. When the \r\nreport page is reloaded, the filterSinceDate is set to the value of \r\nthe \u0027since\u0027 hash by the getDates() method. Since within the \r\ngetFiltered() method, splitCommitsWeek() is executed before\r\ngetDates(), the filterSinceDate stores an empty string which is \r\npassed to the dateRounding() method and returns a NaN value. \r\n\r\nSince splitCommitsWeek() method is only called when granularity is \r\n\u0027week\u0027, if users were to set granularity as \u0027week\u0027 and reload the page,\r\nclicking on the view code icon does not open the CodeView panel. \r\n\r\nLet\u0027s shift the getDates() method to be executed before \r\nsplitCommitsWeek() to make sure that splitCommitWeek() method\r\nis called with a valid filterSinceDate, which fixes the described bug.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2019-06-29",
        "commitResults": [
          {
            "hash": "63ca0a11c8351729866d181a152742b2333c987d",
            "messageTitle": "[#680] Vue: fix error message in development mode (#742)",
            "messageBody": "An error message stating \"error compiling template: - \u003ctemplate\u003e\r\ncannot be keyed. Place the key on real elements instead.\" was found in\r\nChrome browser\u0027s console when running Vue in development mode for our\r\nreport.\r\n\r\nAlthough the Vue development tool still functions correctly, it \r\nhighlights an issue with the existing style and possibility degrades \r\nthe efficiency of the operations.\r\n\r\nLet\u0027s remove the Chrome browser console error by shifting the binding \r\nof keys from the \u003ctemplate\u003e tag to the inner \u003clabel\u003e tag.",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 68,
        "deletions": 21,
        "date": "2019-07-03",
        "commitResults": [
          {
            "hash": "651df45df4d9a91cf5557aabc030c309e93f20de",
            "messageTitle": "[#770] Add placeholder for repositories with no author found (#777)",
            "messageBody": "Repositories with no author specified in the configuration files as\r\nwell as no commits made during the specified period do not appear in\r\nthe report.\r\n\r\nThis is caused by a TypeError in JavaScript. When an author\r\nconfiguration can\u0027t be found for a repository, RepoSense will perform\r\nthe identification of the authors using the commits. However, in the\r\nevent that even commits cannot be found, author information will not be\r\navailable and result in the error stated above.\r\n\r\nAs users may not notice the disappearance of these repositories, let\u0027s\r\nadd a placeholder with an error message of \u0027NO AUTHOR WITH COMMITS\r\nFOUND WITHIN THIS PERIOD OF TIME\u0027 to the affected repositories to\r\ninform users of the occurrence of this error.",
            "insertions": 68,
            "deletions": 21
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 5,
        "date": "2019-07-14",
        "commitResults": [
          {
            "hash": "d45513d6692248bfa38808e3b045b4ce51039c0c",
            "messageTitle": "[#791] CodeView: bugfix for unexpected colors in line numbers (#792)",
            "messageBody": "The css property of line number only overwrites the color property of \r\nclasses \u0027hljs-number\u0027 and \u0027hljs-comment\u0027. Others classes such as\r\n\u0027hljs-quote\u0027, \u0027hljs-name\u0027 and more are not overwritten.\r\n\r\nThis will cause the color property of certain line numbers to inherit \r\nfrom the hljs classes that are not overwritten.\r\n\r\nLet\u0027s overwrite all hljs classes to ensure the color property of the \r\nline number to always be grey.",
            "insertions": 2,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 807,
        "deletions": 754,
        "date": "2019-07-18",
        "commitResults": [
          {
            "hash": "e8bf034aaf33fa1a59c8933ffaa22dfdf82048fb",
            "messageTitle": "[#522] Implement style checker on .scss files (#803)",
            "messageBody": "RepoSense currently has CheckStyle and ESLint to check our java and \r\njavascript code styles automatically. However, .scss files are not \r\ncovered by any of these tools.\r\n\r\nLet\u0027s implement stylelint to check the code styles of .scss files.",
            "insertions": 807,
            "deletions": 754
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 1,
        "date": "2019-07-20",
        "commitResults": [
          {
            "hash": "174d06f15417b6feb7fc44bc608a478518a66b34",
            "messageTitle": "[#764] Toolbar: fix search functionality for Safari users (#797)",
            "messageBody": "The \u0027enter\u0027 key submits html forms in browsers such as Chrome and \r\nFirefox, but not in Safari.\r\n\r\nSince the getFiltered() method is executed on submit of the html form,\r\nSafari browser users are unable to activate the search functionality \r\nwhen search value is keyed in and \u0027enter\u0027 key is pressed.\r\n\r\nLet\u0027s move the execution of getFiltered() method to be within \r\nupdateFilterSearch(), to ensure that Safari users are also able to \r\nactivate the search functionality.",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "f6520543bcb0c7ef1d0365a74a87958caca89e92",
            "messageTitle": "[#763] v_summary.js: remove redundant calls to getFiltered() (#800)",
            "messageBody": "When reloading the report page, the data in v_summary such as\r\nfilterSinceDate, filterUntilDate, filterTimeFrame etc will change based \r\non the URL hash values. The changes in data will trigger the watchers \r\nfor those data, and each of them will call getFiltered() method.\r\n\r\nOnly one call for getFiltered() is required after rendering the filter \r\nhash, the other getFiltered() calls by the watchers are redundant.\r\nWhen the report is large in size, repeatedly executing getFiltered()\r\nwhen reloading the report will also significantly affect the loading \r\nperformance of our report.\r\n\r\nLet\u0027s only allow watchers to execute getFiltered() after the first \r\ncycle of watcher updates to prevent redundant calls to getFiltered().",
            "insertions": 9,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 26,
        "date": "2019-07-22",
        "commitResults": [
          {
            "hash": "c8f248d9283fe86270e1f2906a7812882742bff2",
            "messageTitle": "[#724] Modify zoom-in feature to based on selected granularity (#729)",
            "messageBody": "The zoom-in feature opens the zoom panel to show the selected\r\nsub-range of a ramp chart in terms of \u0027commit\u0027. This feature, however, \r\nonly works when the granularity is set to commit or day.\r\n\r\nUsers will not be able to use this feature with granularity set to week,\r\nas the method getUserCommits() gets all user commits by interating \r\nthrough an undefined key object \u0027dayCommits\u0027, which stops the method\r\nexecution.\r\n\r\nMoreover, long sub-range of ramp charts will contain dense information \r\nwith ramp slices overlapping each other. This happens even when \r\ngranularity is set to day or week, which makes it difficult for users to \r\nnotice substantial info on these ramp charts.\r\n\r\nLet\u0027s correctly implement the zoom-in feature when granularity is set to\r\nweek. Furthermore, let\u0027s modify the feature for the ramp chart within \r\nzoom panel to be in terms of the granularity selected, which allow users \r\nto observe selected granularity of commits more clearly within the \r\nzoomed-in range.",
            "insertions": 42,
            "deletions": 19
          },
          {
            "hash": "eb0e20f6cfda5485770df37e8f387082452d88c7",
            "messageTitle": "[#780] v_summary.js: remove Vue watcher for repos (#783)",
            "messageBody": "A redundant Vue watcher was found in v_summary.js, specifically the Vue\r\nwatcher for repos, as repos should remain constant and not be modified.\r\n\r\nThis is primarily used to call the getUsers() method, however this \r\nitself is redundant as getUsers() shouldn\u0027t be called more than once \r\nas it tends to overwrite repos with the same set of values.\r\n\r\nAdditionally, using Vue watcher for large data, such as repos, affects \r\nthe performance of the report.\r\n\r\nLet\u0027s remove the Vue watcher for repos and modify getUsers() to be \r\ncalled only once when page is firstly loaded.",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "790840f5c3130b829cb655609d5e481b5932991d",
            "messageTitle": "[#820] Cypress: add sinceDate in command arguments (#821)",
            "messageBody": "The arguments used to generate the sample report used in Cypress \r\ntests is \u0027--repo https://github.com/reposense/RepoSense.git --view\u0027. \r\n\r\nSince sinceDate and untilDate is not provided in the arguments, the \r\nreport duration will be from one month before today\u0027s date until\r\ntoday\u0027s date. This causes the current sample report used for Cypress\r\ntests to contain empty ramp charts, which does not mimic a realistic\r\nreport.\r\n\r\nLet\u0027s add a \u0027--since d1\u0027 argument to the existing arguments, which \r\ngenerates a more realistic sample report that contains the commits\r\nmade from start until today\u0027s date.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 9,
        "date": "2019-07-24",
        "commitResults": [
          {
            "hash": "1378e60b66d2493595efc17eae763327d266faa8",
            "messageTitle": "[#828] Revert \"v_summary.js: remove redundant calls to getFiltered() (#800)\" (#832)",
            "messageBody": "PR #800 was intended to ensure the getFiltered() method to be executed \r\nonly once when the page is reloaded. The solution used was to set \r\nboolean canGetFiltered to true in beforeUpdate() lifecycle hook, \r\npreventing the execution of getFiltered() before the lifecycle hook.\r\nHowever, the beforeUpdate() lifecycle hook will only be executed when \r\nthere are changes to the DOM. \r\n\r\nInstances where the page is reloaded and there are no changes to the DOM\r\nwill not set boolean canGetFiltered to true, preventing getFiltered() to \r\nbe executed until the DOM has changed.\r\n\r\nLet\u0027s revert PR #800 to allow getFiltered() to be executed even when \r\nthere are no changes to the DOM.",
            "insertions": 0,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 18,
        "date": "2019-07-27",
        "commitResults": [
          {
            "hash": "6873b4e5d289f1c898118a607c2c4b1e65c67e70",
            "messageTitle": "[#809] DeveloperGuide: update the HTML report section (#810)",
            "messageBody": "The HTML report section in our DG contains outdated info such as the\r\nreport summary diagram, sequence diagrams and the list of js files.\r\n\r\nLet\u0027s perform promptly due update, revise the HTML report section with\r\nthe latest report summary diagram, Vue lifecycle diagram, sequence\r\ndiagrams and the descriptions of the recently added js files such as\r\nv_ramp, v_zoom, and v_segment.",
            "insertions": 32,
            "deletions": 18
          }
        ]
      },
      {
        "insertions": 105,
        "deletions": 15,
        "date": "2019-07-28",
        "commitResults": [
          {
            "hash": "8f7db355698cb2430b536c32557339c357607378",
            "messageTitle": "[#723] Report: fix modifying dates for Safari users (#801)",
            "messageBody": "Safari browser users are unable to modify sinceDate and untilDate in\r\nthe report.\r\n\r\nThis is due to the datepickers used are HTML5 elements; they are not\r\nsupported by Safari. Furthermore, the alternative to modify the date\r\nfields, through the keydown events, are disabled.\r\n\r\nLet\u0027s allow Safari browser users to use a text-type input for their\r\nsinceDate and untilDate inputs. They can modify the dates by\r\nkeying the numeric date values into the date fields followed by hitting\r\nthe key, `enter`.",
            "insertions": 84,
            "deletions": 4
          },
          {
            "hash": "acc66d3caae0072397b592eebe20aa6b6863b227",
            "messageTitle": "[#778] ChartView: add zoom tab button (#796)",
            "messageBody": "In addition to zooming into a range of ramp slices, the zoom tab also\r\nshows the breakdown of commits that are within the zoom range. This \r\nfunctionality however, is not encompassed for the entire ramp chart.\r\n\r\nLet\u0027s add a button that opens the zoom tab for the entire ramp chart.",
            "insertions": 21,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 343,
        "deletions": 121,
        "date": "2019-07-31",
        "commitResults": [
          {
            "hash": "80a592516d07d23a54932a78209bca9f0bc1a498",
            "messageTitle": "[#662] ChartView: add merge group option (#752)",
            "messageBody": "Within ChartView, a group has multiple rows of ramp charts that belongs\r\nto the group itself.\r\n\r\nIt may be difficult for users to analyse the contribution of the entire\r\ngroup or to compare the contribution between groups.\r\n\r\nLet\u0027s add a merge group checkbox such that when the checkbox is\r\nchecked, all ramp charts of the same group will be merged together\r\nto form a single ramp chart. This allows users to easily analyse \r\nthe total contribution on the group level.",
            "insertions": 131,
            "deletions": 26
          },
          {
            "hash": "42b6b574f474cf6aed2acfc24bf2142a487d768e",
            "messageTitle": "[#846] CodeView: fix show ramps for this period button (#847)",
            "messageBody": "Clicking on show ramp chart for this period button in the commits\r\npanel calls updateDateRange(), which recomputes the duration of the\r\nramp chart according to the drags by the user. The method proceeds \r\nto call deactivateAllOverlays(), which removes the drags by the user.\r\n\r\nSince no more drags are left after the first execution of \r\nupdateDateRange(), clicking on the show ramp chart for this period\r\nbutton will not be able to activate updateDateRange().\r\n\r\nLet\u0027s use the zoom since date and until date to recompute the duration\r\nof the ramp chart, instead of using the drags. This will ensure that\r\nclicking on the button will always show the ramp chart for the \r\ndesignated period.",
            "insertions": 7,
            "deletions": 16
          },
          {
            "hash": "9018b9073abfea6c10609b96b0d85e4d99ccaf97",
            "messageTitle": "[#839] Set config to be inclusive of until date (#840)",
            "messageBody": "The until date in the config does not match with the until date used in\r\ngit rev-list. Until date in the config is in 00:00:00 time whereas\r\nuntil date used in git rev-list uses the time 23:59:59 of the day\r\nbefore.\r\n\r\nThis discrepancy can cause the content and author of each line detected\r\nby git rev-list to be different, and have caused a disparity in the\r\noutput results in #789.\r\n\r\nLet\u0027s standardise the until date in the config to use time of 23:59:59 \r\nto match with the until date used in git rev-list.\r\n\r\nReference:\r\nhttps://github.com/reposense/RepoSense/pull/789#discussion_r307350220",
            "insertions": 111,
            "deletions": 39
          },
          {
            "hash": "1c3bcf6e6fe863f4e06a1605d718659594e491b7",
            "messageTitle": "[#754] Url: include date hashes only when modified (#757)",
            "messageBody": "The initial URL of the report page captures a start and until \r\nhash parameter even when the users did not specify the start date\r\nand end date fields in the CLI.\r\n\r\nThe URL is then shared to others. If there are further updates to the \r\nreport, the URL will still navigate to the report page with ramps up \r\nuntil the original start date and until date instead of the most\r\nupdated dates which may include more recent/older commits.\r\n\r\nLet’s modify the report’s initial URL to not capture the start and end \r\ndate hashes when users did not specify the respective date field in\r\nthe CLI. Without the start date or end date hash parameter in the URL,\r\nthe URL will navigate to the report with the most updated start date\r\nand end date.",
            "insertions": 86,
            "deletions": 30
          },
          {
            "hash": "06c5a05d9256dbd53c2565228226b9556555afa0",
            "messageTitle": "[#842] Fix out of bound ramp slices (#844)",
            "messageBody": "Ramp slices appear outside of the ramp charts in week granularity.\r\n\r\nThis is due to the implementation of splitCommitsWeek() does not take\r\ninto account when the duration between since date and until date is\r\nless than one week. When the duration is less than a week, the\r\nalgorithm calculates commits up to the following Monday, even if they\r\nare beyond the until date. Hence, it causes a distortion in the ui.\r\n\r\nLet\u0027s revamp the logic within splitCommitsWeek to check, and trim any\r\ncommits beyond the until date.",
            "insertions": 8,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 53,
        "deletions": 30,
        "date": "2019-08-01",
        "commitResults": [
          {
            "hash": "7ff4d5de6c6a3f3103d526cfeaeff8c38f137ec1",
            "messageTitle": "Zoom Tab: revamp header ui (#848)",
            "messageBody": "The zoom tab header remains the same irregardless of the grouping\r\noption (authors, repos or none). The period of the zoom tab is also not\r\nshown in the zoom tab.\r\n\r\nThis creates a problem when the merge group option is used; a merged\r\ngroup may consists of more than one chart, and the title used in the\r\nheader might not apply to all the ramps within the merged chart.\r\n\r\nLet\u0027s modify the UI of the zoom tab title to use a new sequence:\r\n`group title` -\u003e `chart title` -\u003e `period of zoom tab` -\u003e\r\n`granularity`, and hide the chart title when the merge group option is\r\nchecked.\r\n\r\nLet\u0027s also modify the authorship\u0027s title format to match with the zoom\r\ntab\u0027s title format as well.",
            "insertions": 53,
            "deletions": 30
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 4,
        "date": "2019-08-09",
        "commitResults": [
          {
            "hash": "6dc9ee3595b1c98c28b32339715fe8b5295cd953",
            "messageTitle": "[#851] Fix url directing to wrong repository when merge group (#854)",
            "messageBody": "When the merge group option is checked, charts are grouped by\r\nauthors and granularity is set to \u0027commit\u0027, the url of some commits \r\nmay point to the wrong repository.\r\n\r\nThis is due to our current structure of the merged groups, where each\r\nmerged author stores only one repository name even though they may \r\nhave contributed to more than one repository. This causes all url \r\nof commits to point to the same repository.\r\n\r\nLet\u0027s bind the repository name to each commit when merge group \r\noption is checked to ensure that all url of commits point to the \r\ncorrect repository.",
            "insertions": 17,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2019-09-01",
        "commitResults": [
          {
            "hash": "8e0a89e06225aa5f8d58e0586082f2e811fe24fb",
            "messageTitle": "ChartView: modify the sorting of the authors to use display names (#880)",
            "messageBody": "The sorting of the author by title is according to the authors\u0027 \r\nGitHub usernames.\r\n\r\nGithub usernames are strings that users have no control over, \r\nan unconfigurable field. Therefore, sorting according to it does not\r\nhave much value to the user, should she chose to configure the display\r\nnames.\r\n\r\nLet\u0027s modify the sorting of author names to be according to the\r\nauthors\u0027 display names.",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 14,
        "date": "2019-09-05",
        "commitResults": [
          {
            "hash": "816bb1a856387ca848504ae279bc2a4b81f4a308",
            "messageTitle": "[#858] Restore authorship tab (#874)",
            "messageBody": "Authorship tab is not restorable after refreshing the page.\r\n\r\nRestoring authorship tab requires the since and until date hashes \r\nwhereas PR #757 has made changes where the date hashes will not \r\nbe captured in the URL if not specified by the user.\r\n\r\nLet\u0027s \r\n- use the window\u0027s since and until date to restore the authorship \r\n  tab if the date hashes are unavailable. \r\n- move the restoring of tab hashes to be executed after \r\n  loadSummary() to ensure that the window\u0027s since and until date is \r\n  available.\r\n- extract the deactivation of tab pane to a method instead of using\r\n  the updated hook as the updated hook will be called repeatedly \r\n  whenever there are data changes that affect the DOM.\r\n",
            "insertions": 22,
            "deletions": 14
          }
        ]
      },
      {
        "insertions": 43,
        "deletions": 0,
        "date": "2019-12-20",
        "commitResults": [
          {
            "hash": "008f48fc20af630d857cd65bf11e96d05e19559a",
            "messageTitle": "[#46] Show total time after batch processing (#758)",
            "messageBody": "After running the CLI command, the total time taken to process and \r\ngenerate the report is not shown in the console output.\r\n\r\nUsers might find it useful to keep track of the time taken to \r\ngenerate the report.\r\n\r\nLet\u0027s use the logger to output the total time taken from running the \r\nCLI command until the report is generated.\r\n",
            "insertions": 43,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 42,
        "date": "2019-12-31",
        "commitResults": [
          {
            "hash": "2b2a9f3666d7c14d0c0ebe05b26660d0bf7827ba",
            "messageTitle": "[#785] ChartView: fix authors with unaccounted lines (#789)",
            "messageBody": "The git blame command used in RepoSense contains the option -w, which\r\nignores whitespace when comparing the parent’s version and the child’s\r\nto find where the lines came from.\r\n\r\nWhen an author did not change the content but only the position of\r\nspecific lines of code, the previous author will be recognised as the \r\nauthor that changed these lines. If the previous author did not\r\ncontribute during the analysis period, his/her ramp chart will be\r\nempty while the contribution bar will be present.\r\n\r\nLet\u0027s add an extra check in aggregateBlameInfo for lines of code with\r\nthe author committed date that is not within the duration of \r\nspecified since date and until date. Those lines of code\u0027s author will\r\nbe set to unknown, which will resolve the issue above.",
            "insertions": 49,
            "deletions": 42
          }
        ]
      }
    ]
  },
  "authorFinalContributionMap": {
    "jamessspanggg": 1194
  },
  "authorFileTypeContributionMap": {
    "jamessspanggg": {
      "json": 29,
      "yml": 1,
      "md": 35,
      "md": 1,
      "pug": 40,
      "pug": 9,
      "scss": 284,
      "scss": 194,
      "js": 2,
      "js": 27,
      "js": 47,
      "js": 6,
      "js": 24,
      "js": 172,
      "js": 10,
      "pug": 15,
      "json": 5,
      "java": 6,
      "java": 21,
      "java": 4,
      "java": 2,
      "java": 3,
      "java": 12,
      "java": 3,
      "java": 3,
      "java": 6,
      "java": 18,
      "java": 5,
      "java": 20,
      "java": 3,
      "java": 14,
      "java": 4,
      "java": 7,
      "java": 39,
      "java": 2,
      "json": 14,
      "json": 3,
      "json": 14,
      "json": 3,
      "json": 3,
      "java": 24,
      "java": 3,
      "java": 1,
      "java": 2,
      "java": 2,
      "java": 4,
      "java": 4,
      "java": 26,
      "java": 18
    }
  },
  "authorContributionVariance": {
    "jamessspanggg": 12420.237
  },
  "authorDisplayNameMap": {
    "jamessspanggg": "James Pang"
  }
}

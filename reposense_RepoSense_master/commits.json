{
  "authorDailyContributionsMap": {
    "jamessspanggg": [
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2019-05-17",
        "commitResults": [
          {
            "hash": "adb48f4e903be700b33b953457ca5b69df4908e8",
            "messageTitle": "[#652] ChartView: fix url directing to wrong repository (#655)",
            "messageBody": "The Octocat icon links to a GitHub repository by using the index 0 to\r\nget the URL of the first repository.\r\n\r\nWhen summary charts are grouped by Author, different repositories \r\nunder the same Author to all link to the same URL as the first \r\nrepository.\r\n\r\nLet\u0027s update the URL to point to their respective repository by\r\nreferencing with the correct index.",
            "fileTypesAndContributionMap": {
              "jade": {
                "insertions": 2,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2019-05-31",
        "commitResults": [
          {
            "hash": "3bbe5fccfc04aeb2742d814fef4fb8f534f3b55e",
            "messageTitle": "[#672] Toolbar: set \u0027commit\u0027 as default for granularity (#684)",
            "messageBody": "The default value of granularity is `Day`.\r\n\r\n`Commit` as granularity is more closer to reality because users are more\r\nlikely to observe per commits rather than per day/week. Users can choose\r\na more summarized view at their discretion.\r\n\r\nLet\u0027s change the default value for granularity to `Commit`.\r\n",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "3bf07fd69586874cf3238e9b28ea025b96f7ba97",
            "messageTitle": "[#699] Report: standardize the author\u0027s name display (#701)",
            "messageBody": "When summary charts are grouped by none or repo/branch, author\u0027s name\r\ndisplay shows only the display name. Whereas when grouped by author,\r\nthe name display shows the display name as well as GitHub username.\r\n\r\nThis causes inconsistency in the name display. Furthermore, user won\u0027t\r\nbe able to refer to the author\u0027s GitHub username when the summary\r\ncharts are not grouped by author.\r\n\r\nLet\u0027s standardize all the name display using the format,\r\n[display name] (github username).",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 2,
        "date": "2019-06-03",
        "commitResults": [
          {
            "hash": "7c0750c510003722f72ad363cb50ce759aa6735a",
            "messageTitle": "[#635] CodeView: add line number to code (#669)",
            "messageBody": "The code view displays only the code without the line number.\r\n\r\nIt is hard to associate a specific line from the code view with the\r\nactual code without the line number.\r\n\r\nLet\u0027s update the code view to display the line numbers by adding an\r\narray in each segment to keep track of the line numbers of the code.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 3,
                "deletions": 1
              },
              "scss": {
                "insertions": 25,
                "deletions": 0
              },
              "js": {
                "insertions": 4,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 38,
        "deletions": 17,
        "date": "2019-06-05",
        "commitResults": [
          {
            "hash": "ad1e0265a549888e25fc4b94759cca4bea575785",
            "messageTitle": "[#702] Fix url directing to the wrong branch (#704)",
            "messageBody": "The Octocat icon always links to the master branch of a GitHub \r\nrepository.\r\n\r\nOctocat icons of summary charts that are not within the master \r\nbranch will still point to the URL of the master branch.\r\n\r\nLet\u0027s update the URL to point to their respective branch.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 5,
                "deletions": 5
              },
              "js": {
                "insertions": 13,
                "deletions": 5
              }
            }
          },
          {
            "hash": "afa5be94ea35410ed126c2958024696a62d4fa2e",
            "messageTitle": "[#664] Toolbar: expand width for `breakdown by file format` (#685)",
            "messageBody": "The width of label `breakdown by fileformat` is set to 110px which\r\ndisplays in two lines even though there are enough room for it to\r\ndisplay in a single line.\r\n\r\nThis will cause the label to not look as organised as compared to the\r\nlabel being displayed in a single line.\r\n\r\nLet\u0027s expand the width for `breakdown by file format` by setting the\r\nwidth as fit-content to ensure that the label is displayed in a single\r\nline.",
            "fileTypesAndContributionMap": {
              "scss": {
                "insertions": 6,
                "deletions": 5
              }
            }
          },
          {
            "hash": "eb9c7460a0e7672bff50c5e0708cb1ff0ed5b329",
            "messageTitle": "[#663] ChartView: add total contribution of group (#697)",
            "messageBody": "A group only shows the total contribution of each author or repo/branch\r\nwithin the group but not the total contribution of all combined.\r\n\r\nIt is rather difficult for the user to compare the total contribution\r\nbetween groups as the user would need to sum up the contribution of each\r\nrow in order to get the total contribution of a group.\r\n\r\nLet\u0027s display the total contribution of groups beside the group title so\r\nthat it is easier for the user to do comparisons between groups.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 4,
                "deletions": 2
              },
              "scss": {
                "insertions": 6,
                "deletions": 0
              },
              "js": {
                "insertions": 4,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 42,
        "date": "2019-06-10",
        "commitResults": [
          {
            "hash": "f96222a79167a55bb30fc9ced940b8660ef72425",
            "messageTitle": "[#647] Toolbar: rename values in `sort group by` (#668)",
            "messageBody": "The `sort groups by` selection contains the option of `repo/branch` and\r\n`name` when charts are grouped by Repo/Branch and Author respectively.\r\n\r\nAs it is a `sort group by` selection, there\u0027s is no need to use two\r\ndifferent options `repo/branch` and `name` as they both refer to the\r\n`group name`\r\n\r\nLet\u0027s rename both values to `group name` to standardize the values.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 8,
                "deletions": 13
              },
              "js": {
                "insertions": 28,
                "deletions": 29
              }
            }
          }
        ]
      },
      {
        "insertions": 34,
        "deletions": 24,
        "date": "2019-06-11",
        "commitResults": [
          {
            "hash": "0d3ba8a7da3f4c97014ece0805bef0d1e40799b9",
            "messageTitle": "[#660] ChartView: remove ramp slices not within date range (#670)",
            "messageBody": "After adjusting the date range, ramp slices that are not within the \r\ndate range still shows in the ramp row.\r\n\r\nUsers would only want to see the ramp slices that are within the date \r\nrange.\r\n\r\nLet\u0027s remove the ramp slices that are not within date range by \r\nchecking if the position of the ramp slices are within the width of \r\nthe ramp row (if it is not within the width of the ramp row, the ramp\r\nslice is not within date range) before adding the ramp slices to the \r\nramp row.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 2
              },
              "js": {
                "insertions": 32,
                "deletions": 22
              }
            }
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2019-06-15",
        "commitResults": [
          {
            "hash": "27152fb10573899b79fe93ffc2e211329ce9a4fc",
            "messageTitle": "[#712] ChartView: fix misalignment of chart title (#715)",
            "messageBody": "When \u0027breakdown by file format\u0027 is checked, the title of a chart aligns\r\nbeside the contribution bars of the previous chart when the\r\ncontribution bars\u0027 height of exceeds the margin allocated.\r\n\r\nLet\u0027s fix this misalignment by adding css property \u0027clear:left\u0027 to the\r\nchart title so that the chart title will always start at a new line.",
            "fileTypesAndContributionMap": {
              "scss": {
                "insertions": 2,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 10,
        "date": "2019-06-16",
        "commitResults": [
          {
            "hash": "5a405e1be35dc5ae8ccf832dd5caf27a94f699d4",
            "messageTitle": "[#689] v_summary.js: remove unused remnants code (#733)",
            "messageBody": "Unused code was found in v_summary.js; specifically code associated\r\nwith the variable, filterSortReverse. They are remnants left behind by\r\nthe improvement of sort controls introduced in #618.\r\n\r\nThe unused code was originally bind to the reverse checkbox in the\r\nolder version of RepoSense. As the checkbox was replaced by the\r\nintroduction of ascending and descending options in #618, the code is\r\nnow unused and redundant. This is also partially due to the complexity\r\nbrought upon by new sorting group, the reversing has to be done within\r\nthe code of descending\u0027s logic, rendering those code not reusable.\r\n\r\nLet\u0027s remove the unused code associated to the variable, \r\nfilterSortReverse and it\u0027s implementations.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 0,
                "deletions": 10
              }
            }
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 22,
        "date": "2019-06-26",
        "commitResults": [
          {
            "hash": "194bd125a57a63f2e764a348b7549f9bba18213e",
            "messageTitle": "[#645] CodeView: improve UI of sort bar (#716)",
            "messageBody": "In the UI of sortbar: \r\n- The font size of 3 controls (searchbar, checkbox, sort) are different\r\n- The sorting option\u0027s position is below the radio controls\r\n- The font of reverse checkbox is red in colour\r\n- The gaps between sorting option and radio controls is not \r\nstandardized\r\n\r\nLets:\r\n- Standardize the font size of all 3 controls so that the sort bar\r\nlooks neater\r\n- Shift sorting option to be above radio controls to further\r\nemphasize the number of radio buttons better\r\n- Set the font of reverse checkbox to be black in color to\r\ndifferentiate from other checkboxes and to be consistent with the\r\nChartView\r\n- Standardize the gaps between sorting option and radio controls",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 16,
                "deletions": 16
              },
              "scss": {
                "insertions": 12,
                "deletions": 3
              }
            }
          },
          {
            "hash": "5ad348098a9baa2effea7646bf0463da8cae5dd2",
            "messageTitle": "[#720] Set command-click to activate zoom-in feature for macOS devices (#730)",
            "messageBody": "Ctrl + mouse left-click is the default combination to activate the\r\nzoom-in feature for all environment.\r\n\r\nHowever, as the combination is registered as a right-click in macOS\r\nenvironment, users of macOS devices wouldn\u0027t be able to activate the\r\ncorresponding feature.\r\n\r\nLet\u0027s modify the zoom-in controls to allow command click for macOS \r\ndevices and control click for all other devices.",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 1,
                "deletions": 1
              },
              "js": {
                "insertions": 7,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 35,
        "deletions": 10,
        "date": "2019-06-27",
        "commitResults": [
          {
            "hash": "8591328fbf84af35f2943756ae3f2a6fed8f67ef",
            "messageTitle": "[#666] CodeView: load un-authored code only when toggled (#740)",
            "messageBody": "Viewing the changes in code of an author causes the app to \r\nrender all authored and un-authored segments within modified files.\r\nA small change in large file will cause the entire file to be preloaded.\r\n\r\nWhen an author has small changes done to a lot of large files, it will\r\nlead to an unresponsive page as loading the large un-authored segments\r\nwill affect the rendering speed. Furthermore, the preloading of all \r\nun-authored code is not necessary as users might only view the \r\nun-authored code under certain circumstances. (e.g. when the user \r\ndoes not understand why the author added the authored code)\r\n\r\nLet\u0027s modify the app to only load the un-authored code when the \r\nuser toggles the \u0027Show untouched code\u0027 icon.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 16,
                "deletions": 10
              },
              "scss": {
                "insertions": 1,
                "deletions": 0
              },
              "js": {
                "insertions": 18,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-06-28",
        "commitResults": [
          {
            "hash": "d09194c65d9016c56dfc11d341b91cde5c0d1503",
            "messageTitle": "[#741] Fix view code icon not opening CodeView (#744)",
            "messageBody": "The splitCommitsWeek() method executes a dateRounding() method that \r\nrounds up the filterSinceDate to the next nearest Monday. When the \r\nreport page is reloaded, the filterSinceDate is set to the value of \r\nthe \u0027since\u0027 hash by the getDates() method. Since within the \r\ngetFiltered() method, splitCommitsWeek() is executed before\r\ngetDates(), the filterSinceDate stores an empty string which is \r\npassed to the dateRounding() method and returns a NaN value. \r\n\r\nSince splitCommitsWeek() method is only called when granularity is \r\n\u0027week\u0027, if users were to set granularity as \u0027week\u0027 and reload the page,\r\nclicking on the view code icon does not open the CodeView panel. \r\n\r\nLet\u0027s shift the getDates() method to be executed before \r\nsplitCommitsWeek() to make sure that splitCommitWeek() method\r\nis called with a valid filterSinceDate, which fixes the described bug.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2019-06-29",
        "commitResults": [
          {
            "hash": "63ca0a11c8351729866d181a152742b2333c987d",
            "messageTitle": "[#680] Vue: fix error message in development mode (#742)",
            "messageBody": "An error message stating \"error compiling template: - \u003ctemplate\u003e\r\ncannot be keyed. Place the key on real elements instead.\" was found in\r\nChrome browser\u0027s console when running Vue in development mode for our\r\nreport.\r\n\r\nAlthough the Vue development tool still functions correctly, it \r\nhighlights an issue with the existing style and possibility degrades \r\nthe efficiency of the operations.\r\n\r\nLet\u0027s remove the Chrome browser console error by shifting the binding \r\nof keys from the \u003ctemplate\u003e tag to the inner \u003clabel\u003e tag.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 68,
        "deletions": 21,
        "date": "2019-07-03",
        "commitResults": [
          {
            "hash": "651df45df4d9a91cf5557aabc030c309e93f20de",
            "messageTitle": "[#770] Add placeholder for repositories with no author found (#777)",
            "messageBody": "Repositories with no author specified in the configuration files as\r\nwell as no commits made during the specified period do not appear in\r\nthe report.\r\n\r\nThis is caused by a TypeError in JavaScript. When an author\r\nconfiguration can\u0027t be found for a repository, RepoSense will perform\r\nthe identification of the authors using the commits. However, in the\r\nevent that even commits cannot be found, author information will not be\r\navailable and result in the error stated above.\r\n\r\nAs users may not notice the disappearance of these repositories, let\u0027s\r\nadd a placeholder with an error message of \u0027NO AUTHOR WITH COMMITS\r\nFOUND WITHIN THIS PERIOD OF TIME\u0027 to the affected repositories to\r\ninform users of the occurrence of this error.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 38,
                "deletions": 11
              },
              "json": {
                "insertions": 30,
                "deletions": 10
              }
            }
          }
        ]
      },
      {
        "insertions": 69,
        "deletions": 72,
        "date": "2019-07-04",
        "commitResults": [
          {
            "hash": "61be4e20b1af8e9eb1832fa5afa89bf7fe155f5a",
            "messageTitle": "[#312] CodeView: reduce space taken by toggle icon (#773)",
            "messageBody": "The toggle icon that separates between untouched and touched code \r\nsegments within the CodeView takes up significant amount of extra space.\r\n\r\nThe extra white space causes the code to be in a different layout than \r\nits actual layout.\r\n\r\nLet\u0027s place the toggle icon on the side of the code to not disrupt the \r\nlayout of the code while saving the extra space taken by the current\r\ntoggle icon.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 4,
                "deletions": 3
              },
              "scss": {
                "insertions": 65,
                "deletions": 69
              }
            }
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 7,
        "date": "2019-07-10",
        "commitResults": [
          {
            "hash": "e3dc5d13cd231f26062bcc9fd5cf22ffaed32b9d",
            "messageTitle": "[#748] Restore authorship tab (#749)",
            "messageBody": "Reloading the report page with the authorship tab opened will result\r\nto a closed authorship tab.\r\n\r\nThe info.name property is only created when clicking on the view code\r\nicon and calling openTabAuthorship() method of v_summary. The\r\ninitiate() method of v_authorship sets the isTabActive property to be \r\nfalse if info.name property does not exist. Reloading the report page \r\ndoes not call openTabAuthorship(), which means that the info.name \r\nproperty will not exist and the isTabActive is false regardless of \r\nurl value.\r\n\r\nLet\u0027s modify the initiate() method of v_authorship.js to check for\r\ninfo.author property instead of info.name as the property exists \r\nwhen reloading the page as well as clicking on the view code icon.\r\nThis modification properly restores the last viewed authorship tab, \r\nif any.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 29,
                "deletions": 7
              }
            }
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 5,
        "date": "2019-07-14",
        "commitResults": [
          {
            "hash": "d45513d6692248bfa38808e3b045b4ce51039c0c",
            "messageTitle": "[#791] CodeView: bugfix for unexpected colors in line numbers (#792)",
            "messageBody": "The css property of line number only overwrites the color property of \r\nclasses \u0027hljs-number\u0027 and \u0027hljs-comment\u0027. Others classes such as\r\n\u0027hljs-quote\u0027, \u0027hljs-name\u0027 and more are not overwritten.\r\n\r\nThis will cause the color property of certain line numbers to inherit \r\nfrom the hljs classes that are not overwritten.\r\n\r\nLet\u0027s overwrite all hljs classes to ensure the color property of the \r\nline number to always be grey.",
            "fileTypesAndContributionMap": {
              "scss": {
                "insertions": 2,
                "deletions": 5
              }
            }
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 2,
        "date": "2019-07-17",
        "commitResults": [
          {
            "hash": "255907108d29f67d4a08b91d36c8fe9a8368e7aa",
            "messageTitle": "ChartView: highlight error messages in red (#790)",
            "messageBody": "Within ChartView, ramp charts with error messages are blended together \r\nwith the other ramp charts without error messages as they both have \r\nsimilar UI.\r\n\r\nLet\u0027s modify the UI of ramp charts with error messages to use red color \r\nfor their info message font to distinguish itself from other ramp \r\ncharts without error messages.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 8,
                "deletions": 2
              },
              "scss": {
                "insertions": 8,
                "deletions": 0
              }
            }
          },
          {
            "hash": "674f87d83558ccdee29d8aadf42a9647624e2d30",
            "messageTitle": "[#811] CodeView: fix position of toggle icons (#813)",
            "messageBody": "The \u0027closer\u0027 class designated for icons that toggle code segments\r\nis absolutely positioned. Due its parent class, \u0027untouched\u0027, being \r\nin default static position, \u0027closer\u0027 is positioned relatively to the \r\nedges of the root containing block.\r\n\r\nWhen scrolling through horizontally within each code segment, the \r\ntoggle icons remains unchanged in their position in x-axis, hovering \r\nover the text in code view.\r\n\r\nLet\u0027s relatively position the \u0027untouched\u0027 class, which turns the class \r\ninto a containing block. This ensures absolutely positioned elements \r\ncontained within will be positioned relative to the edges of \u0027untouched\u0027\r\nrather than the root containing block. ",
            "fileTypesAndContributionMap": {
              "scss": {
                "insertions": 1,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 807,
        "deletions": 754,
        "date": "2019-07-18",
        "commitResults": [
          {
            "hash": "e8bf034aaf33fa1a59c8933ffaa22dfdf82048fb",
            "messageTitle": "[#522] Implement style checker on .scss files (#803)",
            "messageBody": "RepoSense currently has CheckStyle and ESLint to check our java and \r\njavascript code styles automatically. However, .scss files are not \r\ncovered by any of these tools.\r\n\r\nLet\u0027s implement stylelint to check the code styles of .scss files.",
            "fileTypesAndContributionMap": {
              "scss": {
                "insertions": 768,
                "deletions": 747
              },
              "md": {
                "insertions": 4,
                "deletions": 3
              },
              "json": {
                "insertions": 34,
                "deletions": 2
              },
              "yml": {
                "insertions": 1,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 1,
        "date": "2019-07-20",
        "commitResults": [
          {
            "hash": "174d06f15417b6feb7fc44bc608a478518a66b34",
            "messageTitle": "[#764] Toolbar: fix search functionality for Safari users (#797)",
            "messageBody": "The \u0027enter\u0027 key submits html forms in browsers such as Chrome and \r\nFirefox, but not in Safari.\r\n\r\nSince the getFiltered() method is executed on submit of the html form,\r\nSafari browser users are unable to activate the search functionality \r\nwhen search value is keyed in and \u0027enter\u0027 key is pressed.\r\n\r\nLet\u0027s move the execution of getFiltered() method to be within \r\nupdateFilterSearch(), to ensure that Safari users are also able to \r\nactivate the search functionality.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 1,
                "deletions": 1
              },
              "js": {
                "insertions": 1,
                "deletions": 0
              }
            }
          },
          {
            "hash": "f6520543bcb0c7ef1d0365a74a87958caca89e92",
            "messageTitle": "[#763] v_summary.js: remove redundant calls to getFiltered() (#800)",
            "messageBody": "When reloading the report page, the data in v_summary such as\r\nfilterSinceDate, filterUntilDate, filterTimeFrame etc will change based \r\non the URL hash values. The changes in data will trigger the watchers \r\nfor those data, and each of them will call getFiltered() method.\r\n\r\nOnly one call for getFiltered() is required after rendering the filter \r\nhash, the other getFiltered() calls by the watchers are redundant.\r\nWhen the report is large in size, repeatedly executing getFiltered()\r\nwhen reloading the report will also significantly affect the loading \r\nperformance of our report.\r\n\r\nLet\u0027s only allow watchers to execute getFiltered() after the first \r\ncycle of watcher updates to prevent redundant calls to getFiltered().",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 9,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 26,
        "date": "2019-07-22",
        "commitResults": [
          {
            "hash": "c8f248d9283fe86270e1f2906a7812882742bff2",
            "messageTitle": "[#724] Modify zoom-in feature to based on selected granularity (#729)",
            "messageBody": "The zoom-in feature opens the zoom panel to show the selected\r\nsub-range of a ramp chart in terms of \u0027commit\u0027. This feature, however, \r\nonly works when the granularity is set to commit or day.\r\n\r\nUsers will not be able to use this feature with granularity set to week,\r\nas the method getUserCommits() gets all user commits by interating \r\nthrough an undefined key object \u0027dayCommits\u0027, which stops the method\r\nexecution.\r\n\r\nMoreover, long sub-range of ramp charts will contain dense information \r\nwith ramp slices overlapping each other. This happens even when \r\ngranularity is set to day or week, which makes it difficult for users to \r\nnotice substantial info on these ramp charts.\r\n\r\nLet\u0027s correctly implement the zoom-in feature when granularity is set to\r\nweek. Furthermore, let\u0027s modify the feature for the ramp chart within \r\nzoom panel to be in terms of the granularity selected, which allow users \r\nto observe selected granularity of commits more clearly within the \r\nzoomed-in range.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 6,
                "deletions": 3
              },
              "scss": {
                "insertions": 16,
                "deletions": 0
              },
              "js": {
                "insertions": 20,
                "deletions": 16
              }
            }
          },
          {
            "hash": "eb0e20f6cfda5485770df37e8f387082452d88c7",
            "messageTitle": "[#780] v_summary.js: remove Vue watcher for repos (#783)",
            "messageBody": "A redundant Vue watcher was found in v_summary.js, specifically the Vue\r\nwatcher for repos, as repos should remain constant and not be modified.\r\n\r\nThis is primarily used to call the getUsers() method, however this \r\nitself is redundant as getUsers() shouldn\u0027t be called more than once \r\nas it tends to overwrite repos with the same set of values.\r\n\r\nAdditionally, using Vue watcher for large data, such as repos, affects \r\nthe performance of the report.\r\n\r\nLet\u0027s remove the Vue watcher for repos and modify getUsers() to be \r\ncalled only once when page is firstly loaded.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 1,
                "deletions": 1
              },
              "js": {
                "insertions": 5,
                "deletions": 5
              }
            }
          },
          {
            "hash": "790840f5c3130b829cb655609d5e481b5932991d",
            "messageTitle": "[#820] Cypress: add sinceDate in command arguments (#821)",
            "messageBody": "The arguments used to generate the sample report used in Cypress \r\ntests is \u0027--repo https://github.com/reposense/RepoSense.git --view\u0027. \r\n\r\nSince sinceDate and untilDate is not provided in the arguments, the \r\nreport duration will be from one month before today\u0027s date until\r\ntoday\u0027s date. This causes the current sample report used for Cypress\r\ntests to contain empty ramp charts, which does not mimic a realistic\r\nreport.\r\n\r\nLet\u0027s add a \u0027--since d1\u0027 argument to the existing arguments, which \r\ngenerates a more realistic sample report that contains the commits\r\nmade from start until today\u0027s date.",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 9,
        "date": "2019-07-24",
        "commitResults": [
          {
            "hash": "1378e60b66d2493595efc17eae763327d266faa8",
            "messageTitle": "[#828] Revert \"v_summary.js: remove redundant calls to getFiltered() (#800)\" (#832)",
            "messageBody": "PR #800 was intended to ensure the getFiltered() method to be executed \r\nonly once when the page is reloaded. The solution used was to set \r\nboolean canGetFiltered to true in beforeUpdate() lifecycle hook, \r\npreventing the execution of getFiltered() before the lifecycle hook.\r\nHowever, the beforeUpdate() lifecycle hook will only be executed when \r\nthere are changes to the DOM. \r\n\r\nInstances where the page is reloaded and there are no changes to the DOM\r\nwill not set boolean canGetFiltered to true, preventing getFiltered() to \r\nbe executed until the DOM has changed.\r\n\r\nLet\u0027s revert PR #800 to allow getFiltered() to be executed even when \r\nthere are no changes to the DOM.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 0,
                "deletions": 9
              }
            }
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 18,
        "date": "2019-07-27",
        "commitResults": [
          {
            "hash": "6873b4e5d289f1c898118a607c2c4b1e65c67e70",
            "messageTitle": "[#809] DeveloperGuide: update the HTML report section (#810)",
            "messageBody": "The HTML report section in our DG contains outdated info such as the\r\nreport summary diagram, sequence diagrams and the list of js files.\r\n\r\nLet\u0027s perform promptly due update, revise the HTML report section with\r\nthe latest report summary diagram, Vue lifecycle diagram, sequence\r\ndiagrams and the descriptions of the recently added js files such as\r\nv_ramp, v_zoom, and v_segment.",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 32,
                "deletions": 18
              }
            }
          }
        ]
      },
      {
        "insertions": 105,
        "deletions": 15,
        "date": "2019-07-28",
        "commitResults": [
          {
            "hash": "8f7db355698cb2430b536c32557339c357607378",
            "messageTitle": "[#723] Report: fix modifying dates for Safari users (#801)",
            "messageBody": "Safari browser users are unable to modify sinceDate and untilDate in\r\nthe report.\r\n\r\nThis is due to the datepickers used are HTML5 elements; they are not\r\nsupported by Safari. Furthermore, the alternative to modify the date\r\nfields, through the keydown events, are disabled.\r\n\r\nLet\u0027s allow Safari browser users to use a text-type input for their\r\nsinceDate and untilDate inputs. They can modify the dates by\r\nkeying the numeric date values into the date fields followed by hitting\r\nthe key, `enter`.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 11,
                "deletions": 4
              },
              "js": {
                "insertions": 73,
                "deletions": 0
              }
            }
          },
          {
            "hash": "acc66d3caae0072397b592eebe20aa6b6863b227",
            "messageTitle": "[#778] ChartView: add zoom tab button (#796)",
            "messageBody": "In addition to zooming into a range of ramp slices, the zoom tab also\r\nshows the breakdown of commits that are within the zoom range. This \r\nfunctionality however, is not encompassed for the entire ramp chart.\r\n\r\nLet\u0027s add a button that opens the zoom tab for the entire ramp chart.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 7,
                "deletions": 2
              },
              "js": {
                "insertions": 14,
                "deletions": 9
              }
            }
          }
        ]
      },
      {
        "insertions": 343,
        "deletions": 121,
        "date": "2019-07-31",
        "commitResults": [
          {
            "hash": "80a592516d07d23a54932a78209bca9f0bc1a498",
            "messageTitle": "[#662] ChartView: add merge group option (#752)",
            "messageBody": "Within ChartView, a group has multiple rows of ramp charts that belongs\r\nto the group itself.\r\n\r\nIt may be difficult for users to analyse the contribution of the entire\r\ngroup or to compare the contribution between groups.\r\n\r\nLet\u0027s add a merge group checkbox such that when the checkbox is\r\nchecked, all ramp charts of the same group will be merged together\r\nto form a single ramp chart. This allows users to easily analyse \r\nthe total contribution on the group level.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 32,
                "deletions": 10
              },
              "js": {
                "insertions": 99,
                "deletions": 16
              }
            }
          },
          {
            "hash": "42b6b574f474cf6aed2acfc24bf2142a487d768e",
            "messageTitle": "[#846] CodeView: fix show ramps for this period button (#847)",
            "messageBody": "Clicking on show ramp chart for this period button in the commits\r\npanel calls updateDateRange(), which recomputes the duration of the\r\nramp chart according to the drags by the user. The method proceeds \r\nto call deactivateAllOverlays(), which removes the drags by the user.\r\n\r\nSince no more drags are left after the first execution of \r\nupdateDateRange(), clicking on the show ramp chart for this period\r\nbutton will not be able to activate updateDateRange().\r\n\r\nLet\u0027s use the zoom since date and until date to recompute the duration\r\nof the ramp chart, instead of using the drags. This will ensure that\r\nclicking on the button will always show the ramp chart for the \r\ndesignated period.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 7,
                "deletions": 16
              }
            }
          },
          {
            "hash": "9018b9073abfea6c10609b96b0d85e4d99ccaf97",
            "messageTitle": "[#839] Set config to be inclusive of until date (#840)",
            "messageBody": "The until date in the config does not match with the until date used in\r\ngit rev-list. Until date in the config is in 00:00:00 time whereas\r\nuntil date used in git rev-list uses the time 23:59:59 of the day\r\nbefore.\r\n\r\nThis discrepancy can cause the content and author of each line detected\r\nby git rev-list to be different, and have caused a disparity in the\r\noutput results in #789.\r\n\r\nLet\u0027s standardise the until date in the config to use time of 23:59:59 \r\nto match with the until date used in git rev-list.\r\n\r\nReference:\r\nhttps://github.com/reposense/RepoSense/pull/789#discussion_r307350220",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 110,
                "deletions": 38
              },
              "md": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "1c3bcf6e6fe863f4e06a1605d718659594e491b7",
            "messageTitle": "[#754] Url: include date hashes only when modified (#757)",
            "messageBody": "The initial URL of the report page captures a start and until \r\nhash parameter even when the users did not specify the start date\r\nand end date fields in the CLI.\r\n\r\nThe URL is then shared to others. If there are further updates to the \r\nreport, the URL will still navigate to the report page with ramps up \r\nuntil the original start date and until date instead of the most\r\nupdated dates which may include more recent/older commits.\r\n\r\nLet’s modify the report’s initial URL to not capture the start and end \r\ndate hashes when users did not specify the respective date field in\r\nthe CLI. Without the start date or end date hash parameter in the URL,\r\nthe URL will navigate to the report with the most updated start date\r\nand end date.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 8,
                "deletions": 8
              },
              "java": {
                "insertions": 39,
                "deletions": 12
              },
              "js": {
                "insertions": 30,
                "deletions": 7
              },
              "json": {
                "insertions": 9,
                "deletions": 3
              }
            }
          },
          {
            "hash": "06c5a05d9256dbd53c2565228226b9556555afa0",
            "messageTitle": "[#842] Fix out of bound ramp slices (#844)",
            "messageBody": "Ramp slices appear outside of the ramp charts in week granularity.\r\n\r\nThis is due to the implementation of splitCommitsWeek() does not take\r\ninto account when the duration between since date and until date is\r\nless than one week. When the duration is less than a week, the\r\nalgorithm calculates commits up to the following Monday, even if they\r\nare beyond the until date. Hence, it causes a distortion in the ui.\r\n\r\nLet\u0027s revamp the logic within splitCommitsWeek to check, and trim any\r\ncommits beyond the until date.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 8,
                "deletions": 10
              }
            }
          }
        ]
      },
      {
        "insertions": 53,
        "deletions": 30,
        "date": "2019-08-01",
        "commitResults": [
          {
            "hash": "7ff4d5de6c6a3f3103d526cfeaeff8c38f137ec1",
            "messageTitle": "Zoom Tab: revamp header ui (#848)",
            "messageBody": "The zoom tab header remains the same irregardless of the grouping\r\noption (authors, repos or none). The period of the zoom tab is also not\r\nshown in the zoom tab.\r\n\r\nThis creates a problem when the merge group option is used; a merged\r\ngroup may consists of more than one chart, and the title used in the\r\nheader might not apply to all the ramps within the merged chart.\r\n\r\nLet\u0027s modify the UI of the zoom tab title to use a new sequence:\r\n`group title` -\u003e `chart title` -\u003e `period of zoom tab` -\u003e\r\n`granularity`, and hide the chart title when the merge group option is\r\nchecked.\r\n\r\nLet\u0027s also modify the authorship\u0027s title format to match with the zoom\r\ntab\u0027s title format as well.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 27,
                "deletions": 16
              },
              "scss": {
                "insertions": 26,
                "deletions": 14
              }
            }
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 4,
        "date": "2019-08-09",
        "commitResults": [
          {
            "hash": "6dc9ee3595b1c98c28b32339715fe8b5295cd953",
            "messageTitle": "[#851] Fix url directing to wrong repository when merge group (#854)",
            "messageBody": "When the merge group option is checked, charts are grouped by\r\nauthors and granularity is set to \u0027commit\u0027, the url of some commits \r\nmay point to the wrong repository.\r\n\r\nThis is due to our current structure of the merged groups, where each\r\nmerged author stores only one repository name even though they may \r\nhave contributed to more than one repository. This causes all url \r\nof commits to point to the same repository.\r\n\r\nLet\u0027s bind the repository name to each commit when merge group \r\noption is checked to ensure that all url of commits point to the \r\ncorrect repository.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 17,
                "deletions": 4
              }
            }
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2019-09-01",
        "commitResults": [
          {
            "hash": "8e0a89e06225aa5f8d58e0586082f2e811fe24fb",
            "messageTitle": "ChartView: modify the sorting of the authors to use display names (#880)",
            "messageBody": "The sorting of the author by title is according to the authors\u0027 \r\nGitHub usernames.\r\n\r\nGithub usernames are strings that users have no control over, \r\nan unconfigurable field. Therefore, sorting according to it does not\r\nhave much value to the user, should she chose to configure the display\r\nnames.\r\n\r\nLet\u0027s modify the sorting of author names to be according to the\r\nauthors\u0027 display names.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 2,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 14,
        "date": "2019-09-05",
        "commitResults": [
          {
            "hash": "816bb1a856387ca848504ae279bc2a4b81f4a308",
            "messageTitle": "[#858] Restore authorship tab (#874)",
            "messageBody": "Authorship tab is not restorable after refreshing the page.\r\n\r\nRestoring authorship tab requires the since and until date hashes \r\nwhereas PR #757 has made changes where the date hashes will not \r\nbe captured in the URL if not specified by the user.\r\n\r\nLet\u0027s \r\n- use the window\u0027s since and until date to restore the authorship \r\n  tab if the date hashes are unavailable. \r\n- move the restoring of tab hashes to be executed after \r\n  loadSummary() to ensure that the window\u0027s since and until date is \r\n  available.\r\n- extract the deactivation of tab pane to a method instead of using\r\n  the updated hook as the updated hook will be called repeatedly \r\n  whenever there are data changes that affect the DOM.\r\n",
            "tags": [
              "v1.10"
            ],
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 1,
                "deletions": 1
              },
              "js": {
                "insertions": 21,
                "deletions": 13
              }
            }
          }
        ]
      },
      {
        "insertions": 43,
        "deletions": 0,
        "date": "2019-12-20",
        "commitResults": [
          {
            "hash": "008f48fc20af630d857cd65bf11e96d05e19559a",
            "messageTitle": "[#46] Show total time after batch processing (#758)",
            "messageBody": "After running the CLI command, the total time taken to process and \r\ngenerate the report is not shown in the console output.\r\n\r\nUsers might find it useful to keep track of the time taken to \r\ngenerate the report.\r\n\r\nLet\u0027s use the logger to output the total time taken from running the \r\nCLI command until the report is generated.\r\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 43,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 42,
        "date": "2019-12-31",
        "commitResults": [
          {
            "hash": "2b2a9f3666d7c14d0c0ebe05b26660d0bf7827ba",
            "messageTitle": "[#785] ChartView: fix authors with unaccounted lines (#789)",
            "messageBody": "The git blame command used in RepoSense contains the option -w, which\r\nignores whitespace when comparing the parent’s version and the child’s\r\nto find where the lines came from.\r\n\r\nWhen an author did not change the content but only the position of\r\nspecific lines of code, the previous author will be recognised as the \r\nauthor that changed these lines. If the previous author did not\r\ncontribute during the analysis period, his/her ramp chart will be\r\nempty while the contribution bar will be present.\r\n\r\nLet\u0027s add an extra check in aggregateBlameInfo for lines of code with\r\nthe author committed date that is not within the duration of \r\nspecified since date and until date. Those lines of code\u0027s author will\r\nbe set to unknown, which will resolve the issue above.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 49,
                "deletions": 42
              }
            }
          }
        ]
      },
      {
        "insertions": 113,
        "deletions": 10,
        "date": "2020-01-22",
        "commitResults": [
          {
            "hash": "e2f1ec8fffe7ed8140bc9af968f7d26582a67fdd",
            "messageTitle": "[#879] Display commit tags in commits panel (#969)",
            "messageBody": "The tags of each commit are not shown in the commits panel.\r\n\r\nWith the active use of git tags in CS21x3 repositories, it is useful to \r\nprovide tutors on the usage and information of tags in each commit.\r\n\r\nLet\u0027s display the tags of each commit (if there\u0027s any) in the commits \r\npanel.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 13,
                "deletions": 1
              },
              "java": {
                "insertions": 62,
                "deletions": 8
              },
              "scss": {
                "insertions": 25,
                "deletions": 1
              },
              "js": {
                "insertions": 7,
                "deletions": 0
              },
              "json": {
                "insertions": 6,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 4,
        "date": "2020-01-29",
        "commitResults": [
          {
            "hash": "8ed76d0dfebad2e509d87879661501239c35acb9",
            "messageTitle": "[#984] Fix miscalculation of expanded commit message count (#998)",
            "messageBody": "We get the number of expanded commit message count in zoom tab based on\r\nthe number of divs with class name \u0027commit-message active\u0027.\r\n\r\nCommit messages without commit message bodies also have default class\r\nname of \u0027commit-message active\u0027, which leads to the expanded commit\r\nmessage count to not reflect on the true number of commit messages that\r\nare expanded.\r\n\r\nLet\u0027s append the class name \u0027message-body\u0027 to commit messages that have\r\ncommit message bodies, to distinguish between messages that can be\r\nexpanded and vice versa.\r\n",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 1,
                "deletions": 1
              },
              "js": {
                "insertions": 3,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2020-02-02",
        "commitResults": [
          {
            "hash": "644af05f28207975cb22771cb5f44a25a0ff90e4",
            "messageTitle": "[#1029] Contribution Bar: restore the float left property (#1030)",
            "messageBody": "Due to the regression of #1003, the css property \u0027float: left\u0027 was left\r\nout in the contribution bar. When break down by file type is checked,\r\nthe contribution bar for each file type occupies separate lines\r\ninstead of continuous lines.\r\n\r\nLet\u0027s restore the css property \u0027float: left\u0027 back to the contribution\r\nbar.",
            "fileTypesAndContributionMap": {
              "scss": {
                "insertions": 1,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 5,
        "date": "2020-02-05",
        "commitResults": [
          {
            "hash": "ebdd0140fe77d238eab878b42d58afe18fd03e02",
            "messageTitle": "[#1019] Handle commit info extraction for empty commits (#1020)",
            "messageBody": "Analyzing repo with empty commits causes CommitInfoAnalyzer to throw \r\nArrayIndexOutOfBoundsException. This occurs in \r\nCommitInfoExtractor#parseGitLogResults, where info lines and stat \r\nlines are split based on the last index of the newline character \r\n`\\n`.\r\n\r\nAs empty commits have no stat lines, it leads to \r\nArrayIndexOutOfBoundsException due to the use of new line separator.\r\n\r\nLet\u0027s:\r\n- use \u0027|\u0027 character as the splitting point of info lines and stat \r\n  lines, instead of the new line \u0027\\n\u0027 character. This will ensure \r\n  that the ref name details will always be within info lines instead\r\n  of stat lines.\r\n- add a check for the availability of the ref name before accessing \r\n  it to prevent the exception. \r\n\r\nNo stat lines occurs for commits that are empty (done by git commit \r\n--allow-empty), since no files are changed. The last index of the \r\nnewline character will situate before the ref name details, and info\r\nline will contain all characters before that index while stat line \r\ncontains the ref name details. Since the ref name is no longer in \r\nthe info lines, accessing the REF_NAME_INDEX within the info lines \r\nwill incur an ArrayOutOfBoundsException.\r\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 27,
                "deletions": 3
              }
            }
          },
          {
            "hash": "4611767400fc829913997f335afa5aed22917cd8",
            "messageTitle": "[#1027] Modify UI for tags (#1028)",
            "messageBody": "Some tags split to the next line when the list of tags are too long. \r\nTags also appear vertically close together when the list occupies \r\nmore than one line.\r\n\r\nLet\u0027s change the css property `display` to be `inline-block` and add \r\nsome top and bottom margins to each tag.\r\n",
            "fileTypesAndContributionMap": {
              "scss": {
                "insertions": 2,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 26,
        "date": "2020-02-22",
        "commitResults": [
          {
            "hash": "636f4d98583c49c18dc25fe66b0c4d196ad05271",
            "messageTitle": "[#999] Remove empty zoom__day divs (#1000)",
            "messageBody": "When granularity is set to week, the \u0027pushCommitsWeek\u0027 method gets \r\nall possible weeks (week 1, 2, 3, etc...) from start date until the \r\nend date and pushes it to \u0027user.commits\u0027, no matter the week has any \r\ncommits at all. Additionally, commits with zero insertions but with \r\ndeletions are also not taken into consideration in the commits \r\npanel.\r\n\r\nWeeks that have no commits is not useful and redundant. Commits with\r\nonly deletions are maybe useful as it may represent \r\nrefactoring/removing redundant code.\r\n\r\nLet\u0027s add a check to add a week only if it has commits. And remove \r\nthe check for commits with zero insertions, so that commits with \r\nonly deletions are also included.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 23,
                "deletions": 24
              },
              "js": {
                "insertions": 4,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2020-02-26",
        "commitResults": [
          {
            "hash": "a9f88fd727d8127f36ef6e33eaef81fb10338220",
            "messageTitle": "[#1043] Fix bug of incorrect commit dates when merge group (#1045)",
            "messageBody": "When merge group is checked, some commits are seen with committed\r\ndates that are incompatible to the real committed dates.\r\n\r\nCommits with the same date are appended together in \u0027mergedCommits\u0027.\r\nSince \u0027mergedCommits\u0027 is being sorted before all the merged commits \r\nfor a particular group is gathered, the order of the \u0027mergedCommits\u0027 \r\nis changed, and some commits with the same date are appended \r\nwrongly.\r\n\r\nLet\u0027s move the sorting of \u0027mergedCommits\u0027 after the all merged \r\ncommits are gathered, this will ensure commits with the same date \r\nare appended correctly.\r\n\r\nThe order of the \u0027mergedCommits\u0027 matters, as we use an additional js \r\nobject \u0027dateToIndexMap\u0027 maps dates to the corresponding index in \r\n\u0027mergedCommits\u0027. Once the order has changed, the \u0027dateToIndexMap\u0027 no \r\nlonger contains the accurate mappings and hence, commits are \r\nappended wrongly.\r\n",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 39,
        "deletions": 2,
        "date": "2020-03-04",
        "commitResults": [
          {
            "hash": "9725a25d4e34164cefbb51f7f6e39964cb0a521a",
            "messageTitle": "Add commit message length configuration border (#1048)",
            "messageBody": "GitHub\u0027s maximum length of commit message\u0027s subject line and body is \r\ndefaulted at 50 and 72 characters respectively.\r\n\r\nCommits panel does not show the indication of the maximum lengths.\r\n\r\nLet\u0027s add a dotted lines for commit message bodies at 72 characters \r\nand subject lines at 50 characters, these lines indicate whether a \r\ncommit message\u0027s subject line or body exceed GitHub\u0027s maximum \r\nlength.\r\n",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 4,
                "deletions": 1
              },
              "scss": {
                "insertions": 32,
                "deletions": 1
              },
              "md": {
                "insertions": 3,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 2,
        "date": "2020-03-09",
        "commitResults": [
          {
            "hash": "145a1b4dda02ac9fdc42554835e7be98a534b0a0",
            "messageTitle": "[#1005, #1010] Code Panel: match font with GitHub and break lines when overflow (#1008)",
            "messageBody": "When the file path or lines of code overflows, it takes up a large \r\namount of empty space in order to accomodate to it\u0027s length. The \r\nfont size of the code and file path is also rather big and takes up \r\nmuch space.\r\n\r\nLet\u0027s set the file path and lines of code to break into next lines \r\nwhen it overflows. Also, let\u0027s set the font-family and font-size of \r\nthe code to match with GitHub.",
            "fileTypesAndContributionMap": {
              "scss": {
                "insertions": 7,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 6,
        "date": "2020-03-12",
        "commitResults": [
          {
            "hash": "8334eb6a66254d228ad59b1f5de617f3202d6041",
            "messageTitle": "[#1109] Config.json: include active author and pug file format (#1123)",
            "messageBody": "The default configuration consists of authors that are no longer\r\nactive in committing code to RepoSense. The jade file format is\r\nno longer used in RepoSense as it is replaced by pug file format.\r\n\r\nLet\u0027s \r\n- add a recent active author, as it may reveal potential bugs\r\n- replace jade to pug file format",
            "fileTypesAndContributionMap": {
              "json": {
                "insertions": 6,
                "deletions": 6
              }
            }
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2020-03-16",
        "commitResults": [
          {
            "hash": "e42884b81029c9a2c221448bdc86d570d8774511",
            "messageTitle": "[#1140] Update date hashes when updating date range (#1141)",
            "messageBody": "Clicking on the `show ramp chart in this period` button does not update \r\nthe `since` and `until` date hashes, which leads to a different summary \r\nperiod after reloading the page.\r\n\r\nThis is due to the `hasModifedSinceDate` and `hasModifiedUntilDate` not\r\nset to true when calling `updateDateRange`, which prevents the since and \r\nuntil date hashes to be updated.\r\n\r\nLet\u0027s set `hasModifedSinceDate` and `hasModifiedUntilDate` to be true \r\nwhen updateDateRange is called.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 2,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 15,
        "date": "2020-03-17",
        "commitResults": [
          {
            "hash": "53fe9f408e25a058f9f2d7c3f38e416df98022c8",
            "messageTitle": "v_summary: refactor the structure of summary-charts__title (#1106)",
            "messageBody": "The `summary-charts__title` div is separated in two, each for when\r\n`filterGroupSelection` is `groupByRepos` and `groupByAuthors` \r\nrespectively.\r\n\r\nThere is overlapping in code among the two, and adding a new \r\ncommon component in `summary-charts__title` needs to be done twice, \r\nwhich is redundant.\r\n\r\nLet\u0027s refactor the structure `summary-charts__title` div to share \r\nthe common divs/components.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 9,
                "deletions": 14
              },
              "scss": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 64,
        "deletions": 3,
        "date": "2020-03-23",
        "commitResults": [
          {
            "hash": "07c16f1e7970b3d2585f168fa7cf663e97968bd6",
            "messageTitle": "[#950] Use Surge as alternative for Netlify (#1165)",
            "messageBody": "Netlify\u0027s build quota is not enough for RepoSense\u0027s build usage.\r\n\r\nLet\u0027s deploy on Surge instead, using Travis to run the build and \r\nprovide a Github Status on each PR that links users to the deployed \r\nSurge site.",
            "fileTypesAndContributionMap": {
              "sh": {
                "insertions": 57,
                "deletions": 0
              },
              "yml": {
                "insertions": 7,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 38,
        "date": "2020-03-24",
        "commitResults": [
          {
            "hash": "af93ed1758c3a8f66149bd99f194248a90aec76b",
            "messageTitle": "[#1167] Revert PR #967 while keeping zoom tab independent of summary (#1172)",
            "messageBody": "PR #967 causes multiple bugs in zoom tab and authorship tab, due to\r\nsome data value inside the side panels are not re-rendered when prop \r\n`info` changes.\r\n\r\nFixing these bugs may delay our upcoming release, so reverting the \r\nchanges that lead to these bugs may be the best option.\r\n\r\nLet\u0027s revert that PR while only keeping the changes to make the zoom \r\ntab to be independent of summary.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 0
              },
              "js": {
                "insertions": 14,
                "deletions": 38
              }
            }
          }
        ]
      },
      {
        "insertions": 261,
        "deletions": 82,
        "date": "2020-03-29",
        "commitResults": [
          {
            "hash": "eac21ab589ebcdf79f596a94d7ff3f9c7a09e3e9",
            "messageTitle": "[#779] Restore zoom tab (#830)",
            "messageBody": "The zoom tab hashes are not encoded in the URL when zoom tab is \r\nopened.\r\n\r\nZoom tab will not be restorable with the URL after reloading the \r\npage.\r\n\r\nLet\u0027s add the encoding of zoom tab hashes to the URL make the zoom \r\ntab restorable after reloading the page.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 14,
                "deletions": 14
              },
              "js": {
                "insertions": 231,
                "deletions": 65
              }
            }
          },
          {
            "hash": "f39df542959252e9d3b88c247f11fa0c2574afe3",
            "messageTitle": "[#873] Enable view commits option when merge group (#1100)",
            "messageBody": "The view commits option is not available when merge group option is \r\nchecked.\r\n\r\nLet\u0027s enable the view option when merge group, as the zoom in \r\nfunction is already working with merged ramps. Let\u0027s also fix the \r\nregression from #1106 that removes the github icon when merge group \r\nand `filterGroupSelection` is \u0027groupByRepos\u0027.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 7,
                "deletions": 0
              },
              "scss": {
                "insertions": 4,
                "deletions": 1
              }
            }
          },
          {
            "hash": "0e39bb7ffa5094e13fb120a36e3c2666f2566572",
            "messageTitle": "[#1087] Update badges in README (#1194)",
            "messageBody": "RepoSense\u0027s Netlify badge icon is a custom icon. We are missing \r\nacknowledgment to Surge as well.\r\n\r\nLet\u0027s update the badge to Netlify\u0027s official badge that reflects our\r\nNetlify deployment status. Let\u0027s also acknowledge Surge in helping \r\nwith our web previews.",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 5,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2020-04-09",
        "commitResults": [
          {
            "hash": "5e1997d97b75735fc6579a015dc7f713c257d383",
            "messageTitle": "[#1201] Fix regressions of PR #779 (#1203)",
            "messageBody": "There are regressions caused by PR #779, where the `zIsMerge` and \r\n`zFilterGroup` properties are not used properly within zoom tab. \r\nThey are using `isMergeGroup` and `filterGroupSelection` instead.\r\n\r\nLet\u0027s modify them to use `zIsMerge` and `zFilterGroup` instead, in \r\nthis way the zoom tab will be using the correct property values.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 1,
                "deletions": 1
              },
              "js": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 357,
        "deletions": 178,
        "date": "2020-04-11",
        "commitResults": [
          {
            "hash": "0f57aab1deb97699e3b8d59ddca0ef492bbdc89d",
            "messageTitle": "[#956] Convert documentation to MarkBind and deploy using Surge (#1225)",
            "messageBody": "Our User Guide and Development Guide is using markdown.\r\n\r\nLet\u0027s include the deployment of MarkBind docs to Surge, while adding\r\nthe Github status that redirects to the link of the deployed site.",
            "fileTypesAndContributionMap": {
              "sh": {
                "insertions": 16,
                "deletions": 6
              },
              "gitignore": {
                "insertions": 2,
                "deletions": 0
              },
              "md": {
                "insertions": 301,
                "deletions": 172
              },
              "yml": {
                "insertions": 2,
                "deletions": 0
              },
              "json": {
                "insertions": 36,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 16762,
        "deletions": 5357,
        "date": "2020-04-17",
        "commitResults": [
          {
            "hash": "7b06e7f404b0e7a84fd91d533f184cbdc3bccd3c",
            "messageTitle": "[#1147] Generate random filetype colour when predefined colours are used up (#1148)",
            "messageBody": "The filetype colours are chosen through a rotation of the predefined \r\ncolour values. So if the number of filetypes exceeds the number of \r\npredefined colours, there will be repetitions of the same colour.\r\n\r\nThe repeated filetypes may be hard to distinguish among one\r\nanother, in terms of their colours.\r\n\r\nLet\u0027s generate a random colour for the filetypes after the standard\r\nselection of predefined colours have been exhausted.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 1
              },
              "js": {
                "insertions": 82,
                "deletions": 7
              }
            }
          },
          {
            "hash": "ad79bbad71bfbe4a2ca4461d9330acde09aad1db",
            "messageTitle": "[#1181] Allow filtering of ramps by file type (#1192)",
            "messageBody": "All ramps are shown even when some file types are filtered out, the\r\nsizes of ramps are also not adjusted when their filetypes are \r\nfiltered out.\r\n\r\nThis may cause confusion in users as they would think that the ramps \r\nwill be filtered out accordingly.\r\n\r\nLet\u0027s add the filtering of ramps by the file types that are selected, \r\nthe size of the ramp will also be adjusted based on that.\r\n\r\nAdditional Info:\r\n1. The current git log results does not include filetypes that are\r\nmodified, so I decided to get from the backend by changing the\r\ngit log format. The filetype details of each commit are also added\r\nto the commit.json\r\n\r\n2. \u0027git log --numstat --shortstat\u0027 is used instead of \u0027git log --stat\u0027\r\nto retrieve the log with files changed. This is because --stat only \r\nshows the sum of lines changed in file whereas --numstat displays \r\naddition and deletion separately. Addition and deletion of binary\r\nfiles will be \u0027-\u0027 and \u0027-\u0027.\r\n\r\n3. When removing a filetype from a ramp, the corresponding addition\r\nand deletion will be removed from the ramp. A ramp will only be \r\nremoved when all of it\u0027s filetypes are removed.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 224,
                "deletions": 40
              },
              "js": {
                "insertions": 54,
                "deletions": 1
              },
              "json": {
                "insertions": 16400,
                "deletions": 5308
              }
            }
          }
        ]
      },
      {
        "insertions": 79,
        "deletions": 16,
        "date": "2020-04-18",
        "commitResults": [
          {
            "hash": "bc9cf8a01f1c3a08b7254521b7656222fb77cba9",
            "messageTitle": "[#996] Add functionality to view code for entire repository (#1175)",
            "messageBody": "There\u0027s no way of viewing the code authored for the entire repository.\r\nThis is particularly useful when users want to see the code contribution\r\nof the repository as a whole.\r\n\r\nWe can allow this functionality by enabling the code icon when merge\r\ngroup.\r\n\r\nLet\u0027s add the functionality to view code for the entire repository, when\r\nmerge group is checked.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 13,
                "deletions": 7
              },
              "md": {
                "insertions": 1,
                "deletions": 0
              },
              "js": {
                "insertions": 65,
                "deletions": 9
              }
            }
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 15,
        "date": "2020-04-21",
        "commitResults": [
          {
            "hash": "f31051249067ef181c004d360c25cc9b1a8150e4",
            "messageTitle": "[#1170] Update total contribution to reflect based on checked file types (#1171)",
            "messageBody": "When some filetypes are unchecked, the contribution bar length adjusts \r\nto the correct length, while the total line contribution of each group \r\ndoes not. Additionally, when toggling sorting controls to decreasing \r\norder of contribution, groups with higher total contribution are seen \r\nto be in lower position than groups with lower contribution. This may \r\ncause confusion among users.\r\n\r\nLet\u0027s update the total contribution to reflect the total contribution \r\namong those file types that are checked.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 2
              },
              "md": {
                "insertions": 3,
                "deletions": 2
              },
              "js": {
                "insertions": 20,
                "deletions": 11
              }
            }
          }
        ]
      },
      {
        "insertions": 65,
        "deletions": 21,
        "date": "2020-05-08",
        "commitResults": [
          {
            "hash": "a1e70a75ab2b4d1266028aeb61bfd779d2b062eb",
            "messageTitle": "[#1242] Move removal of zoom hashes to be within v_zoom component (#1243)",
            "messageBody": "The removal of zoom hashes are done in main.js, while the removal\r\nof authorship hashes is done within the v_authorship component\r\nitself.\r\n\r\nWe can move the responsibility to remove zoom hashes to be within \r\nthe v_zoom component itself, in the \u0027beforeDestroy\u0027 hook. This \r\nwill result in a cleaner implementation and separation of concern.\r\n\r\nLet\u0027s move the removal of zoom hashes to be within v_zoom\r\ncomponent itself.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 16,
                "deletions": 14
              }
            }
          },
          {
            "hash": "ecd5594aef7f5cd2492e644d0411eb73321ba8e6",
            "messageTitle": "[#1244] Add handling of filenames wrapped in double quotes (#1247)",
            "messageBody": "When a filename contains special characters such as double quotes\r\nor the backslash character \\, git log will escape those characters and\r\nsurround the entire file name with double quotes.\r\n\r\nCommitInfoAnalyzer is not handling these cases, which will lead to an\r\nassertion error that fails the entire analysis.\r\n\r\nLet\u0027s add the handling of such cases, removing the surrounded quotes\r\nfrom the filenames, if available.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 49,
                "deletions": 7
              }
            }
          }
        ]
      },
      {
        "insertions": 254,
        "deletions": 7,
        "date": "2020-05-12",
        "commitResults": [
          {
            "hash": "838ef11f5e41638a07f26338e2e47ac0b789bf4b",
            "messageTitle": "[#1220] Add front end tests for summary chart functionalities (#1228)",
            "messageBody": "Our coverage for front end tests is rather low. UI regressions will be\r\nharder to discover due to this.\r\n\r\nLet\u0027s add front end tests for summary chart\u0027s functionalities such as \r\nmerge group, zoom, filter breakdown features and the restoring of \r\nsummary controls after page reloads.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 7,
                "deletions": 7
              },
              "js": {
                "insertions": 247,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 24,
        "deletions": 16,
        "date": "2020-05-19",
        "commitResults": [
          {
            "hash": "d5eec7cdc96194d73cb6c4df4a3c08a85bc88c3c",
            "messageTitle": "Fix bug when restoring zoom tab (#1261)",
            "messageBody": "When group by authors and groups are merged, the commits are \r\nnot shown correctly in the zoom tab after reloading the page.\r\n\r\nThis occurs especially for an author with contribution in several \r\nrepositories, as the repositories of the author are treated as \r\nseparate groups (should be pushed into same group) within the\r\n\u0027restoreZoomFiltered\u0027 method. This leads to the merging of group \r\nnot being able to merge all the repositories of the author, as \r\nthey are treated as separate groups. \r\n\r\nThe searched field is also not handled by zoom tab as well, \r\nleading to the reloaded zoom tab containing commits that are\r\nnot by users that match the searched field.\r\n\r\nLet\u0027s modify the \u0027restoreZoomFiltered\u0027 method to treat the\r\nrepositories of an author to be in the same group, instead of \r\nbeing separate groups. Let\u0027s also add the handling of the\r\nsearch field when reloading the zoom tab.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 1,
                "deletions": 0
              },
              "js": {
                "insertions": 23,
                "deletions": 16
              }
            }
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 4,
        "date": "2020-05-23",
        "commitResults": [
          {
            "hash": "383ee786785245474c0eb49cdfc28dd20da05b71",
            "messageTitle": "[#1259] Add index number and files changed count (#1262)",
            "messageBody": "The authorship tab does not show the total number of files changed \r\nas well as the index of the files changed.\r\n\r\nLet\u0027s add the index of the files changed together with the files \r\nchanged count. The numbers will be reactive based on the checked \r\nfile types.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 3,
                "deletions": 3
              }
            }
          },
          {
            "hash": "61dbe2cb7d041ac2c093038148ae120581aa35fc",
            "messageTitle": "[#1241] Restore checked file types (#1256)",
            "messageBody": "The checked file types in summary panel is not restorable after\r\nreloading the page.\r\n\r\nThis is due to the checked file types not being saved in the hash.\r\n\r\nLet\u0027s add the checked file types hash to allow the checked file types\r\nto be restored after reloading the page.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 14,
                "deletions": 1
              }
            }
          }
        ]
      }
    ]
  },
  "authorFinalContributionMap": {
    "jamessspanggg": 13723
  },
  "authorFileTypeContributionMap": {
    "jamessspanggg": {
      "gitignore": 2,
      "json": 11387,
      "yml": 10,
      "md": 317,
      "sh": 67,
      "js": 942,
      "pug": 66,
      "scss": 351,
      "java": 581
    }
  },
  "authorContributionVariance": {
    "jamessspanggg": 1315097.9
  },
  "authorDisplayNameMap": {
    "jamessspanggg": "James Pang"
  }
}
